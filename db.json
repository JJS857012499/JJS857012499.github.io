{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/hexo-theme-next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1488963518799},{"_id":"themes/hexo-theme-next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1488963518805},{"_id":"themes/hexo-theme-next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1488963518810},{"_id":"themes/hexo-theme-next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1488963518816},{"_id":"themes/hexo-theme-next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1488963518821},{"_id":"themes/hexo-theme-next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1488963518828},{"_id":"themes/hexo-theme-next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1488963518837},{"_id":"themes/hexo-theme-next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1488963518862},{"_id":"themes/hexo-theme-next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1488963518870},{"_id":"themes/hexo-theme-next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1488963518881},{"_id":"themes/hexo-theme-next/_config.yml","hash":"b07a8a65e14165840542b5de9051c7accd98340b","modified":1497843037280},{"_id":"themes/hexo-theme-next/_config.yml.bak","hash":"5719a71f5230dceceae2ae74220403739aac933b","modified":1488963518905},{"_id":"themes/hexo-theme-next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1488963518909},{"_id":"themes/hexo-theme-next/gulpfile.coffee","hash":"79dcff7f65f262755f99122fca27986b52db098f","modified":1488963518915},{"_id":"themes/hexo-theme-next/package.json","hash":"a5c189d4c4e946e936d3b5e29e2d81ddaf03ff96","modified":1488963525280},{"_id":"source/_posts/搭建gitPage博客.md","hash":"4ef37f48835ea93cc36240d0a5fd7db3778072ce","modified":1489741181170},{"_id":"source/categories/index.md","hash":"00eca26db8eaf576dc3718deb970eba51b31aa29","modified":1488963518786},{"_id":"source/tags/index.md","hash":"66481cf5d3f9d3bc86cac8fef4cf02b3fb145c9c","modified":1488963518790},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"e6aed24f060300a0ea31099a7d7186ec03b6cb0d","modified":1488963518926},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"db6a9d669f4b6282cda6c0a2d4e03d3e308a4846","modified":1488963518922},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"e6aed24f060300a0ea31099a7d7186ec03b6cb0d","modified":1488963518928},{"_id":"themes/hexo-theme-next/languages/id.yml","hash":"d8b9dc017da0be7f71fda1cacd8064cbc38963b9","modified":1488963518939},{"_id":"themes/hexo-theme-next/languages/fr-FR.yml","hash":"e86e563d7ac8e763a1e6afdebcfa10c66c207c9c","modified":1488963518934},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"bc89436a2a015ef72f43f265e56e37d94e73c0cd","modified":1488963518954},{"_id":"themes/hexo-theme-next/languages/ko.yml","hash":"c59676f2af80c3c594c34c4a0fcbf65fd8864ff3","modified":1488963518967},{"_id":"themes/hexo-theme-next/languages/pt-BR.yml","hash":"4b91f96b07e05705b28964df7460466c9b522e2c","modified":1488963518972},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"f364905121a816c9797acce07c0a4f248965b29a","modified":1488963518984},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"e71189d203feaeae515c79a46f0462f99aadc941","modified":1488963519030},{"_id":"themes/hexo-theme-next/languages/zh-Hans.yml","hash":"5b69ab4ab097d37948c4f51ccddffd312ce031c1","modified":1488963519036},{"_id":"themes/hexo-theme-next/languages/zh-hk.yml","hash":"abd889d418c1c25b5e8f837bbbaedb9389e935eb","modified":1488963519041},{"_id":"themes/hexo-theme-next/languages/zh-tw.yml","hash":"dff76bee4ffa4b70b8ece2785bcd4b0f930bbcc5","modified":1488963519050},{"_id":"themes/hexo-theme-next/layout/_layout.swig","hash":"54366831bac735c5916610c252a6b12550412be2","modified":1488963519117},{"_id":"themes/hexo-theme-next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1488963524159},{"_id":"themes/hexo-theme-next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1488963524433},{"_id":"themes/hexo-theme-next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1488963524446},{"_id":"themes/hexo-theme-next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1488963524453},{"_id":"themes/hexo-theme-next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1488963524459},{"_id":"themes/hexo-theme-next/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1488963524464},{"_id":"themes/hexo-theme-next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1488963524623},{"_id":"themes/hexo-theme-next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1488963526642},{"_id":"themes/hexo-theme-next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1488963527603},{"_id":"themes/hexo-theme-next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1488963530242},{"_id":"themes/hexo-theme-next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1488963530262},{"_id":"themes/hexo-theme-next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1488963530279},{"_id":"themes/hexo-theme-next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488963528662},{"_id":"source/_posts/Node.js/NPM-使用介绍.md","hash":"a39fd44033eac1db88e37dc1b39075c0ccf9a7e9","modified":1489335071690},{"_id":"source/_posts/Node.js/Node.js-第一个应用.md","hash":"0696d45564a61442967b69a5e7c9dfa989093b9f","modified":1489334628500},{"_id":"source/_posts/Node.js/Node.js简介.md","hash":"2884168f8d78dcfe4705b90af8078aaa1bb1fc6f","modified":1489334350622},{"_id":"source/_posts/activityMq/ActivityMq安装.md","hash":"225f06c9d34f85f4862d9c0cab1d89498fb31d7e","modified":1489735014042},{"_id":"source/_posts/android/Android自动填写获取到的验证码.md","hash":"f260ad278a5f8c864a6318ec3375c7288f8d1cc0","modified":1489415417050},{"_id":"source/_posts/android/Android-Studio使用时源码到处报红色警告，运行时又没错.md","hash":"057456c0163601433984642366013327040829c2","modified":1489415797432},{"_id":"source/_posts/android/Why-Warning-Unable-to-find-optional-library-org-apache-http-legacy-occurs.md","hash":"982ecbfa7d69fb4b9d609ce8c674f0c6db5b4ea1","modified":1489417473279},{"_id":"source/_posts/android/为table的td添加点击事件.md","hash":"008fecedc4c1c2d858d261a6fb0cdbd29c379952","modified":1489333720533},{"_id":"source/_posts/android/小工具.md","hash":"8140dd679b4fd0b9d3daeb184250581341527b05","modified":1489415304616},{"_id":"source/_posts/android/提示插件版本太旧.md","hash":"ecff802aec7b41863df8161ceda04bb1d57539fb","modified":1489417316460},{"_id":"source/_posts/android/获取apk的sha1值.md","hash":"e4c8d4015b7e6c3b0c772d25a56eca39dc2c71bf","modified":1489417188339},{"_id":"source/_posts/android/设置编码.md","hash":"a19352f28ebeb8e77a01903f4b9d72cec8f3e667","modified":1489417492609},{"_id":"source/_posts/elasticsearch/安装Elasticsearch.md","hash":"8d2e5f9c3ea42c423ab36c432cac25d76083e80d","modified":1489733903476},{"_id":"source/_posts/elasticsearch/安装Elasticsearch-head插件.md","hash":"f7354bee74b010fb889787828bd1f404203cbc45","modified":1489734223868},{"_id":"source/_posts/freeMarker/FreeMarker-list的遍历.md","hash":"b72a7310553870b525bb96abe4a911fea094a8b2","modified":1489732577404},{"_id":"source/_posts/freeMarker/FreeMarker-基础知识-表达式-引用.md","hash":"0f3d3e2e849490c9993eab1450e4d31d10e7789d","modified":1489737702271},{"_id":"source/_posts/freeMarker/FreeMarker对null值得处理.md","hash":"0296e3a912161db19e9d63eecf47edf2e3f2fd64","modified":1489732806385},{"_id":"source/_posts/freeMarker/Freemarker中对List进行排序.md","hash":"7f34916c03dc99c9a7ae19176a71478113b28b2d","modified":1489732068573},{"_id":"source/_posts/javascript/file控件的onchang事件只触发一次.md","hash":"df0e42d51d3d3d4913127922eed6f35bca7ee689","modified":1489333252134},{"_id":"source/_posts/javascript/jQuery中的-bind-、-live-和-delegate-之间区别分析.md","hash":"e9243df59d731c12cc07ac3d7d87fd8ac53f65fa","modified":1489335152534},{"_id":"source/_posts/javascript/判断当前窗口是不是最上层窗口.md","hash":"12ea45125b1931daba53e911895d5447e352354f","modified":1489334019804},{"_id":"source/_posts/java基础/HashMap-LinkHashMap-TreeMap的区别.md","hash":"6eab22e73d8113e7e9c42c1b1523ed5de4ddd382","modified":1489720086490},{"_id":"source/_posts/java基础/ThreadLocal理解.md","hash":"36679fa2eaaf0303d322bb4d32ecb3893cda1334","modified":1489929649161},{"_id":"source/_posts/jee/HttpServletRequest常用获取URL的方法.md","hash":"132a4ac4eeb18b0a2c626bea79b9ca544fdb0d04","modified":1489930119842},{"_id":"source/_posts/jee/decorator（HTML装饰器）.md","hash":"0fc9d86ddbaf7b7f98ae1d1388c215dc5ffcef76","modified":1490003723228},{"_id":"source/_posts/jee/java订单号（时间加流水号）.md","hash":"717d146ad6ecd6e7fcdddb7bc80b0899e0beca19","modified":1489997814083},{"_id":"source/_posts/jee/jsp页面格式化显示double数据.md","hash":"f6cdfef2d1cf0386fbaa48f6a34bf65266fce2e8","modified":1490000380528},{"_id":"source/_posts/mybatis/mybatis在xml文件中处理大于号小于号的方法.md","hash":"d46b2e7199eaaed2d3b879222f3960dc9cf727e6","modified":1489736693520},{"_id":"source/_posts/maven/idea新建多模块maven项目（树结构和水平结构）.md","hash":"25055dedd87afeee44e2d1f05e184b73e20da449","modified":1489721885719},{"_id":"source/_posts/maven/maven创建普通web项目.md","hash":"390e9cd5de3b96c847f66f860bf737cb2ef140d6","modified":1489721469453},{"_id":"source/_posts/maven/创建普通maven项目.md","hash":"68ca5c4e523306d52d98e31610ee0001311ef8a3","modified":1489581846295},{"_id":"source/_posts/maven/调整maven项目编译jdk版本.md","hash":"46e57746864601e333261677353f33b8e0c715dc","modified":1490002232038},{"_id":"source/_posts/maven/调整maven编译jdk版本.md","hash":"5ddb9cd8d0a9063a4848622b7891fa3d33ce1ce6","modified":1489916229100},{"_id":"source/_posts/mysql/union和union-all区别.md","hash":"206cbef793efae31661b4e7c1d56f863f7126eab","modified":1489373812140},{"_id":"source/_posts/php/apache-php环境搭建.md","hash":"bc72ab9cf0cb0e5d793b555799fc0cc3ee03e576","modified":1489718953764},{"_id":"source/_posts/spring/Spring-Data-JPA-初步了解.md","hash":"9e9cec1d90bf1ff20be91d61b2b612dc5a79b303","modified":1489934555450},{"_id":"source/_posts/spring/Spring-MVC-中-HandlerInterceptorAdapter的使用.md","hash":"c321bffc0a75ade582f653839a6f1879c02f0f35","modified":1489934436830},{"_id":"source/_posts/spring/Spring-声明式事务，propagation属性列表.md","hash":"a92b4e2195a06be6fe67a55e7a86735b7a11fa81","modified":1490004424091},{"_id":"source/_posts/spring/使用注解方式注入HttpServletRequest-，HttpServletResponse-等对象.md","hash":"59c8e154ec1510fd974654d2c05776e5b3980df1","modified":1489934209409},{"_id":"source/_posts/云主机/CentOS6-5安装vncserver实现图形化访问.md","hash":"45fe78364462b73e4218002b7a17a0795666d56b","modified":1489331857231},{"_id":"source/_posts/云主机/Linux下解压xz格式文件.md","hash":"e7db39aa61b09cf470cf3edaae28eecd8cdc4043","modified":1489744799420},{"_id":"source/_posts/云主机/CentOS清理内存、内存回收释放及内存使用查看的相关命令.md","hash":"cfb6fa4ee76edcc41dd9292340b1a4ba702917be","modified":1489331857327},{"_id":"source/_posts/云主机/Linux配置JDK环境.md","hash":"bc895ebd798217fc8936c348e49e5f272c010879","modified":1489332155187},{"_id":"source/_posts/云主机/git冲突解决.md","hash":"281afc538aac7c1deae190ef0a6077c5355da198","modified":1489331867455},{"_id":"source/_posts/云主机/git配置.md","hash":"85eebc3b3e1e38a3500d83c9959e62b6cae4e52f","modified":1489331875136},{"_id":"source/_posts/云主机/linux上多线程下载.md","hash":"000dfe13655822c6034801fe17b2348d2103dc0c","modified":1489332145448},{"_id":"source/_posts/云主机/maven安装.md","hash":"02c13a3d80a30504fb7639f0133ad14d258ced66","modified":1489332167929},{"_id":"source/_posts/云主机/mysql安装.md","hash":"16393ce65a57c072ce3fbe068ccc1dd70f15cef2","modified":1489373711690},{"_id":"source/_posts/云主机/mysql安装后修改root密码.md","hash":"85476b6e68248de5cb51e910208eb2c9f0615215","modified":1489373706415},{"_id":"source/_posts/云主机/mysql客户端安装.md","hash":"27516944e6de1789c57025cc3d87450b79add95d","modified":1489373698296},{"_id":"source/_posts/云主机/mysql表名不区分大小写.md","hash":"abaa19cca89352cc7e1b83922dd95ed3c6779fe9","modified":1489374180900},{"_id":"source/_posts/云主机/mysql远程连接.md","hash":"be14e39231b88bfe0c4d8f7ec84fdaa9ba195472","modified":1489374361504},{"_id":"source/_posts/云主机/mysql配置.md","hash":"ca687c58de0635260807b01f1e8320f5a9914f1f","modified":1489373701454},{"_id":"source/_posts/云主机/nginx启动、重启、关闭.md","hash":"86bdf508df19acd96a6ddb4b76c603092f177ad5","modified":1489331919032},{"_id":"source/_posts/云主机/nginx安装.md","hash":"1342317dcdc1006138c69f461554724b672ce795","modified":1489332187683},{"_id":"source/_posts/云主机/ngnix配置.md","hash":"3a9bacb0efc9422594683d31d79190c75fe2c217","modified":1489331995860},{"_id":"source/_posts/云主机/nohup命令详解.md","hash":"29f447bae1f21d136dba0e0fc520eb70f11ded03","modified":1489332004131},{"_id":"source/_posts/云主机/ubuntu16的eclipse很卡.md","hash":"7952a3d000afbb4a8f71d0ae975ce34f4f4ec2c6","modified":1489332012315},{"_id":"source/_posts/云主机/ubuntu（firefox、chromium）安装flash插件.md","hash":"3194c66d5f07e778a170f18734776c79767c5ee1","modified":1489127178626},{"_id":"source/_posts/云主机/启动脚本和启动图标.md","hash":"93a05626a436aa14a184aa3f2febb80a31379d42","modified":1489332042917},{"_id":"source/_posts/python/1-初步摸索python.md","hash":"64bd28bd743789faf05ad013a7fc384ff77b3c23","modified":1497842259202},{"_id":"source/_posts/python/2-Python基础语法.md","hash":"88382540cfea4ef5b52420d03485358832570aee","modified":1497856733392},{"_id":"source/_posts/加密与解密/js端RSA加密，后台javaRSA解密.md","hash":"c541c8fca8c0e3c94b2d8844269df20d72fe00b3","modified":1489934031886},{"_id":"source/_posts/工具/Eclipse中设计tomcat的内存大小.md","hash":"7ec700336865ac4beae73a018053e9ffc4f2f8f2","modified":1490003159477},{"_id":"source/_posts/工具/eclipse-ermaster-插件.md","hash":"b0fe77766a1edcbb47baaf058c6c551cdf3bebd0","modified":1490002453209},{"_id":"source/_posts/工具/idea常用快捷键.md","hash":"e3657497c8d10abadfa6a5e124b5e2fa50e93e9c","modified":1489916055590},{"_id":"source/_posts/工具/批量删除-svn文件夹、-svn文件.md","hash":"21abc054e9660df461448b133116571cbcad265b","modified":1490000739210},{"_id":"source/_posts/工具/idea热部署.md","hash":"030a0cbaffee5c05d1b70d2244a33b32aa07f833","modified":1489913833921},{"_id":"source/_posts/数据库/终端连接oracle数据库.md","hash":"295a3b8c0489aaf397a195b35731c95aa8eeca8b","modified":1489136351599},{"_id":"source/_posts/算法/河内塔.md","hash":"6e1e6aa39bd1e18577ae7b555acd212720fdac2f","modified":1491490131365},{"_id":"source/_posts/虚拟机/虚拟机中linux系统启动的tomcat无法在本机访问的问题.md","hash":"ffb3da05a627976b0f6e602a7928374b64acd126","modified":1489332218474},{"_id":"themes/hexo-theme-next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1488963519099},{"_id":"themes/hexo-theme-next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1488963519100},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1488963519126},{"_id":"themes/hexo-theme-next/layout/_macro/post.swig","hash":"032e10779704710396b243b32b4dc98ca0e16249","modified":1488963519161},{"_id":"themes/hexo-theme-next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1488963519188},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.swig","hash":"e7f58154ac734088372888742e0029ce7c690511","modified":1488963519195},{"_id":"themes/hexo-theme-next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1488963519712},{"_id":"themes/hexo-theme-next/layout/_partials/comments.swig","hash":"cd74d7d0aa2097de0e73e8e53cca5d022cec8c43","modified":1488963519723},{"_id":"themes/hexo-theme-next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1488963519729},{"_id":"themes/hexo-theme-next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1488963520076},{"_id":"themes/hexo-theme-next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1489026360466},{"_id":"themes/hexo-theme-next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1488963520253},{"_id":"themes/hexo-theme-next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1488963520259},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1488963520268},{"_id":"themes/hexo-theme-next/layout/_partials/search.swig","hash":"109b3d3403c72ac09926e35a1d00c6d36cc4f7fa","modified":1488963520273},{"_id":"themes/hexo-theme-next/layout/_scripts/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1488963521148},{"_id":"themes/hexo-theme-next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1488963521163},{"_id":"themes/hexo-theme-next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1488963521157},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.swig","hash":"e9beddda9758d8739c41fc8c67b2e72fc29c1244","modified":1488963523424},{"_id":"themes/hexo-theme-next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1488963527618},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1488963527632},{"_id":"themes/hexo-theme-next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1488963527664},{"_id":"themes/hexo-theme-next/scripts/tags/exturl.js","hash":"4de8b315a58095b39659b515387ea8091a67a9a4","modified":1488963527653},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1488963527689},{"_id":"themes/hexo-theme-next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1488963527698},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1488963528662},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1488963528670},{"_id":"themes/hexo-theme-next/source/images/avatar.jpg","hash":"30d95fd0059412a1fb842d281ffe7a217872c7ce","modified":1488963528678},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1488963528672},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1488963528683},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1488963528689},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1488963528695},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1488963528707},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1488963528713},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1488963528721},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1488963528727},{"_id":"themes/hexo-theme-next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1488963528728},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1488963528730},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1488963528736},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1488963528741},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1488963528743},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488963521229},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488963521229},{"_id":"themes/hexo-theme-next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488963528473},{"_id":"themes/hexo-theme-next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488963528473},{"_id":"themes/hexo-theme-next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488963528491},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488963528623},{"_id":"themes/hexo-theme-next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488963528646},{"_id":"source/_posts/elasticsearch/安装Elasticsearch/307afbba-50a9-49f0-8500-8e362ff809ae.png","hash":"6d8aa23ce9a08b3d90aee91e8348f7d9d3fef3c2","modified":1487389910000},{"_id":"source/_posts/java基础/ThreadLocal理解/6a80dba1-4290-4fbc-8ca2-06be465d886a.png","hash":"7c72c3749334830628513f44d11a54e8d584a3ec","modified":1473234190000},{"_id":"source/_posts/java基础/ThreadLocal理解/cf785e60-9c92-4bfb-977c-4e32a114e809.png","hash":"d512428cf333714c7c857c8e92050c80e9e58141","modified":1473234190000},{"_id":"source/_posts/jee/HttpServletRequest常用获取URL的方法/7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png","hash":"c9581df1bc14367ef91e845a9559f1275b2fe93e","modified":1471923218000},{"_id":"source/_posts/maven/idea新建多模块maven项目（树结构和水平结构）/82811fb4-084a-471a-a470-12957c376cd4.png","hash":"1a61ce60bd2bf23239e5faaa0b4b0a89a61fb716","modified":1487067332000},{"_id":"source/_posts/maven/maven创建普通web项目/e4dd0c75-7d51-4b91-a4c0-7a401477c461.png","hash":"30d572bbbe192e8254497def296bd50e2dc94c40","modified":1483068790000},{"_id":"source/_posts/maven/创建普通maven项目/516becd9-201b-4bbb-a49a-45dacec4195f.png","hash":"9be56e73a867e58010a3242554e217fe0047577c","modified":1483066897000},{"_id":"source/_posts/maven/创建普通maven项目/a1d9cddc-205b-4b3f-8bfc-5ff884c30df9.png","hash":"3e53f8b57ea969ef299ff2af1a990f204320e972","modified":1483066897000},{"_id":"source/_posts/maven/创建普通maven项目/aafa98fb-2088-4af2-bcfb-804d391c81ba.png","hash":"fb3698a02b6b3b9c5db6806985e0e28d5bffcaac","modified":1483066897000},{"_id":"source/_posts/python/1-初步摸索python/57G3PTFC9YBV`2CH9A.png","hash":"1f59f26869b3526550f80ebafc14ea16723f1af0","modified":1497842146995},{"_id":"source/_posts/python/1-初步摸索python/Q.png","hash":"fd5c10d6d3e9e25b7d5bfcd9206c2e10d70fcf2e","modified":1497841286147},{"_id":"source/_posts/算法/河内塔/hanoi-1.jpg","hash":"477e61ee39073eee13da7a759b45166faa07d678","modified":1478326633122},{"_id":"source/_posts/算法/河内塔/hanoi-3.jpg","hash":"455def2c77396aceae7b8993e5388af903e9feae","modified":1478326633130},{"_id":"source/_posts/算法/河内塔/hanoi-2.jpg","hash":"2be7a70610a001f10e92c9a2b1901c10ae003423","modified":1478326633126},{"_id":"source/_posts/算法/河内塔/hanoi-4.jpg","hash":"8c723b371731a63b40a071ae65131da168880b1f","modified":1478326633135},{"_id":"themes/hexo-theme-next/layout/_components/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1488963519060},{"_id":"themes/hexo-theme-next/layout/_components/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1488963519098},{"_id":"themes/hexo-theme-next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1488963520237},{"_id":"themes/hexo-theme-next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1488963520243},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.swig","hash":"b6e4754498b5eeb470e11fd596227552d9070605","modified":1488963520281},{"_id":"themes/hexo-theme-next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1488963520297},{"_id":"themes/hexo-theme-next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1488963520303},{"_id":"themes/hexo-theme-next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1488963520322},{"_id":"themes/hexo-theme-next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1488963520406},{"_id":"themes/hexo-theme-next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1488963520413},{"_id":"themes/hexo-theme-next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1488963520900},{"_id":"themes/hexo-theme-next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1488963521228},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1488963521251},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics.swig","hash":"8b34af99cb673853fd948c02d07eb11eb3fb41b4","modified":1488963521529},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments.swig","hash":"03d259066399c1eb4a436ea4e5e7a4802426d72c","modified":1488963522412},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1488963522914},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/localsearch.swig","hash":"4a10634dba16ddf2a3cbd4908dfbc97e9aa45469","modified":1488963523071},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1488963523122},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1488963523186},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1488963523252},{"_id":"themes/hexo-theme-next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1488963528473},{"_id":"themes/hexo-theme-next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1488963528479},{"_id":"themes/hexo-theme-next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1488963528490},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1488963528623},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1488963528632},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"008955b907a15e86bc92e6765614cc099abf8bf1","modified":1488963528645},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1488963528785},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","hash":"0c7d927ca5a628a01a63da6b4cbaf832292685b8","modified":1489030070024},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1488963528904},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1488963528925},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1488963528943},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1488963529007},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","hash":"a13d5396d2c5803cdd9732c727f5f2308b47368c","modified":1488963529070},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1488963529122},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","hash":"988f29f78e68fa184c4412b722f5895fa78a4783","modified":1488963529143},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1488963529148},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1488963529504},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1488963529509},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1488963529500},{"_id":"themes/hexo-theme-next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1488963529656},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1488963529662},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1488963529671},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1488963529678},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1488963529743},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1488963529747},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1488963529752},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1488963529756},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1488963529760},{"_id":"themes/hexo-theme-next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1488963529986},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1488963530040},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1488963530053},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1488963530060},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1488963530067},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1488963530082},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1488963530094},{"_id":"themes/hexo-theme-next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1488963530138},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1488963530142},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1488963530203},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1488963530220},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1488963530237},{"_id":"source/_posts/工具/Eclipse中设计tomcat的内存大小/45ca9205-f30f-42fe-97b3-3efee151ba7d.png","hash":"29ac39b1be8823adfa9fb6e7a0fa53fd2ee1608c","modified":1480921334000},{"_id":"source/_posts/工具/Eclipse中设计tomcat的内存大小/6295420a-7dd6-4bc7-9001-c964155695b3.png","hash":"415142166cf0f06934359b396d6e3318d8a473ba","modified":1480921334000},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1488963530036},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1488963521865},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1488963522097},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1488963522111},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1488963522118},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1488963522183},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1488963522140},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1488963522224},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/tencent-mta.swig","hash":"e9a0590dafde1046356620dd2b81e83b6b3b0936","modified":1488963522278},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1488963522405},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments/disqus.swig","hash":"e4a13e8cd19762ef3aea0e59dfae8b3c1f251f11","modified":1488963522524},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1488963522600},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1488963522659},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1488963522686},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments/livere.swig","hash":"5830a52c2a555d3a1f19b67d7bf3d072376cdea9","modified":1488963522706},{"_id":"themes/hexo-theme-next/layout/_scripts/third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1488963522776},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1488963527705},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1488963527710},{"_id":"themes/hexo-theme-next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1488963527716},{"_id":"themes/hexo-theme-next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1488963527721},{"_id":"themes/hexo-theme-next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1488963527725},{"_id":"themes/hexo-theme-next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1488963528186},{"_id":"themes/hexo-theme-next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1488963528328},{"_id":"themes/hexo-theme-next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1488963528429},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1488963528434},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1488963528444},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1488963528450},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1488963528459},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1488963528463},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1488963528498},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1488963528507},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1488963528511},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1488963528520},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1488963528527},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1488963528536},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1488963528546},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1488963528563},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1488963528570},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1488963528575},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1488963528577},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1488963528581},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1488963528587},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"fd8674eca737f4bb3b1ca66a3137f65922e2150a","modified":1488963528591},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1488963528597},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1488963528602},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1488963528612},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1488963528616},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1488963529089},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1488963529512},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1488963529513},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1488963529514},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1488963529519},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1488963529520},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1488963529521},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1488963529587},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1488963529620},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1488963529650},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1488963529702},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1488963529738},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1488963529765},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1488963529778},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1488963529771},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1488963530117},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1488963530132},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1488963529977},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1488963529982},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1488963530171},{"_id":"themes/hexo-theme-next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1488963527729},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1488963527735},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1488963527767},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1488963527778},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1488963527786},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1488963527932},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1488963528107},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1488963528149},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/highlight.styl","hash":"d406a09af606be82f716c15e4ad597b7fdcf0728","modified":1488963528141},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1488963528155},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1488963528160},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1488963528169},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1488963528175},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1488963528180},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1488963528191},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1488963528211},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1488963528204},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1488963528221},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1488963528226},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-meta.styl","hash":"61ec8a8481e8b76f2943235256c6d4f89c751c1c","modified":1488963528233},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1488963528238},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1488963528243},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1488963528249},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1488963528254},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1488963528264},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post.styl","hash":"011d5828b4972b2df0b429794b4466ba5bc1b49e","modified":1488963528269},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1488963528274},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1488963528280},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1488963528285},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1488963528290},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1488963528299},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1488963528304},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1488963528309},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1488963528316},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1488963528321},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1488963528337},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1488963528347},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1488963528356},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1488963528362},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1488963528371},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tags.styl","hash":"38c0db81a7361b947aeb8a4cc2919ffd9b33503e","modified":1488963528376},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1488963528382},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1488963528387},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1488963528393},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1488963528399},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1488963528404},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1488963528409},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/localsearch.styl","hash":"6516b70ee9e44f1cf9443412cc31bcccb6cdb684","modified":1488963528414},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/third-party.styl","hash":"dc944a01dd59f5ed2d44bb22fdb21fc3f455948f","modified":1488963528419},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1488963528549},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1488963528554},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1488963528582},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1488963529529},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1488963529522},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1488963529546},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1488963529556},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1488963529562},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1488963529583},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1488963529787},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1488963529795},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1488963529971},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1488963529483},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1488963529961}],"Category":[{"name":"hexo","_id":"cj43taa8l0003r8syacpdu4gw"},{"name":"Node.js","_id":"cj43taaca000br8syicu2y79o"},{"name":"ActivityMq","_id":"cj43taact000rr8syl57x1jtq"},{"name":"android","_id":"cj43taacz000yr8sy0u9qbw27"},{"name":"javascript","_id":"cj43taadi001gr8sy2box5ipp"},{"name":"Elasticsearch","_id":"cj43taae80025r8syoeuv08pm"},{"name":"freeMarker","_id":"cj43taaei002kr8syj8dr44pq"},{"name":"java基础","_id":"cj43taaey0037r8syx2mval8p"},{"name":"jee","_id":"cj43taaf8003jr8symzqclghb"},{"name":"mybatis","_id":"cj43taaft0048r8sy2ivpd1pj"},{"name":"maven","_id":"cj43taag2004fr8sy8rugaj28"},{"name":"mysql","_id":"cj43taagl0059r8sy4fhfhapl"},{"name":"spring","_id":"cj43taagr005fr8sy27ag77af"},{"name":"php","_id":"cj43taah7005rr8syuae412ou"},{"name":"云主机","_id":"cj43taahf0061r8synjib3241"},{"name":"python","_id":"cj43taai20085r8sykfa37aya"},{"name":"加密与解密","_id":"cj43taai6008gr8syj1l1690b"},{"name":"工具","_id":"cj43taai7008lr8sygs5ubgvk"},{"name":"数据库","_id":"cj43taaic0094r8syxh153cyo"},{"name":"算法","_id":"cj43taaie0097r8syg1akocob"},{"name":"虚拟机","_id":"cj43taaig009cr8syiyy6df0w"}],"Data":[],"Page":[{"title":"分类","date":"2017-03-08T03:51:11.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-03-08 11:51:11\ntype: \"categories\"\n---\n","updated":"2017-03-08T08:58:38.786Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cj43taa8f0001r8sy2ste2jys","content":"","excerpt":"","more":""},{"title":"标签","date":"2017-03-08T03:47:01.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-03-08 11:47:01\ntype: \"tags\"\n---\n","updated":"2017-03-08T08:58:38.790Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj43taa8i0002r8sy1lbe5m6c","content":"","excerpt":"","more":""}],"Post":[{"title":"搭建gitPage博客","date":"2017-03-08T02:26:31.000Z","_content":"在这里我把我用hexo搭建gitPage博客记录下来，同时也给我一个同学参考参考哈~~~\n## 环境准备\n需要[git](https://git-scm.com/),[Node.js](https://nodejs.org/en/)环境\n## 安装hexo\n利用 npm 命令即可安装。（在任意位置点击鼠标右键，选择Git bash）\n```shell\nnpm install -g hexo\n```\n## 创建hexo文件夹\n选择存放hexo文件的位置,执行以下指令(Git bash终端下)，Hexo即会自动在目标文件夹建立网站所需要的所有文件。\n```shell\nhexo init\n```\n## 安装依赖包\n```shell\nnpm install\n```\n## 本地查看\n现在我们已经搭建起本地的hexo博客了，执行以下命令(在hexo文件下)，然后到浏览器输入localhost:4000看看。\n```shell\nhexo generate #此命令是生成静态页面，不执行该命令也可以\nhexo server\n```\n到此，本地服务以及搭建好了。\n\n## 打包上传到github\n### 如果没有github账户，则需要注册\n### 创建仓库，配置ssh秘钥\n*注意*：Repository name命名规则：你的github账号.github.io (这个一定要这么命名，具体我也不清楚)\n## hexo使用\n目录结构\n.\n├── .deploy #需要部署的文件\n├── node_modules #Hexo插件\n├── public #生成的静态网页文件\n├── scaffolds #模板\n├── source #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里\n| ├── _drafts #草稿\n| └── _posts #文章,可以用子文件来存放文章\n├── themes #主题\n├── _config.yml #全局配置文件\n└── package.json\n\n## 全局配置 _config.yml\n```shell\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: 深水暗流\nsubtitle: 冰是睡着的水\ndescription: 一个用gitpage来当笔记的家伙\nauthor: JJS\nemail: 857012499@qq.com\nlanguage: zh-Hans\ntimezone:\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://jjs857012499.github.io\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: true\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 10\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: hexo-theme-next #（默认只有一套主题），需要把下载的主题放在theme文件下\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: git@github.com:JJS857012499/JJS857012499.github.io.git\n  branch: master\n\n#添加搜索\nalgolia:\n  applicationID: 'OAK683V6NK'\n  appId: 'OAK683V6NK'\n  apiKey: '28f4a0e09972bf5b783013b7410faebe'\n  adminApiKey: 'c713030255b892af9297f242c0b6c0f3'\n  indexName: 'jjs857012499.github.io'\n  chunkSize: 5000\n  fields:\n    - title\n    - slug\n    - path\n    - content:strip\n```\n*注意*：\n- 配置文件的冒号“:”后面有一个空格\n- repo: 刚刚github创库地址.git\n## hexo命令行使用\n```shell\nhexo help #查看帮助\nhexo init #初始化一个目录\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成网页，可以在 public 目录查看整个网站的文件\nhexo server #本地预览，'Ctrl+C'关闭\nhexo deploy #部署.deploy目录\nhexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**\n```\n简写\n```shell\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n## 编辑文章\n### 新建文章\n```shell\nhexo new \"标题\"\n```\n在 _posts 目录下会生成文件 标题.md\n```shell\ntitle: Hello World\ndate: 2015-07-30 07:56:29 #发表日期，一般不改动\ncategories: hexo #文章文类\ntags: [hexo,github] #文章标签，多于一项时用这种格式\n---\n正文，使用Markdown语法书写\n编辑完后保存，hexo server 预览\n```\n### hexo部署\n执行下列指令即可完成部署。\n```shell\nhexo generate\nhexo deploy\n```\nhexo deploy问题：Deployer not found: git\n执行\n```shell\nnpm install hexo-deployer-git --save\n```\n重新deploy即可\n## 图片\n我这里是使用本地的图片\n### 安装\n```shell\nnpm install hexo-asset-image --save\n```\n1. 安装该插件后，每次hexo new 新建博文后，会在该文件同级目录下生成一个和文件同名的文件夹，该文件夹就是用来存放图片的\n2. 确保你的_config.yml 配置 post_asset_folder: true\n3. 然后使用\n```shell\n![logo](logo.jpg)\n```\n在博文中插入logo.jpg.\n\n来源：\n[http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/](http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/)\n[http://www.tuicool.com/articles/umEBVfI](http://www.tuicool.com/articles/umEBVfI)","source":"_posts/搭建gitPage博客.md","raw":"---\ntitle: 搭建gitPage博客\ndate: 2017-03-08 10:26:31\ncategories: hexo #文章文类\ntags: [hexo,github] #文章标签，多于一项时用这种格式\n---\n在这里我把我用hexo搭建gitPage博客记录下来，同时也给我一个同学参考参考哈~~~\n## 环境准备\n需要[git](https://git-scm.com/),[Node.js](https://nodejs.org/en/)环境\n## 安装hexo\n利用 npm 命令即可安装。（在任意位置点击鼠标右键，选择Git bash）\n```shell\nnpm install -g hexo\n```\n## 创建hexo文件夹\n选择存放hexo文件的位置,执行以下指令(Git bash终端下)，Hexo即会自动在目标文件夹建立网站所需要的所有文件。\n```shell\nhexo init\n```\n## 安装依赖包\n```shell\nnpm install\n```\n## 本地查看\n现在我们已经搭建起本地的hexo博客了，执行以下命令(在hexo文件下)，然后到浏览器输入localhost:4000看看。\n```shell\nhexo generate #此命令是生成静态页面，不执行该命令也可以\nhexo server\n```\n到此，本地服务以及搭建好了。\n\n## 打包上传到github\n### 如果没有github账户，则需要注册\n### 创建仓库，配置ssh秘钥\n*注意*：Repository name命名规则：你的github账号.github.io (这个一定要这么命名，具体我也不清楚)\n## hexo使用\n目录结构\n.\n├── .deploy #需要部署的文件\n├── node_modules #Hexo插件\n├── public #生成的静态网页文件\n├── scaffolds #模板\n├── source #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里\n| ├── _drafts #草稿\n| └── _posts #文章,可以用子文件来存放文章\n├── themes #主题\n├── _config.yml #全局配置文件\n└── package.json\n\n## 全局配置 _config.yml\n```shell\n# Hexo Configuration\n## Docs: https://hexo.io/docs/configuration.html\n## Source: https://github.com/hexojs/hexo/\n\n# Site\ntitle: 深水暗流\nsubtitle: 冰是睡着的水\ndescription: 一个用gitpage来当笔记的家伙\nauthor: JJS\nemail: 857012499@qq.com\nlanguage: zh-Hans\ntimezone:\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://jjs857012499.github.io\nroot: /\npermalink: :year/:month/:day/:title/\npermalink_defaults:\n\n# Directory\nsource_dir: source\npublic_dir: public\ntag_dir: tags\narchive_dir: archives\ncategory_dir: categories\ncode_dir: downloads/code\ni18n_dir: :lang\nskip_render:\n\n# Writing\nnew_post_name: :title.md # File name of new posts\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: true\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: YYYY-MM-DD\ntime_format: HH:mm:ss\n\n# Pagination\n## Set per_page to 0 to disable pagination\nper_page: 10\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: hexo-theme-next #（默认只有一套主题），需要把下载的主题放在theme文件下\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: git@github.com:JJS857012499/JJS857012499.github.io.git\n  branch: master\n\n#添加搜索\nalgolia:\n  applicationID: 'OAK683V6NK'\n  appId: 'OAK683V6NK'\n  apiKey: '28f4a0e09972bf5b783013b7410faebe'\n  adminApiKey: 'c713030255b892af9297f242c0b6c0f3'\n  indexName: 'jjs857012499.github.io'\n  chunkSize: 5000\n  fields:\n    - title\n    - slug\n    - path\n    - content:strip\n```\n*注意*：\n- 配置文件的冒号“:”后面有一个空格\n- repo: 刚刚github创库地址.git\n## hexo命令行使用\n```shell\nhexo help #查看帮助\nhexo init #初始化一个目录\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成网页，可以在 public 目录查看整个网站的文件\nhexo server #本地预览，'Ctrl+C'关闭\nhexo deploy #部署.deploy目录\nhexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**\n```\n简写\n```shell\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n## 编辑文章\n### 新建文章\n```shell\nhexo new \"标题\"\n```\n在 _posts 目录下会生成文件 标题.md\n```shell\ntitle: Hello World\ndate: 2015-07-30 07:56:29 #发表日期，一般不改动\ncategories: hexo #文章文类\ntags: [hexo,github] #文章标签，多于一项时用这种格式\n---\n正文，使用Markdown语法书写\n编辑完后保存，hexo server 预览\n```\n### hexo部署\n执行下列指令即可完成部署。\n```shell\nhexo generate\nhexo deploy\n```\nhexo deploy问题：Deployer not found: git\n执行\n```shell\nnpm install hexo-deployer-git --save\n```\n重新deploy即可\n## 图片\n我这里是使用本地的图片\n### 安装\n```shell\nnpm install hexo-asset-image --save\n```\n1. 安装该插件后，每次hexo new 新建博文后，会在该文件同级目录下生成一个和文件同名的文件夹，该文件夹就是用来存放图片的\n2. 确保你的_config.yml 配置 post_asset_folder: true\n3. 然后使用\n```shell\n![logo](logo.jpg)\n```\n在博文中插入logo.jpg.\n\n来源：\n[http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/](http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/)\n[http://www.tuicool.com/articles/umEBVfI](http://www.tuicool.com/articles/umEBVfI)","slug":"搭建gitPage博客","published":1,"updated":"2017-03-17T08:59:41.170Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taa890000r8syyw8fr38z","content":"<p>在这里我把我用hexo搭建gitPage博客记录下来，同时也给我一个同学参考参考哈~~~</p>\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><p>需要<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"external\">git</a>,<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js</a>环境</p>\n<h2 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h2><p>利用 npm 命令即可安装。（在任意位置点击鼠标右键，选择Git bash）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo</div></pre></td></tr></table></figure></p>\n<h2 id=\"创建hexo文件夹\"><a href=\"#创建hexo文件夹\" class=\"headerlink\" title=\"创建hexo文件夹\"></a>创建hexo文件夹</h2><p>选择存放hexo文件的位置,执行以下指令(Git bash终端下)，Hexo即会自动在目标文件夹建立网站所需要的所有文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<h2 id=\"本地查看\"><a href=\"#本地查看\" class=\"headerlink\" title=\"本地查看\"></a>本地查看</h2><p>现在我们已经搭建起本地的hexo博客了，执行以下命令(在hexo文件下)，然后到浏览器输入localhost:4000看看。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate #此命令是生成静态页面，不执行该命令也可以</div><div class=\"line\">hexo server</div></pre></td></tr></table></figure></p>\n<p>到此，本地服务以及搭建好了。</p>\n<h2 id=\"打包上传到github\"><a href=\"#打包上传到github\" class=\"headerlink\" title=\"打包上传到github\"></a>打包上传到github</h2><h3 id=\"如果没有github账户，则需要注册\"><a href=\"#如果没有github账户，则需要注册\" class=\"headerlink\" title=\"如果没有github账户，则需要注册\"></a>如果没有github账户，则需要注册</h3><h3 id=\"创建仓库，配置ssh秘钥\"><a href=\"#创建仓库，配置ssh秘钥\" class=\"headerlink\" title=\"创建仓库，配置ssh秘钥\"></a>创建仓库，配置ssh秘钥</h3><p><em>注意</em>：Repository name命名规则：你的github账号.github.io (这个一定要这么命名，具体我也不清楚)</p>\n<h2 id=\"hexo使用\"><a href=\"#hexo使用\" class=\"headerlink\" title=\"hexo使用\"></a>hexo使用</h2><p>目录结构<br>.<br>├── .deploy #需要部署的文件<br>├── node_modules #Hexo插件<br>├── public #生成的静态网页文件<br>├── scaffolds #模板<br>├── source #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里<br>| ├── _drafts #草稿<br>| └── _posts #文章,可以用子文件来存放文章<br>├── themes #主题<br>├── _config.yml #全局配置文件<br>└── package.json</p>\n<h2 id=\"全局配置-config-yml\"><a href=\"#全局配置-config-yml\" class=\"headerlink\" title=\"全局配置 _config.yml\"></a>全局配置 _config.yml</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Hexo Configuration</div><div class=\"line\">## Docs: https://hexo.io/docs/configuration.html</div><div class=\"line\">## Source: https://github.com/hexojs/hexo/</div><div class=\"line\"></div><div class=\"line\"># Site</div><div class=\"line\">title: 深水暗流</div><div class=\"line\">subtitle: 冰是睡着的水</div><div class=\"line\">description: 一个用gitpage来当笔记的家伙</div><div class=\"line\">author: JJS</div><div class=\"line\">email: 857012499@qq.com</div><div class=\"line\">language: zh-Hans</div><div class=\"line\">timezone:</div><div class=\"line\"></div><div class=\"line\"># URL</div><div class=\"line\">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class=\"line\">url: http://jjs857012499.github.io</div><div class=\"line\">root: /</div><div class=\"line\">permalink: :year/:month/:day/:title/</div><div class=\"line\">permalink_defaults:</div><div class=\"line\"></div><div class=\"line\"># Directory</div><div class=\"line\">source_dir: source</div><div class=\"line\">public_dir: public</div><div class=\"line\">tag_dir: tags</div><div class=\"line\">archive_dir: archives</div><div class=\"line\">category_dir: categories</div><div class=\"line\">code_dir: downloads/code</div><div class=\"line\">i18n_dir: :lang</div><div class=\"line\">skip_render:</div><div class=\"line\"></div><div class=\"line\"># Writing</div><div class=\"line\">new_post_name: :title.md # File name of new posts</div><div class=\"line\">default_layout: post</div><div class=\"line\">titlecase: false # Transform title into titlecase</div><div class=\"line\">external_link: true # Open external links in new tab</div><div class=\"line\">filename_case: 0</div><div class=\"line\">render_drafts: false</div><div class=\"line\">post_asset_folder: true</div><div class=\"line\">relative_link: false</div><div class=\"line\">future: true</div><div class=\"line\">highlight:</div><div class=\"line\">  enable: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  auto_detect: false</div><div class=\"line\">  tab_replace:</div><div class=\"line\"></div><div class=\"line\"># Category &amp; Tag</div><div class=\"line\">default_category: uncategorized</div><div class=\"line\">category_map:</div><div class=\"line\">tag_map:</div><div class=\"line\"></div><div class=\"line\"># Date / Time format</div><div class=\"line\">## Hexo uses Moment.js to parse and display date</div><div class=\"line\">## You can customize the date format as defined in</div><div class=\"line\">## http://momentjs.com/docs/#/displaying/format/</div><div class=\"line\">date_format: YYYY-MM-DD</div><div class=\"line\">time_format: HH:mm:ss</div><div class=\"line\"></div><div class=\"line\"># Pagination</div><div class=\"line\">## Set per_page to 0 to disable pagination</div><div class=\"line\">per_page: 10</div><div class=\"line\">pagination_dir: page</div><div class=\"line\"></div><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">theme: hexo-theme-next #（默认只有一套主题），需要把下载的主题放在theme文件下</div><div class=\"line\"></div><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:JJS857012499/JJS857012499.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\"></div><div class=\"line\">#添加搜索</div><div class=\"line\">algolia:</div><div class=\"line\">  applicationID: &apos;OAK683V6NK&apos;</div><div class=\"line\">  appId: &apos;OAK683V6NK&apos;</div><div class=\"line\">  apiKey: &apos;28f4a0e09972bf5b783013b7410faebe&apos;</div><div class=\"line\">  adminApiKey: &apos;c713030255b892af9297f242c0b6c0f3&apos;</div><div class=\"line\">  indexName: &apos;jjs857012499.github.io&apos;</div><div class=\"line\">  chunkSize: 5000</div><div class=\"line\">  fields:</div><div class=\"line\">    - title</div><div class=\"line\">    - slug</div><div class=\"line\">    - path</div><div class=\"line\">    - content:strip</div></pre></td></tr></table></figure>\n<p><em>注意</em>：</p>\n<ul>\n<li>配置文件的冒号“:”后面有一个空格</li>\n<li>repo: 刚刚github创库地址.git<h2 id=\"hexo命令行使用\"><a href=\"#hexo命令行使用\" class=\"headerlink\" title=\"hexo命令行使用\"></a>hexo命令行使用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo help #查看帮助</div><div class=\"line\">hexo init #初始化一个目录</div><div class=\"line\">hexo new &quot;postName&quot; #新建文章</div><div class=\"line\">hexo new page &quot;pageName&quot; #新建页面</div><div class=\"line\">hexo generate #生成网页，可以在 public 目录查看整个网站的文件</div><div class=\"line\">hexo server #本地预览，&apos;Ctrl+C&apos;关闭</div><div class=\"line\">hexo deploy #部署.deploy目录</div><div class=\"line\">hexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>简写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo n == hexo new</div><div class=\"line\">hexo g == hexo generate</div><div class=\"line\">hexo s == hexo server</div><div class=\"line\">hexo d == hexo deploy</div></pre></td></tr></table></figure></p>\n<h2 id=\"编辑文章\"><a href=\"#编辑文章\" class=\"headerlink\" title=\"编辑文章\"></a>编辑文章</h2><h3 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new &quot;标题&quot;</div></pre></td></tr></table></figure>\n<p>在 _posts 目录下会生成文件 标题.md<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: Hello World</div><div class=\"line\">date: 2015-07-30 07:56:29 #发表日期，一般不改动</div><div class=\"line\">categories: hexo #文章文类</div><div class=\"line\">tags: [hexo,github] #文章标签，多于一项时用这种格式</div><div class=\"line\">---</div><div class=\"line\">正文，使用Markdown语法书写</div><div class=\"line\">编辑完后保存，hexo server 预览</div></pre></td></tr></table></figure></p>\n<h3 id=\"hexo部署\"><a href=\"#hexo部署\" class=\"headerlink\" title=\"hexo部署\"></a>hexo部署</h3><p>执行下列指令即可完成部署。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate</div><div class=\"line\">hexo deploy</div></pre></td></tr></table></figure></p>\n<p>hexo deploy问题：Deployer not found: git<br>执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<p>重新deploy即可</p>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>我这里是使用本地的图片</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-asset-image --save</div></pre></td></tr></table></figure>\n<ol>\n<li>安装该插件后，每次hexo new 新建博文后，会在该文件同级目录下生成一个和文件同名的文件夹，该文件夹就是用来存放图片的</li>\n<li>确保你的_config.yml 配置 post_asset_folder: true</li>\n<li>然后使用<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">![logo](logo.jpg)</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在博文中插入logo.jpg.</p>\n<p>来源：<br><a href=\"http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/\" target=\"_blank\" rel=\"external\">http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/</a><br><a href=\"http://www.tuicool.com/articles/umEBVfI\" target=\"_blank\" rel=\"external\">http://www.tuicool.com/articles/umEBVfI</a></p>\n","excerpt":"","more":"<p>在这里我把我用hexo搭建gitPage博客记录下来，同时也给我一个同学参考参考哈~~~</p>\n<h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><p>需要<a href=\"https://git-scm.com/\">git</a>,<a href=\"https://nodejs.org/en/\">Node.js</a>环境</p>\n<h2 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h2><p>利用 npm 命令即可安装。（在任意位置点击鼠标右键，选择Git bash）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo</div></pre></td></tr></table></figure></p>\n<h2 id=\"创建hexo文件夹\"><a href=\"#创建hexo文件夹\" class=\"headerlink\" title=\"创建hexo文件夹\"></a>创建hexo文件夹</h2><p>选择存放hexo文件的位置,执行以下指令(Git bash终端下)，Hexo即会自动在目标文件夹建立网站所需要的所有文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<h2 id=\"本地查看\"><a href=\"#本地查看\" class=\"headerlink\" title=\"本地查看\"></a>本地查看</h2><p>现在我们已经搭建起本地的hexo博客了，执行以下命令(在hexo文件下)，然后到浏览器输入localhost:4000看看。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate #此命令是生成静态页面，不执行该命令也可以</div><div class=\"line\">hexo server</div></pre></td></tr></table></figure></p>\n<p>到此，本地服务以及搭建好了。</p>\n<h2 id=\"打包上传到github\"><a href=\"#打包上传到github\" class=\"headerlink\" title=\"打包上传到github\"></a>打包上传到github</h2><h3 id=\"如果没有github账户，则需要注册\"><a href=\"#如果没有github账户，则需要注册\" class=\"headerlink\" title=\"如果没有github账户，则需要注册\"></a>如果没有github账户，则需要注册</h3><h3 id=\"创建仓库，配置ssh秘钥\"><a href=\"#创建仓库，配置ssh秘钥\" class=\"headerlink\" title=\"创建仓库，配置ssh秘钥\"></a>创建仓库，配置ssh秘钥</h3><p><em>注意</em>：Repository name命名规则：你的github账号.github.io (这个一定要这么命名，具体我也不清楚)</p>\n<h2 id=\"hexo使用\"><a href=\"#hexo使用\" class=\"headerlink\" title=\"hexo使用\"></a>hexo使用</h2><p>目录结构<br>.<br>├── .deploy #需要部署的文件<br>├── node_modules #Hexo插件<br>├── public #生成的静态网页文件<br>├── scaffolds #模板<br>├── source #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里<br>| ├── _drafts #草稿<br>| └── _posts #文章,可以用子文件来存放文章<br>├── themes #主题<br>├── _config.yml #全局配置文件<br>└── package.json</p>\n<h2 id=\"全局配置-config-yml\"><a href=\"#全局配置-config-yml\" class=\"headerlink\" title=\"全局配置 _config.yml\"></a>全局配置 _config.yml</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Hexo Configuration</div><div class=\"line\">## Docs: https://hexo.io/docs/configuration.html</div><div class=\"line\">## Source: https://github.com/hexojs/hexo/</div><div class=\"line\"></div><div class=\"line\"># Site</div><div class=\"line\">title: 深水暗流</div><div class=\"line\">subtitle: 冰是睡着的水</div><div class=\"line\">description: 一个用gitpage来当笔记的家伙</div><div class=\"line\">author: JJS</div><div class=\"line\">email: 857012499@qq.com</div><div class=\"line\">language: zh-Hans</div><div class=\"line\">timezone:</div><div class=\"line\"></div><div class=\"line\"># URL</div><div class=\"line\">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class=\"line\">url: http://jjs857012499.github.io</div><div class=\"line\">root: /</div><div class=\"line\">permalink: :year/:month/:day/:title/</div><div class=\"line\">permalink_defaults:</div><div class=\"line\"></div><div class=\"line\"># Directory</div><div class=\"line\">source_dir: source</div><div class=\"line\">public_dir: public</div><div class=\"line\">tag_dir: tags</div><div class=\"line\">archive_dir: archives</div><div class=\"line\">category_dir: categories</div><div class=\"line\">code_dir: downloads/code</div><div class=\"line\">i18n_dir: :lang</div><div class=\"line\">skip_render:</div><div class=\"line\"></div><div class=\"line\"># Writing</div><div class=\"line\">new_post_name: :title.md # File name of new posts</div><div class=\"line\">default_layout: post</div><div class=\"line\">titlecase: false # Transform title into titlecase</div><div class=\"line\">external_link: true # Open external links in new tab</div><div class=\"line\">filename_case: 0</div><div class=\"line\">render_drafts: false</div><div class=\"line\">post_asset_folder: true</div><div class=\"line\">relative_link: false</div><div class=\"line\">future: true</div><div class=\"line\">highlight:</div><div class=\"line\">  enable: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  auto_detect: false</div><div class=\"line\">  tab_replace:</div><div class=\"line\"></div><div class=\"line\"># Category &amp; Tag</div><div class=\"line\">default_category: uncategorized</div><div class=\"line\">category_map:</div><div class=\"line\">tag_map:</div><div class=\"line\"></div><div class=\"line\"># Date / Time format</div><div class=\"line\">## Hexo uses Moment.js to parse and display date</div><div class=\"line\">## You can customize the date format as defined in</div><div class=\"line\">## http://momentjs.com/docs/#/displaying/format/</div><div class=\"line\">date_format: YYYY-MM-DD</div><div class=\"line\">time_format: HH:mm:ss</div><div class=\"line\"></div><div class=\"line\"># Pagination</div><div class=\"line\">## Set per_page to 0 to disable pagination</div><div class=\"line\">per_page: 10</div><div class=\"line\">pagination_dir: page</div><div class=\"line\"></div><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">theme: hexo-theme-next #（默认只有一套主题），需要把下载的主题放在theme文件下</div><div class=\"line\"></div><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:JJS857012499/JJS857012499.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\"></div><div class=\"line\">#添加搜索</div><div class=\"line\">algolia:</div><div class=\"line\">  applicationID: &apos;OAK683V6NK&apos;</div><div class=\"line\">  appId: &apos;OAK683V6NK&apos;</div><div class=\"line\">  apiKey: &apos;28f4a0e09972bf5b783013b7410faebe&apos;</div><div class=\"line\">  adminApiKey: &apos;c713030255b892af9297f242c0b6c0f3&apos;</div><div class=\"line\">  indexName: &apos;jjs857012499.github.io&apos;</div><div class=\"line\">  chunkSize: 5000</div><div class=\"line\">  fields:</div><div class=\"line\">    - title</div><div class=\"line\">    - slug</div><div class=\"line\">    - path</div><div class=\"line\">    - content:strip</div></pre></td></tr></table></figure>\n<p><em>注意</em>：</p>\n<ul>\n<li>配置文件的冒号“:”后面有一个空格</li>\n<li>repo: 刚刚github创库地址.git<h2 id=\"hexo命令行使用\"><a href=\"#hexo命令行使用\" class=\"headerlink\" title=\"hexo命令行使用\"></a>hexo命令行使用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo help #查看帮助</div><div class=\"line\">hexo init #初始化一个目录</div><div class=\"line\">hexo new &quot;postName&quot; #新建文章</div><div class=\"line\">hexo new page &quot;pageName&quot; #新建页面</div><div class=\"line\">hexo generate #生成网页，可以在 public 目录查看整个网站的文件</div><div class=\"line\">hexo server #本地预览，&apos;Ctrl+C&apos;关闭</div><div class=\"line\">hexo deploy #部署.deploy目录</div><div class=\"line\">hexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>简写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo n == hexo new</div><div class=\"line\">hexo g == hexo generate</div><div class=\"line\">hexo s == hexo server</div><div class=\"line\">hexo d == hexo deploy</div></pre></td></tr></table></figure></p>\n<h2 id=\"编辑文章\"><a href=\"#编辑文章\" class=\"headerlink\" title=\"编辑文章\"></a>编辑文章</h2><h3 id=\"新建文章\"><a href=\"#新建文章\" class=\"headerlink\" title=\"新建文章\"></a>新建文章</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new &quot;标题&quot;</div></pre></td></tr></table></figure>\n<p>在 _posts 目录下会生成文件 标题.md<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: Hello World</div><div class=\"line\">date: 2015-07-30 07:56:29 #发表日期，一般不改动</div><div class=\"line\">categories: hexo #文章文类</div><div class=\"line\">tags: [hexo,github] #文章标签，多于一项时用这种格式</div><div class=\"line\">---</div><div class=\"line\">正文，使用Markdown语法书写</div><div class=\"line\">编辑完后保存，hexo server 预览</div></pre></td></tr></table></figure></p>\n<h3 id=\"hexo部署\"><a href=\"#hexo部署\" class=\"headerlink\" title=\"hexo部署\"></a>hexo部署</h3><p>执行下列指令即可完成部署。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate</div><div class=\"line\">hexo deploy</div></pre></td></tr></table></figure></p>\n<p>hexo deploy问题：Deployer not found: git<br>执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<p>重新deploy即可</p>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>我这里是使用本地的图片</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-asset-image --save</div></pre></td></tr></table></figure>\n<ol>\n<li>安装该插件后，每次hexo new 新建博文后，会在该文件同级目录下生成一个和文件同名的文件夹，该文件夹就是用来存放图片的</li>\n<li>确保你的_config.yml 配置 post_asset_folder: true</li>\n<li>然后使用<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">![logo](logo.jpg)</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在博文中插入logo.jpg.</p>\n<p>来源：<br><a href=\"http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/\">http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/</a><br><a href=\"http://www.tuicool.com/articles/umEBVfI\">http://www.tuicool.com/articles/umEBVfI</a></p>\n"},{"title":"Node.js 第一个应用","date":"2017-03-12T16:00:21.000Z","_content":"1、示例代码\n<!-- more -->\n``` shell\n//使用 require 指令来载入 http 模块，并将实例化的 HTTP 赋值给变量 http\nvar http = require('http');\n// http.createServer() 方法创建服务器，并使用 listen 方法绑定 8888 端口。 函数通过 request, response 参数来接收和响应数据。\nhttp.createServer(function(request,response){\n\tresponse.writeHead(200,{'Content-Type':'text/plain'});\n\tresponse.write('<body>呵呵</body>');\n\tresponse.end('hello world\\n');\n}).listen(8888);\nconsole.log('Server running...')\n```\n2、打开浏览器访问 http://127.0.0.1:8888/，大功告成\n","source":"_posts/Node.js/Node.js-第一个应用.md","raw":"---\ntitle: Node.js 第一个应用\ndate: 2017-03-13 00:00:21\ncategories: Node.js\ntags: [Node.js]\n---\n1、示例代码\n<!-- more -->\n``` shell\n//使用 require 指令来载入 http 模块，并将实例化的 HTTP 赋值给变量 http\nvar http = require('http');\n// http.createServer() 方法创建服务器，并使用 listen 方法绑定 8888 端口。 函数通过 request, response 参数来接收和响应数据。\nhttp.createServer(function(request,response){\n\tresponse.writeHead(200,{'Content-Type':'text/plain'});\n\tresponse.write('<body>呵呵</body>');\n\tresponse.end('hello world\\n');\n}).listen(8888);\nconsole.log('Server running...')\n```\n2、打开浏览器访问 http://127.0.0.1:8888/，大功告成\n","slug":"Node.js/Node.js-第一个应用","published":1,"updated":"2017-03-12T16:03:48.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taac70009r8syeuyo5fhs","content":"<p>1、示例代码<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//使用 require 指令来载入 http 模块，并将实例化的 HTTP 赋值给变量 http</div><div class=\"line\">var http = require(&apos;http&apos;);</div><div class=\"line\">// http.createServer() 方法创建服务器，并使用 listen 方法绑定 8888 端口。 函数通过 request, response 参数来接收和响应数据。</div><div class=\"line\">http.createServer(function(request,response)&#123;</div><div class=\"line\">\tresponse.writeHead(200,&#123;&apos;Content-Type&apos;:&apos;text/plain&apos;&#125;);</div><div class=\"line\">\tresponse.write(&apos;&lt;body&gt;呵呵&lt;/body&gt;&apos;);</div><div class=\"line\">\tresponse.end(&apos;hello world\\n&apos;);</div><div class=\"line\">&#125;).listen(8888);</div><div class=\"line\">console.log(&apos;Server running...&apos;)</div></pre></td></tr></table></figure></p>\n<p>2、打开浏览器访问 <a href=\"http://127.0.0.1:8888/，大功告成\" target=\"_blank\" rel=\"external\">http://127.0.0.1:8888/，大功告成</a></p>\n","excerpt":"<p>1、示例代码<br></p>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//使用 require 指令来载入 http 模块，并将实例化的 HTTP 赋值给变量 http</div><div class=\"line\">var http = require(&apos;http&apos;);</div><div class=\"line\">// http.createServer() 方法创建服务器，并使用 listen 方法绑定 8888 端口。 函数通过 request, response 参数来接收和响应数据。</div><div class=\"line\">http.createServer(function(request,response)&#123;</div><div class=\"line\">\tresponse.writeHead(200,&#123;&apos;Content-Type&apos;:&apos;text/plain&apos;&#125;);</div><div class=\"line\">\tresponse.write(&apos;&lt;body&gt;呵呵&lt;/body&gt;&apos;);</div><div class=\"line\">\tresponse.end(&apos;hello world\\n&apos;);</div><div class=\"line\">&#125;).listen(8888);</div><div class=\"line\">console.log(&apos;Server running...&apos;)</div></pre></td></tr></table></figure><p></p>\n<p>2、打开浏览器访问 <a href=\"http://127.0.0.1:8888/，大功告成\">http://127.0.0.1:8888/，大功告成</a></p>"},{"title":"NPM 使用介绍","date":"2017-03-12T16:04:20.000Z","_content":"NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：\n允许用户从NPM服务器下载别人编写的第三方包到本地使用。\n允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。\n允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。\n由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了。同样可以通过输入 \"npm -v\" 来测试是否成功安装。\n<!-- more -->\n## 全局安装与本地安装 npm install <模块名>\nnpm 的包安装分为本地安装（local）、全局安装（global）两种，从敲的命令行来看，差别只是有没有-g而已，比如\n``` shell\nnpm install express          # 本地安装\nnpm install express -g       # 全局安装\n```\n### 本地安装\n1. 将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有 node_modules 目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。\n2. 可以通过 require() 来引入本地安装的包。\n### 全局安装\n1. 将安装包放在 /usr/local 下。\n2. 可以直接在命令行里使用。\n3. 不能通过 require() 来引入本地安装的包。\n## 卸载模块\n我们可以使用以下命令来卸载 Node.js 模块。\n``` shell\n$ npm uninstall express\n```\n卸载后，你可以到 /node_modules/ 目录下查看包是否还存在，或者使用以下命令查看：\n``` shell\n$ npm ls\n```\n## 更新模块\n我们可以使用以下命令更新模块：\n``` shell\n$ npm update express\n```\n## 搜索模块\n使用以下来搜索模块：\n``` shell\n$ npm search express\n```","source":"_posts/Node.js/NPM-使用介绍.md","raw":"---\ntitle: NPM 使用介绍\ndate: 2017-03-13 00:04:20\ncategories: Node.js\ntags: [Node.js,npm]\n---\nNPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：\n允许用户从NPM服务器下载别人编写的第三方包到本地使用。\n允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。\n允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。\n由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了。同样可以通过输入 \"npm -v\" 来测试是否成功安装。\n<!-- more -->\n## 全局安装与本地安装 npm install <模块名>\nnpm 的包安装分为本地安装（local）、全局安装（global）两种，从敲的命令行来看，差别只是有没有-g而已，比如\n``` shell\nnpm install express          # 本地安装\nnpm install express -g       # 全局安装\n```\n### 本地安装\n1. 将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有 node_modules 目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。\n2. 可以通过 require() 来引入本地安装的包。\n### 全局安装\n1. 将安装包放在 /usr/local 下。\n2. 可以直接在命令行里使用。\n3. 不能通过 require() 来引入本地安装的包。\n## 卸载模块\n我们可以使用以下命令来卸载 Node.js 模块。\n``` shell\n$ npm uninstall express\n```\n卸载后，你可以到 /node_modules/ 目录下查看包是否还存在，或者使用以下命令查看：\n``` shell\n$ npm ls\n```\n## 更新模块\n我们可以使用以下命令更新模块：\n``` shell\n$ npm update express\n```\n## 搜索模块\n使用以下来搜索模块：\n``` shell\n$ npm search express\n```","slug":"Node.js/NPM-使用介绍","published":1,"updated":"2017-03-12T16:11:11.690Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taac9000ar8syajbf46jc","content":"<p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：<br>允许用户从NPM服务器下载别人编写的第三方包到本地使用。<br>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。<br>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。<br>由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了。同样可以通过输入 “npm -v” 来测试是否成功安装。<br><a id=\"more\"></a></p>\n<h2 id=\"全局安装与本地安装-npm-install-lt-模块名-gt\"><a href=\"#全局安装与本地安装-npm-install-lt-模块名-gt\" class=\"headerlink\" title=\"全局安装与本地安装 npm install &lt;模块名&gt;\"></a>全局安装与本地安装 npm install &lt;模块名&gt;</h2><p>npm 的包安装分为本地安装（local）、全局安装（global）两种，从敲的命令行来看，差别只是有没有-g而已，比如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install express          # 本地安装</div><div class=\"line\">npm install express -g       # 全局安装</div></pre></td></tr></table></figure></p>\n<h3 id=\"本地安装\"><a href=\"#本地安装\" class=\"headerlink\" title=\"本地安装\"></a>本地安装</h3><ol>\n<li>将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有 node_modules 目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。</li>\n<li>可以通过 require() 来引入本地安装的包。<h3 id=\"全局安装\"><a href=\"#全局安装\" class=\"headerlink\" title=\"全局安装\"></a>全局安装</h3></li>\n<li>将安装包放在 /usr/local 下。</li>\n<li>可以直接在命令行里使用。</li>\n<li>不能通过 require() 来引入本地安装的包。<h2 id=\"卸载模块\"><a href=\"#卸载模块\" class=\"headerlink\" title=\"卸载模块\"></a>卸载模块</h2>我们可以使用以下命令来卸载 Node.js 模块。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm uninstall express</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>卸载后，你可以到 /node_modules/ 目录下查看包是否还存在，或者使用以下命令查看：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm ls</div></pre></td></tr></table></figure></p>\n<h2 id=\"更新模块\"><a href=\"#更新模块\" class=\"headerlink\" title=\"更新模块\"></a>更新模块</h2><p>我们可以使用以下命令更新模块：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm update express</div></pre></td></tr></table></figure></p>\n<h2 id=\"搜索模块\"><a href=\"#搜索模块\" class=\"headerlink\" title=\"搜索模块\"></a>搜索模块</h2><p>使用以下来搜索模块：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm search express</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：<br>允许用户从NPM服务器下载别人编写的第三方包到本地使用。<br>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。<br>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。<br>由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了。同样可以通过输入 “npm -v” 来测试是否成功安装。<br></p>","more":"<p></p>\n<h2 id=\"全局安装与本地安装-npm-install-lt-模块名-gt\"><a href=\"#全局安装与本地安装-npm-install-lt-模块名-gt\" class=\"headerlink\" title=\"全局安装与本地安装 npm install &lt;模块名&gt;\"></a>全局安装与本地安装 npm install &lt;模块名&gt;</h2><p>npm 的包安装分为本地安装（local）、全局安装（global）两种，从敲的命令行来看，差别只是有没有-g而已，比如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install express          # 本地安装</div><div class=\"line\">npm install express -g       # 全局安装</div></pre></td></tr></table></figure></p>\n<h3 id=\"本地安装\"><a href=\"#本地安装\" class=\"headerlink\" title=\"本地安装\"></a>本地安装</h3><ol>\n<li>将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有 node_modules 目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。</li>\n<li>可以通过 require() 来引入本地安装的包。<h3 id=\"全局安装\"><a href=\"#全局安装\" class=\"headerlink\" title=\"全局安装\"></a>全局安装</h3></li>\n<li>将安装包放在 /usr/local 下。</li>\n<li>可以直接在命令行里使用。</li>\n<li>不能通过 require() 来引入本地安装的包。<h2 id=\"卸载模块\"><a href=\"#卸载模块\" class=\"headerlink\" title=\"卸载模块\"></a>卸载模块</h2>我们可以使用以下命令来卸载 Node.js 模块。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm uninstall express</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>卸载后，你可以到 /node_modules/ 目录下查看包是否还存在，或者使用以下命令查看：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm ls</div></pre></td></tr></table></figure></p>\n<h2 id=\"更新模块\"><a href=\"#更新模块\" class=\"headerlink\" title=\"更新模块\"></a>更新模块</h2><p>我们可以使用以下命令更新模块：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm update express</div></pre></td></tr></table></figure></p>\n<h2 id=\"搜索模块\"><a href=\"#搜索模块\" class=\"headerlink\" title=\"搜索模块\"></a>搜索模块</h2><p>使用以下来搜索模块：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm search express</div></pre></td></tr></table></figure></p>"},{"title":"Node.js简介","date":"2017-03-12T15:55:44.000Z","_content":"如果我们使用PHP来编写后端的代码时，需要Apache 或者 Nginx 的HTTP 服务器，并配上 mod_php5 模块和php-cgi。\n从这个角度看，整个\"接收 HTTP 请求并提供 Web 页面\"的需求根本不需 要 PHP 来处理。\n不过对 Node.js 来说，概念完全不一样了。使用 Node.js 时，我们不仅仅 在实现一个应用，同时还实现了整个 HTTP 服务器。事实上，我们的 Web 应用以及对应的 Web 服务器基本上是一样的。\n<!-- more -->\n ## Node.js 应用是由哪几部分组成的：\n* 引入 required 模块：我们可以使用 require 指令来载入 Node.js 模块。\n* 创建服务器：服务器可以监听客户端的请求，类似于 Apache 、Nginx 等 HTTP 服务器。\n* 接收请求与响应请求 服务器很容易创建，客户端可以使用浏览器或终端发送 HTTP 请求，服务器接收请求后返回响应数据。\n\n","source":"_posts/Node.js/Node.js简介.md","raw":"---\ntitle: Node.js简介\ndate: 2017-03-12 23:55:44\ncategories: Node.js\ntags:\n - Node.js\n---\n如果我们使用PHP来编写后端的代码时，需要Apache 或者 Nginx 的HTTP 服务器，并配上 mod_php5 模块和php-cgi。\n从这个角度看，整个\"接收 HTTP 请求并提供 Web 页面\"的需求根本不需 要 PHP 来处理。\n不过对 Node.js 来说，概念完全不一样了。使用 Node.js 时，我们不仅仅 在实现一个应用，同时还实现了整个 HTTP 服务器。事实上，我们的 Web 应用以及对应的 Web 服务器基本上是一样的。\n<!-- more -->\n ## Node.js 应用是由哪几部分组成的：\n* 引入 required 模块：我们可以使用 require 指令来载入 Node.js 模块。\n* 创建服务器：服务器可以监听客户端的请求，类似于 Apache 、Nginx 等 HTTP 服务器。\n* 接收请求与响应请求 服务器很容易创建，客户端可以使用浏览器或终端发送 HTTP 请求，服务器接收请求后返回响应数据。\n\n","slug":"Node.js/Node.js简介","published":1,"updated":"2017-03-12T15:59:10.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taacb000dr8sy799jjzyl","content":"<p>如果我们使用PHP来编写后端的代码时，需要Apache 或者 Nginx 的HTTP 服务器，并配上 mod_php5 模块和php-cgi。<br>从这个角度看，整个”接收 HTTP 请求并提供 Web 页面”的需求根本不需 要 PHP 来处理。<br>不过对 Node.js 来说，概念完全不一样了。使用 Node.js 时，我们不仅仅 在实现一个应用，同时还实现了整个 HTTP 服务器。事实上，我们的 Web 应用以及对应的 Web 服务器基本上是一样的。<br><a id=\"more\"></a></p>\n<h2 id=\"Node-js-应用是由哪几部分组成的：\"><a href=\"#Node-js-应用是由哪几部分组成的：\" class=\"headerlink\" title=\"Node.js 应用是由哪几部分组成的：\"></a>Node.js 应用是由哪几部分组成的：</h2><ul>\n<li>引入 required 模块：我们可以使用 require 指令来载入 Node.js 模块。</li>\n<li>创建服务器：服务器可以监听客户端的请求，类似于 Apache 、Nginx 等 HTTP 服务器。</li>\n<li>接收请求与响应请求 服务器很容易创建，客户端可以使用浏览器或终端发送 HTTP 请求，服务器接收请求后返回响应数据。</li>\n</ul>\n","excerpt":"<p>如果我们使用PHP来编写后端的代码时，需要Apache 或者 Nginx 的HTTP 服务器，并配上 mod_php5 模块和php-cgi。<br>从这个角度看，整个”接收 HTTP 请求并提供 Web 页面”的需求根本不需 要 PHP 来处理。<br>不过对 Node.js 来说，概念完全不一样了。使用 Node.js 时，我们不仅仅 在实现一个应用，同时还实现了整个 HTTP 服务器。事实上，我们的 Web 应用以及对应的 Web 服务器基本上是一样的。<br></p>","more":"<p></p>\n<h2 id=\"Node-js-应用是由哪几部分组成的：\"><a href=\"#Node-js-应用是由哪几部分组成的：\" class=\"headerlink\" title=\"Node.js 应用是由哪几部分组成的：\"></a>Node.js 应用是由哪几部分组成的：</h2><ul>\n<li>引入 required 模块：我们可以使用 require 指令来载入 Node.js 模块。</li>\n<li>创建服务器：服务器可以监听客户端的请求，类似于 Apache 、Nginx 等 HTTP 服务器。</li>\n<li>接收请求与响应请求 服务器很容易创建，客户端可以使用浏览器或终端发送 HTTP 请求，服务器接收请求后返回响应数据。</li>\n</ul>"},{"title":"ActivityMq安装","date":"2017-03-17T07:05:40.000Z","_content":"## 下载\n```shell\nwget http://archive.apache.org/dist/activemq/5.11.1/apache-activemq-5.11.1-bin.tar.gz\n```\n<!--more-->\n## 解压，启动\n```shell\n./activemq start\n```\n## 测试启动是否成功（ActiveMQ默认监听61616端口，查此端口看看是否成功启动）\n```shell\nnetstat -an|grep 61616\n```\n## 登录下管理员页面，看看有木有问题：\nURL :http://192.168.203.128:8161/admin\n默认账户密码都是admin\n## 账户密码修改在conf文件夹下的jetty-realm.properties\n\n","source":"_posts/activityMq/ActivityMq安装.md","raw":"---\ntitle: ActivityMq安装\ndate: 2017-03-17 15:05:40\ncategory: ActivityMq\ntags: [ActivityMq]\n---\n## 下载\n```shell\nwget http://archive.apache.org/dist/activemq/5.11.1/apache-activemq-5.11.1-bin.tar.gz\n```\n<!--more-->\n## 解压，启动\n```shell\n./activemq start\n```\n## 测试启动是否成功（ActiveMQ默认监听61616端口，查此端口看看是否成功启动）\n```shell\nnetstat -an|grep 61616\n```\n## 登录下管理员页面，看看有木有问题：\nURL :http://192.168.203.128:8161/admin\n默认账户密码都是admin\n## 账户密码修改在conf文件夹下的jetty-realm.properties\n\n","slug":"activityMq/ActivityMq安装","published":1,"updated":"2017-03-17T07:16:54.042Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taace000er8syc8vifuk1","content":"<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://archive.apache.org/dist/activemq/5.11.1/apache-activemq-5.11.1-bin.tar.gz</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"解压，启动\"><a href=\"#解压，启动\" class=\"headerlink\" title=\"解压，启动\"></a>解压，启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./activemq start</div></pre></td></tr></table></figure>\n<h2 id=\"测试启动是否成功（ActiveMQ默认监听61616端口，查此端口看看是否成功启动）\"><a href=\"#测试启动是否成功（ActiveMQ默认监听61616端口，查此端口看看是否成功启动）\" class=\"headerlink\" title=\"测试启动是否成功（ActiveMQ默认监听61616端口，查此端口看看是否成功启动）\"></a>测试启动是否成功（ActiveMQ默认监听61616端口，查此端口看看是否成功启动）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -an|grep 61616</div></pre></td></tr></table></figure>\n<h2 id=\"登录下管理员页面，看看有木有问题：\"><a href=\"#登录下管理员页面，看看有木有问题：\" class=\"headerlink\" title=\"登录下管理员页面，看看有木有问题：\"></a>登录下管理员页面，看看有木有问题：</h2><p>URL :<a href=\"http://192.168.203.128:8161/admin\" target=\"_blank\" rel=\"external\">http://192.168.203.128:8161/admin</a><br>默认账户密码都是admin</p>\n<h2 id=\"账户密码修改在conf文件夹下的jetty-realm-properties\"><a href=\"#账户密码修改在conf文件夹下的jetty-realm-properties\" class=\"headerlink\" title=\"账户密码修改在conf文件夹下的jetty-realm.properties\"></a>账户密码修改在conf文件夹下的jetty-realm.properties</h2>","excerpt":"<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://archive.apache.org/dist/activemq/5.11.1/apache-activemq-5.11.1-bin.tar.gz</div></pre></td></tr></table></figure>","more":"<h2 id=\"解压，启动\"><a href=\"#解压，启动\" class=\"headerlink\" title=\"解压，启动\"></a>解压，启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./activemq start</div></pre></td></tr></table></figure>\n<h2 id=\"测试启动是否成功（ActiveMQ默认监听61616端口，查此端口看看是否成功启动）\"><a href=\"#测试启动是否成功（ActiveMQ默认监听61616端口，查此端口看看是否成功启动）\" class=\"headerlink\" title=\"测试启动是否成功（ActiveMQ默认监听61616端口，查此端口看看是否成功启动）\"></a>测试启动是否成功（ActiveMQ默认监听61616端口，查此端口看看是否成功启动）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -an|grep 61616</div></pre></td></tr></table></figure>\n<h2 id=\"登录下管理员页面，看看有木有问题：\"><a href=\"#登录下管理员页面，看看有木有问题：\" class=\"headerlink\" title=\"登录下管理员页面，看看有木有问题：\"></a>登录下管理员页面，看看有木有问题：</h2><p>URL :<a href=\"http://192.168.203.128:8161/admin\">http://192.168.203.128:8161/admin</a><br>默认账户密码都是admin</p>\n<h2 id=\"账户密码修改在conf文件夹下的jetty-realm-properties\"><a href=\"#账户密码修改在conf文件夹下的jetty-realm-properties\" class=\"headerlink\" title=\"账户密码修改在conf文件夹下的jetty-realm.properties\"></a>账户密码修改在conf文件夹下的jetty-realm.properties</h2>"},{"title":"Android自动填写获取到的验证码","date":"2017-03-13T14:26:40.000Z","_content":"## 添加权限\n``` xml\n<uses-permission android:name=\"android.permission.RECEIVE_SMS\"></uses-permission>\n<uses-permission android:name=\"android.permission.READ_SMS\"></uses-permission>\n```\n<!-- more -->\n## 示例代码\n``` java\npublic class SMSReceiver extends BroadcastReceiver\n{\n    public interface ISMSListener {\n        public void onSmsReceive(String verifyCode);\n    }\n\n    private static ISMSListener mSMSListener;\n\n    public SMSReceiver(ISMSListener ismsListener) {\n        mSMSListener = ismsListener;\n    }\n\n    public static final String TAG = \"ImiChatSMSReceiver\";\n\n    //android.provider.Telephony.Sms.Intents\n\n    public static final String SMS_RECEIVED_ACTION = \"android.provider.Telephony.SMS_RECEIVED\";\n\n\n    @Override\n    public void onReceive(Context context, Intent intent)\n    {\n        LogUtil.d(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\");\n        if (intent.getAction().equals(SMS_RECEIVED_ACTION))\n        {\n            SmsMessage[] messages = getMessagesFromIntent(intent);\n            for (SmsMessage message : messages)\n            {\n\n//                LogUtil.d(message.getOriginatingAddress() + \" : \" +\n//                        message.getDisplayOriginatingAddress() + \" : \" +\n//                        message.getDisplayMessageBody() + \" : \" +\n//                        message.getTimestampMillis());\n\n\n                String msg = message.getDisplayMessageBody();\n                LogUtil.d(\"MSG: \" + msg);\n                String verifyCode = null;\n                Pattern p = Pattern.compile(\"\\\\d{4}\");\n                Matcher m = p.matcher(msg);\n                while (m.find()) {\n                    verifyCode = m.group();\n                    break;\n                }\n                LogUtil.d(\"verifyCode \" + verifyCode);\n                if (mSMSListener != null) {\n                    mSMSListener.onSmsReceive(verifyCode);\n                }\n            }\n\n        }\n\n    }\n\n\n    public final SmsMessage[] getMessagesFromIntent(Intent intent)\n    {\n        Object[] messages = (Object[]) intent.getSerializableExtra(\"pdus\");\n        byte[][] pduObjs = new byte[messages.length][];\n        for (int i = 0; i < messages.length; i++)\n        {\n            pduObjs[i] = (byte[]) messages[i];\n        }\n        byte[][] pdus = new byte[pduObjs.length][];\n        int pduCount = pdus.length;\n        SmsMessage[] msgs = new SmsMessage[pduCount];\n        for (int i = 0; i < pduCount; i++)\n        {\n            pdus[i] = pduObjs[i];\n            msgs[i] = SmsMessage.createFromPdu(pdus[i]);\n        }\n        return msgs;\n    }\n}\n```\n","source":"_posts/android/Android自动填写获取到的验证码.md","raw":"---\ntitle: Android自动填写获取到的验证码\ndate: 2017-03-13 22:26:40\ncategories: android\ntags: [anroid,自动填写获取到的验证码]\n---\n## 添加权限\n``` xml\n<uses-permission android:name=\"android.permission.RECEIVE_SMS\"></uses-permission>\n<uses-permission android:name=\"android.permission.READ_SMS\"></uses-permission>\n```\n<!-- more -->\n## 示例代码\n``` java\npublic class SMSReceiver extends BroadcastReceiver\n{\n    public interface ISMSListener {\n        public void onSmsReceive(String verifyCode);\n    }\n\n    private static ISMSListener mSMSListener;\n\n    public SMSReceiver(ISMSListener ismsListener) {\n        mSMSListener = ismsListener;\n    }\n\n    public static final String TAG = \"ImiChatSMSReceiver\";\n\n    //android.provider.Telephony.Sms.Intents\n\n    public static final String SMS_RECEIVED_ACTION = \"android.provider.Telephony.SMS_RECEIVED\";\n\n\n    @Override\n    public void onReceive(Context context, Intent intent)\n    {\n        LogUtil.d(\">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\");\n        if (intent.getAction().equals(SMS_RECEIVED_ACTION))\n        {\n            SmsMessage[] messages = getMessagesFromIntent(intent);\n            for (SmsMessage message : messages)\n            {\n\n//                LogUtil.d(message.getOriginatingAddress() + \" : \" +\n//                        message.getDisplayOriginatingAddress() + \" : \" +\n//                        message.getDisplayMessageBody() + \" : \" +\n//                        message.getTimestampMillis());\n\n\n                String msg = message.getDisplayMessageBody();\n                LogUtil.d(\"MSG: \" + msg);\n                String verifyCode = null;\n                Pattern p = Pattern.compile(\"\\\\d{4}\");\n                Matcher m = p.matcher(msg);\n                while (m.find()) {\n                    verifyCode = m.group();\n                    break;\n                }\n                LogUtil.d(\"verifyCode \" + verifyCode);\n                if (mSMSListener != null) {\n                    mSMSListener.onSmsReceive(verifyCode);\n                }\n            }\n\n        }\n\n    }\n\n\n    public final SmsMessage[] getMessagesFromIntent(Intent intent)\n    {\n        Object[] messages = (Object[]) intent.getSerializableExtra(\"pdus\");\n        byte[][] pduObjs = new byte[messages.length][];\n        for (int i = 0; i < messages.length; i++)\n        {\n            pduObjs[i] = (byte[]) messages[i];\n        }\n        byte[][] pdus = new byte[pduObjs.length][];\n        int pduCount = pdus.length;\n        SmsMessage[] msgs = new SmsMessage[pduCount];\n        for (int i = 0; i < pduCount; i++)\n        {\n            pdus[i] = pduObjs[i];\n            msgs[i] = SmsMessage.createFromPdu(pdus[i]);\n        }\n        return msgs;\n    }\n}\n```\n","slug":"android/Android自动填写获取到的验证码","published":1,"updated":"2017-03-13T14:30:17.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taacf000fr8sy410eu00h","content":"<h2 id=\"添加权限\"><a href=\"#添加权限\" class=\"headerlink\" title=\"添加权限\"></a>添加权限</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.RECEIVE_SMS\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.READ_SMS\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SMSReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ISMSListener</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSmsReceive</span><span class=\"params\">(String verifyCode)</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ISMSListener mSMSListener;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SMSReceiver</span><span class=\"params\">(ISMSListener ismsListener)</span> </span>&#123;</div><div class=\"line\">        mSMSListener = ismsListener;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">\"ImiChatSMSReceiver\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//android.provider.Telephony.Sms.Intents</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String SMS_RECEIVED_ACTION = <span class=\"string\">\"android.provider.Telephony.SMS_RECEIVED\"</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        LogUtil.d(<span class=\"string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (intent.getAction().equals(SMS_RECEIVED_ACTION))</div><div class=\"line\">        &#123;</div><div class=\"line\">            SmsMessage[] messages = getMessagesFromIntent(intent);</div><div class=\"line\">            <span class=\"keyword\">for</span> (SmsMessage message : messages)</div><div class=\"line\">            &#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//                LogUtil.d(message.getOriginatingAddress() + \" : \" +</span></div><div class=\"line\"><span class=\"comment\">//                        message.getDisplayOriginatingAddress() + \" : \" +</span></div><div class=\"line\"><span class=\"comment\">//                        message.getDisplayMessageBody() + \" : \" +</span></div><div class=\"line\"><span class=\"comment\">//                        message.getTimestampMillis());</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">                String msg = message.getDisplayMessageBody();</div><div class=\"line\">                LogUtil.d(<span class=\"string\">\"MSG: \"</span> + msg);</div><div class=\"line\">                String verifyCode = <span class=\"keyword\">null</span>;</div><div class=\"line\">                Pattern p = Pattern.compile(<span class=\"string\">\"\\\\d&#123;4&#125;\"</span>);</div><div class=\"line\">                Matcher m = p.matcher(msg);</div><div class=\"line\">                <span class=\"keyword\">while</span> (m.find()) &#123;</div><div class=\"line\">                    verifyCode = m.group();</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                LogUtil.d(<span class=\"string\">\"verifyCode \"</span> + verifyCode);</div><div class=\"line\">                <span class=\"keyword\">if</span> (mSMSListener != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                    mSMSListener.onSmsReceive(verifyCode);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> SmsMessage[] getMessagesFromIntent(Intent intent)</div><div class=\"line\">    &#123;</div><div class=\"line\">        Object[] messages = (Object[]) intent.getSerializableExtra(<span class=\"string\">\"pdus\"</span>);</div><div class=\"line\">        <span class=\"keyword\">byte</span>[][] pduObjs = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[messages.length][];</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; messages.length; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            pduObjs[i] = (<span class=\"keyword\">byte</span>[]) messages[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[][] pdus = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[pduObjs.length][];</div><div class=\"line\">        <span class=\"keyword\">int</span> pduCount = pdus.length;</div><div class=\"line\">        SmsMessage[] msgs = <span class=\"keyword\">new</span> SmsMessage[pduCount];</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; pduCount; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            pdus[i] = pduObjs[i];</div><div class=\"line\">            msgs[i] = SmsMessage.createFromPdu(pdus[i]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> msgs;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"添加权限\"><a href=\"#添加权限\" class=\"headerlink\" title=\"添加权限\"></a>添加权限</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.RECEIVE_SMS\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.READ_SMS\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">uses-permission</span>&gt;</span></div></pre></td></tr></table></figure>","more":"<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SMSReceiver</span> <span class=\"keyword\">extends</span> <span class=\"title\">BroadcastReceiver</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ISMSListener</span> </span>&#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSmsReceive</span><span class=\"params\">(String verifyCode)</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ISMSListener mSMSListener;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SMSReceiver</span><span class=\"params\">(ISMSListener ismsListener)</span> </span>&#123;</div><div class=\"line\">        mSMSListener = ismsListener;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">\"ImiChatSMSReceiver\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//android.provider.Telephony.Sms.Intents</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String SMS_RECEIVED_ACTION = <span class=\"string\">\"android.provider.Telephony.SMS_RECEIVED\"</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        LogUtil.d(<span class=\"string\">\"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\"</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (intent.getAction().equals(SMS_RECEIVED_ACTION))</div><div class=\"line\">        &#123;</div><div class=\"line\">            SmsMessage[] messages = getMessagesFromIntent(intent);</div><div class=\"line\">            <span class=\"keyword\">for</span> (SmsMessage message : messages)</div><div class=\"line\">            &#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//                LogUtil.d(message.getOriginatingAddress() + \" : \" +</span></div><div class=\"line\"><span class=\"comment\">//                        message.getDisplayOriginatingAddress() + \" : \" +</span></div><div class=\"line\"><span class=\"comment\">//                        message.getDisplayMessageBody() + \" : \" +</span></div><div class=\"line\"><span class=\"comment\">//                        message.getTimestampMillis());</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">                String msg = message.getDisplayMessageBody();</div><div class=\"line\">                LogUtil.d(<span class=\"string\">\"MSG: \"</span> + msg);</div><div class=\"line\">                String verifyCode = <span class=\"keyword\">null</span>;</div><div class=\"line\">                Pattern p = Pattern.compile(<span class=\"string\">\"\\\\d&#123;4&#125;\"</span>);</div><div class=\"line\">                Matcher m = p.matcher(msg);</div><div class=\"line\">                <span class=\"keyword\">while</span> (m.find()) &#123;</div><div class=\"line\">                    verifyCode = m.group();</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                LogUtil.d(<span class=\"string\">\"verifyCode \"</span> + verifyCode);</div><div class=\"line\">                <span class=\"keyword\">if</span> (mSMSListener != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                    mSMSListener.onSmsReceive(verifyCode);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> SmsMessage[] getMessagesFromIntent(Intent intent)</div><div class=\"line\">    &#123;</div><div class=\"line\">        Object[] messages = (Object[]) intent.getSerializableExtra(<span class=\"string\">\"pdus\"</span>);</div><div class=\"line\">        <span class=\"keyword\">byte</span>[][] pduObjs = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[messages.length][];</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; messages.length; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            pduObjs[i] = (<span class=\"keyword\">byte</span>[]) messages[i];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[][] pdus = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[pduObjs.length][];</div><div class=\"line\">        <span class=\"keyword\">int</span> pduCount = pdus.length;</div><div class=\"line\">        SmsMessage[] msgs = <span class=\"keyword\">new</span> SmsMessage[pduCount];</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; pduCount; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            pdus[i] = pduObjs[i];</div><div class=\"line\">            msgs[i] = SmsMessage.createFromPdu(pdus[i]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> msgs;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Why Warning:Unable to find optional library: org.apache.http.legacy occurs?","date":"2017-03-13T15:02:30.000Z","_content":"I guess, the easier way to solve this issue without having to reinstall the SDK is to create a file called optional.json in <sdk-path>\\platforms\\android-23\\optional\\ directory with the following content:\n``` shell\n[\n  {\n    \"name\": \"org.apache.http.legacy\",\n    \"jar\": \"org.apache.http.legacy.jar\",\n    \"manifest\": false\n  }\n]\n```\n来源：[http://stackoverflow.com/questions/33898857/why-warningunable-to-find-optional-library-org-apache-http-legacy-occurs](http://stackoverflow.com/questions/33898857/why-warningunable-to-find-optional-library-org-apache-http-legacy-occurs)","source":"_posts/android/Why-Warning-Unable-to-find-optional-library-org-apache-http-legacy-occurs.md","raw":"---\ntitle: 'Why Warning:Unable to find optional library: org.apache.http.legacy occurs?'\ndate: 2017-03-13 23:02:30\ncategories: android\ntags: [android,legacy,http]\n---\nI guess, the easier way to solve this issue without having to reinstall the SDK is to create a file called optional.json in <sdk-path>\\platforms\\android-23\\optional\\ directory with the following content:\n``` shell\n[\n  {\n    \"name\": \"org.apache.http.legacy\",\n    \"jar\": \"org.apache.http.legacy.jar\",\n    \"manifest\": false\n  }\n]\n```\n来源：[http://stackoverflow.com/questions/33898857/why-warningunable-to-find-optional-library-org-apache-http-legacy-occurs](http://stackoverflow.com/questions/33898857/why-warningunable-to-find-optional-library-org-apache-http-legacy-occurs)","slug":"android/Why-Warning-Unable-to-find-optional-library-org-apache-http-legacy-occurs","published":1,"updated":"2017-03-13T15:04:33.279Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taack000jr8syn7ky5c0b","content":"<p>I guess, the easier way to solve this issue without having to reinstall the SDK is to create a file called optional.json in <sdk-path>\\platforms\\android-23\\optional\\ directory with the following content:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[</div><div class=\"line\">  &#123;</div><div class=\"line\">    &quot;name&quot;: &quot;org.apache.http.legacy&quot;,</div><div class=\"line\">    &quot;jar&quot;: &quot;org.apache.http.legacy.jar&quot;,</div><div class=\"line\">    &quot;manifest&quot;: false</div><div class=\"line\">  &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure></sdk-path></p>\n<p>来源：<a href=\"http://stackoverflow.com/questions/33898857/why-warningunable-to-find-optional-library-org-apache-http-legacy-occurs\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/33898857/why-warningunable-to-find-optional-library-org-apache-http-legacy-occurs</a></p>\n","excerpt":"","more":"<p>I guess, the easier way to solve this issue without having to reinstall the SDK is to create a file called optional.json in <sdk-path>\\platforms\\android-23\\optional\\ directory with the following content:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[</div><div class=\"line\">  &#123;</div><div class=\"line\">    &quot;name&quot;: &quot;org.apache.http.legacy&quot;,</div><div class=\"line\">    &quot;jar&quot;: &quot;org.apache.http.legacy.jar&quot;,</div><div class=\"line\">    &quot;manifest&quot;: false</div><div class=\"line\">  &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure></sdk-path></p>\n<p>来源：<a href=\"http://stackoverflow.com/questions/33898857/why-warningunable-to-find-optional-library-org-apache-http-legacy-occurs\">http://stackoverflow.com/questions/33898857/why-warningunable-to-find-optional-library-org-apache-http-legacy-occurs</a></p>\n"},{"title":"Android Studio使用时源码到处报红色警告，运行时又没错","date":"2017-03-13T14:31:10.000Z","_content":"在AS上开发时，遇到这个问题，打开所有的java源文件，右侧一路标红色，找不到类，到不到方法，因为不能点击跳转，开发时纠结了好久，试了clean、rebuild等各种方法都不起作用，又去网上找大牛们支的招，可能对我不起作用。又有同事只招说换一个AS安装，觉得没必要，太麻烦。后研究参考网上的各种方法，现将自己亲身体验并解决过的一个小技巧附上，以免在遇到此类的问题时慌乱，找错了问题解决的方向。（ps：此方法是参考网上一个问题解决的，但找不到原网址了，所以自己在此写了一下，仅供大家参考）\n<!-- more -->\n\n1、点击File->Invalidate Caches / Restart...\n2、重启Gradle，清除缓存\n3、AS重启后java不再“到处”爆红\n相关推荐\nC# 引用其他命名空间的公共变量时的警告：由于＂***＂是引用封送类的字段，访问上面的成员可能导致运行时异常\n在 ActionScript 3.0 中，无论是在严谨模式下还是在警告模式下编译，都将进行运行时类型检查\n引用 Enterprise Library 5.0 时的一个警告和运行时错误及解决办法\nQT运行时加载UI文件产生的Designer警告\n警告：由于xxx是引用封送类的字段，访问上面的成员可能导致运行时异常\nEclipse在运行时出现的rmi activation 警告\n27、获取运行时信息（包括运行时的service、运行任务、正在运行的进程信息）\n运行时生成instances+运行时调用methods+运行时变更fields内容\n怎样才能让程序在XP启动图形界面之前运行？ 就像启动时自动运行的Chkdsk命令或convert(将C盘转换为NTFS格式时)命令的运行时机一样？\n\n来源： [http://www.07net01.com/program/2016/04/1452749.html](http://www.07net01.com/program/2016/04/1452749.html)","source":"_posts/android/Android-Studio使用时源码到处报红色警告，运行时又没错.md","raw":"---\ntitle: Android Studio使用时源码到处报红色警告，运行时又没错\ndate: 2017-03-13 22:31:10\ncategories: android\ntags: [android,android studio]\n---\n在AS上开发时，遇到这个问题，打开所有的java源文件，右侧一路标红色，找不到类，到不到方法，因为不能点击跳转，开发时纠结了好久，试了clean、rebuild等各种方法都不起作用，又去网上找大牛们支的招，可能对我不起作用。又有同事只招说换一个AS安装，觉得没必要，太麻烦。后研究参考网上的各种方法，现将自己亲身体验并解决过的一个小技巧附上，以免在遇到此类的问题时慌乱，找错了问题解决的方向。（ps：此方法是参考网上一个问题解决的，但找不到原网址了，所以自己在此写了一下，仅供大家参考）\n<!-- more -->\n\n1、点击File->Invalidate Caches / Restart...\n2、重启Gradle，清除缓存\n3、AS重启后java不再“到处”爆红\n相关推荐\nC# 引用其他命名空间的公共变量时的警告：由于＂***＂是引用封送类的字段，访问上面的成员可能导致运行时异常\n在 ActionScript 3.0 中，无论是在严谨模式下还是在警告模式下编译，都将进行运行时类型检查\n引用 Enterprise Library 5.0 时的一个警告和运行时错误及解决办法\nQT运行时加载UI文件产生的Designer警告\n警告：由于xxx是引用封送类的字段，访问上面的成员可能导致运行时异常\nEclipse在运行时出现的rmi activation 警告\n27、获取运行时信息（包括运行时的service、运行任务、正在运行的进程信息）\n运行时生成instances+运行时调用methods+运行时变更fields内容\n怎样才能让程序在XP启动图形界面之前运行？ 就像启动时自动运行的Chkdsk命令或convert(将C盘转换为NTFS格式时)命令的运行时机一样？\n\n来源： [http://www.07net01.com/program/2016/04/1452749.html](http://www.07net01.com/program/2016/04/1452749.html)","slug":"android/Android-Studio使用时源码到处报红色警告，运行时又没错","published":1,"updated":"2017-03-13T14:36:37.432Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taacn000lr8syiyagwmio","content":"<p>在AS上开发时，遇到这个问题，打开所有的java源文件，右侧一路标红色，找不到类，到不到方法，因为不能点击跳转，开发时纠结了好久，试了clean、rebuild等各种方法都不起作用，又去网上找大牛们支的招，可能对我不起作用。又有同事只招说换一个AS安装，觉得没必要，太麻烦。后研究参考网上的各种方法，现将自己亲身体验并解决过的一个小技巧附上，以免在遇到此类的问题时慌乱，找错了问题解决的方向。（ps：此方法是参考网上一个问题解决的，但找不到原网址了，所以自己在此写了一下，仅供大家参考）<br><a id=\"more\"></a></p>\n<p>1、点击File-&gt;Invalidate Caches / Restart…<br>2、重启Gradle，清除缓存<br>3、AS重启后java不再“到处”爆红<br>相关推荐<br>C# 引用其他命名空间的公共变量时的警告：由于＂<em>*</em>＂是引用封送类的字段，访问上面的成员可能导致运行时异常<br>在 ActionScript 3.0 中，无论是在严谨模式下还是在警告模式下编译，都将进行运行时类型检查<br>引用 Enterprise Library 5.0 时的一个警告和运行时错误及解决办法<br>QT运行时加载UI文件产生的Designer警告<br>警告：由于xxx是引用封送类的字段，访问上面的成员可能导致运行时异常<br>Eclipse在运行时出现的rmi activation 警告<br>27、获取运行时信息（包括运行时的service、运行任务、正在运行的进程信息）<br>运行时生成instances+运行时调用methods+运行时变更fields内容<br>怎样才能让程序在XP启动图形界面之前运行？ 就像启动时自动运行的Chkdsk命令或convert(将C盘转换为NTFS格式时)命令的运行时机一样？</p>\n<p>来源： <a href=\"http://www.07net01.com/program/2016/04/1452749.html\" target=\"_blank\" rel=\"external\">http://www.07net01.com/program/2016/04/1452749.html</a></p>\n","excerpt":"<p>在AS上开发时，遇到这个问题，打开所有的java源文件，右侧一路标红色，找不到类，到不到方法，因为不能点击跳转，开发时纠结了好久，试了clean、rebuild等各种方法都不起作用，又去网上找大牛们支的招，可能对我不起作用。又有同事只招说换一个AS安装，觉得没必要，太麻烦。后研究参考网上的各种方法，现将自己亲身体验并解决过的一个小技巧附上，以免在遇到此类的问题时慌乱，找错了问题解决的方向。（ps：此方法是参考网上一个问题解决的，但找不到原网址了，所以自己在此写了一下，仅供大家参考）<br></p>","more":"<p></p>\n<p>1、点击File-&gt;Invalidate Caches / Restart…<br>2、重启Gradle，清除缓存<br>3、AS重启后java不再“到处”爆红<br>相关推荐<br>C# 引用其他命名空间的公共变量时的警告：由于＂<em>*</em>＂是引用封送类的字段，访问上面的成员可能导致运行时异常<br>在 ActionScript 3.0 中，无论是在严谨模式下还是在警告模式下编译，都将进行运行时类型检查<br>引用 Enterprise Library 5.0 时的一个警告和运行时错误及解决办法<br>QT运行时加载UI文件产生的Designer警告<br>警告：由于xxx是引用封送类的字段，访问上面的成员可能导致运行时异常<br>Eclipse在运行时出现的rmi activation 警告<br>27、获取运行时信息（包括运行时的service、运行任务、正在运行的进程信息）<br>运行时生成instances+运行时调用methods+运行时变更fields内容<br>怎样才能让程序在XP启动图形界面之前运行？ 就像启动时自动运行的Chkdsk命令或convert(将C盘转换为NTFS格式时)命令的运行时机一样？</p>\n<p>来源： <a href=\"http://www.07net01.com/program/2016/04/1452749.html\">http://www.07net01.com/program/2016/04/1452749.html</a></p>"},{"title":"为table的td添加点击事件","date":"2017-03-12T15:36:40.000Z","_content":"//在页面加载时候，就使td节点具有click点击能力\n<!-- more -->\n``` html\nvar tdNods = $(\"td.edit\");\ntdNods.click(tdClick);\n//td的点击事件\nfunction tdClick(){\n    //将td的文本内容保存\n    var td = $(this);\n    var tdText = td.text();\n    //将td的内容清空\n    td.empty();\n    //新建一个输入框\n    var input = $(\"<input style='width: 40px;'>\");\n    //将保存的文本内容赋值给输入框\n    input.attr(\"value\",tdText);\n    //将输入框添加到td中\n    td.append(input);\n    //给输入框注册事件，当失去焦点时就可以将文本保存起来\n    input.blur(function(){\n        //将输入框的文本保存\n        var input = $(this);\n        var inputText = input.val();\n        //将td的内容，即输入框去掉,然后给td赋值\n        var td = input.parent(\"td\");\n        var productId = input.parent().parent().find(\"input\").val();\n        console.log(inputText);\n        console.log(productId);\n        var callback = function(msg){\n            if (commCallback(msg)) {\n                td.html(inputText);\n//                            alert(\"修改商品成功\");\n//                            window.location.reload(true);\n            }\n        };\n        commonPost('/admin/mallStandardProcurement/updateCommodityStock',\n                {\"recId\":$(\"#recId\").val(),\"productId\":productId,\"stock\":inputText}, callback, 'json');\n        //让td重新拥有点击事件\n        td.click(tdClick);\n    });\n    input.keyup(function(event){\n        //1.获取当前用户按下的键值\n        //解决不同浏览器获得事件对象的差异,\n        // IE用自动提供window.event，而其他浏览器必须显示的提供，即在方法参数中加上event\n        var myEvent = event || window.event;\n        var keyCode = myEvent.keyCode;\n        //2.判断是否是ESC键按下\n        if(keyCode == 27){\n            //将input输入框的值还原成修改之前的值\n            input.val(tdText);\n        }\n    });\n    //将输入框中的文本高亮选中\n    //将jquery对象转化为DOM对象\n    var inputDom = input.get(0);\n    inputDom.select();\n    //将td的点击事件移除\n    td.unbind(\"click\");\n}\n```\n","source":"_posts/android/为table的td添加点击事件.md","raw":"---\ntitle: 为table的td添加点击事件\ndate: 2017-03-12 23:36:40\ncategories: javascript\ntags: [javascript,table,点击事件]\n---\n//在页面加载时候，就使td节点具有click点击能力\n<!-- more -->\n``` html\nvar tdNods = $(\"td.edit\");\ntdNods.click(tdClick);\n//td的点击事件\nfunction tdClick(){\n    //将td的文本内容保存\n    var td = $(this);\n    var tdText = td.text();\n    //将td的内容清空\n    td.empty();\n    //新建一个输入框\n    var input = $(\"<input style='width: 40px;'>\");\n    //将保存的文本内容赋值给输入框\n    input.attr(\"value\",tdText);\n    //将输入框添加到td中\n    td.append(input);\n    //给输入框注册事件，当失去焦点时就可以将文本保存起来\n    input.blur(function(){\n        //将输入框的文本保存\n        var input = $(this);\n        var inputText = input.val();\n        //将td的内容，即输入框去掉,然后给td赋值\n        var td = input.parent(\"td\");\n        var productId = input.parent().parent().find(\"input\").val();\n        console.log(inputText);\n        console.log(productId);\n        var callback = function(msg){\n            if (commCallback(msg)) {\n                td.html(inputText);\n//                            alert(\"修改商品成功\");\n//                            window.location.reload(true);\n            }\n        };\n        commonPost('/admin/mallStandardProcurement/updateCommodityStock',\n                {\"recId\":$(\"#recId\").val(),\"productId\":productId,\"stock\":inputText}, callback, 'json');\n        //让td重新拥有点击事件\n        td.click(tdClick);\n    });\n    input.keyup(function(event){\n        //1.获取当前用户按下的键值\n        //解决不同浏览器获得事件对象的差异,\n        // IE用自动提供window.event，而其他浏览器必须显示的提供，即在方法参数中加上event\n        var myEvent = event || window.event;\n        var keyCode = myEvent.keyCode;\n        //2.判断是否是ESC键按下\n        if(keyCode == 27){\n            //将input输入框的值还原成修改之前的值\n            input.val(tdText);\n        }\n    });\n    //将输入框中的文本高亮选中\n    //将jquery对象转化为DOM对象\n    var inputDom = input.get(0);\n    inputDom.select();\n    //将td的点击事件移除\n    td.unbind(\"click\");\n}\n```\n","slug":"android/为table的td添加点击事件","published":1,"updated":"2017-03-12T15:48:40.533Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taacq000or8syvc0ody4e","content":"<p>//在页面加载时候，就使td节点具有click点击能力<br><a id=\"more\"></a><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">var tdNods = $(\"td.edit\");</div><div class=\"line\">tdNods.click(tdClick);</div><div class=\"line\">//td的点击事件</div><div class=\"line\">function tdClick()&#123;</div><div class=\"line\">    //将td的文本内容保存</div><div class=\"line\">    var td = $(this);</div><div class=\"line\">    var tdText = td.text();</div><div class=\"line\">    //将td的内容清空</div><div class=\"line\">    td.empty();</div><div class=\"line\">    //新建一个输入框</div><div class=\"line\">    var input = $(\"<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">style</span>=<span class=\"string\">'width: 40px;'</span>&gt;</span>\");</div><div class=\"line\">    //将保存的文本内容赋值给输入框</div><div class=\"line\">    input.attr(\"value\",tdText);</div><div class=\"line\">    //将输入框添加到td中</div><div class=\"line\">    td.append(input);</div><div class=\"line\">    //给输入框注册事件，当失去焦点时就可以将文本保存起来</div><div class=\"line\">    input.blur(function()&#123;</div><div class=\"line\">        //将输入框的文本保存</div><div class=\"line\">        var input = $(this);</div><div class=\"line\">        var inputText = input.val();</div><div class=\"line\">        //将td的内容，即输入框去掉,然后给td赋值</div><div class=\"line\">        var td = input.parent(\"td\");</div><div class=\"line\">        var productId = input.parent().parent().find(\"input\").val();</div><div class=\"line\">        console.log(inputText);</div><div class=\"line\">        console.log(productId);</div><div class=\"line\">        var callback = function(msg)&#123;</div><div class=\"line\">            if (commCallback(msg)) &#123;</div><div class=\"line\">                td.html(inputText);</div><div class=\"line\">//                            alert(\"修改商品成功\");</div><div class=\"line\">//                            window.location.reload(true);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        commonPost('/admin/mallStandardProcurement/updateCommodityStock',</div><div class=\"line\">                &#123;\"recId\":$(\"#recId\").val(),\"productId\":productId,\"stock\":inputText&#125;, callback, 'json');</div><div class=\"line\">        //让td重新拥有点击事件</div><div class=\"line\">        td.click(tdClick);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    input.keyup(function(event)&#123;</div><div class=\"line\">        //1.获取当前用户按下的键值</div><div class=\"line\">        //解决不同浏览器获得事件对象的差异,</div><div class=\"line\">        // IE用自动提供window.event，而其他浏览器必须显示的提供，即在方法参数中加上event</div><div class=\"line\">        var myEvent = event || window.event;</div><div class=\"line\">        var keyCode = myEvent.keyCode;</div><div class=\"line\">        //2.判断是否是ESC键按下</div><div class=\"line\">        if(keyCode == 27)&#123;</div><div class=\"line\">            //将input输入框的值还原成修改之前的值</div><div class=\"line\">            input.val(tdText);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    //将输入框中的文本高亮选中</div><div class=\"line\">    //将jquery对象转化为DOM对象</div><div class=\"line\">    var inputDom = input.get(0);</div><div class=\"line\">    inputDom.select();</div><div class=\"line\">    //将td的点击事件移除</div><div class=\"line\">    td.unbind(\"click\");</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>//在页面加载时候，就使td节点具有click点击能力<br></p>","more":"<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">var tdNods = $(\"td.edit\");</div><div class=\"line\">tdNods.click(tdClick);</div><div class=\"line\">//td的点击事件</div><div class=\"line\">function tdClick()&#123;</div><div class=\"line\">    //将td的文本内容保存</div><div class=\"line\">    var td = $(this);</div><div class=\"line\">    var tdText = td.text();</div><div class=\"line\">    //将td的内容清空</div><div class=\"line\">    td.empty();</div><div class=\"line\">    //新建一个输入框</div><div class=\"line\">    var input = $(\"<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">style</span>=<span class=\"string\">'width: 40px;'</span>&gt;</span>\");</div><div class=\"line\">    //将保存的文本内容赋值给输入框</div><div class=\"line\">    input.attr(\"value\",tdText);</div><div class=\"line\">    //将输入框添加到td中</div><div class=\"line\">    td.append(input);</div><div class=\"line\">    //给输入框注册事件，当失去焦点时就可以将文本保存起来</div><div class=\"line\">    input.blur(function()&#123;</div><div class=\"line\">        //将输入框的文本保存</div><div class=\"line\">        var input = $(this);</div><div class=\"line\">        var inputText = input.val();</div><div class=\"line\">        //将td的内容，即输入框去掉,然后给td赋值</div><div class=\"line\">        var td = input.parent(\"td\");</div><div class=\"line\">        var productId = input.parent().parent().find(\"input\").val();</div><div class=\"line\">        console.log(inputText);</div><div class=\"line\">        console.log(productId);</div><div class=\"line\">        var callback = function(msg)&#123;</div><div class=\"line\">            if (commCallback(msg)) &#123;</div><div class=\"line\">                td.html(inputText);</div><div class=\"line\">//                            alert(\"修改商品成功\");</div><div class=\"line\">//                            window.location.reload(true);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        commonPost('/admin/mallStandardProcurement/updateCommodityStock',</div><div class=\"line\">                &#123;\"recId\":$(\"#recId\").val(),\"productId\":productId,\"stock\":inputText&#125;, callback, 'json');</div><div class=\"line\">        //让td重新拥有点击事件</div><div class=\"line\">        td.click(tdClick);</div><div class=\"line\">    &#125;);</div><div class=\"line\">    input.keyup(function(event)&#123;</div><div class=\"line\">        //1.获取当前用户按下的键值</div><div class=\"line\">        //解决不同浏览器获得事件对象的差异,</div><div class=\"line\">        // IE用自动提供window.event，而其他浏览器必须显示的提供，即在方法参数中加上event</div><div class=\"line\">        var myEvent = event || window.event;</div><div class=\"line\">        var keyCode = myEvent.keyCode;</div><div class=\"line\">        //2.判断是否是ESC键按下</div><div class=\"line\">        if(keyCode == 27)&#123;</div><div class=\"line\">            //将input输入框的值还原成修改之前的值</div><div class=\"line\">            input.val(tdText);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    //将输入框中的文本高亮选中</div><div class=\"line\">    //将jquery对象转化为DOM对象</div><div class=\"line\">    var inputDom = input.get(0);</div><div class=\"line\">    inputDom.select();</div><div class=\"line\">    //将td的点击事件移除</div><div class=\"line\">    td.unbind(\"click\");</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p>"},{"title":"小工具","date":"2017-03-13T14:08:04.000Z","_content":"拨打电话\n``` shell\npublic static void call(Context context, String phoneNumber) {\n        context.startActivity(new Intent(Intent.ACTION_CALL, Uri.parse(\"tel:\" + phoneNumber)));\n    }\n```\n<!-- more -->\n跳转至拨号界面\n``` shell\npublic static void callDial(Context context, String phoneNumber) {\n        context.startActivity(new Intent(Intent.ACTION_DIAL, Uri.parse(\"tel:\" + phoneNumber)));\n    }\n```\n发送短信\n``` shell\npublic static void sendSms(Context context, String phoneNumber,\n            String content) {\n        Uri uri = Uri.parse(\"smsto:\"\n                + (TextUtils.isEmpty(phoneNumber) ? \"\" : phoneNumber));\n        Intent intent = new Intent(Intent.ACTION_SENDTO, uri);\n        intent.putExtra(\"sms_body\", TextUtils.isEmpty(content) ? \"\" : content);\n        context.startActivity(intent);\n    }\n```\n唤醒屏幕并解锁\n``` shell\npublic static void wakeUpAndUnlock(Context context){\n        KeyguardManager km= (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);\n        KeyguardManager.KeyguardLock kl = km.newKeyguardLock(\"unLock\");\n        //解锁\n        kl.disableKeyguard();\n        //获取电源管理器对象\n        PowerManager pm=(PowerManager) context.getSystemService(Context.POWER_SERVICE);\n        //获取PowerManager.WakeLock对象,后面的参数|表示同时传入两个值,最后的是LogCat里用的Tag\n        PowerManager.WakeLock wl = pm.newWakeLock(PowerManager.ACQUIRE_CAUSES_WAKEUP | PowerManager.SCREEN_DIM_WAKE_LOCK,\"bright\");\n        //点亮屏幕\n        wl.acquire();\n        //释放\n        wl.release();\n    }\n```\n需要添加权限\n``` shell\n<uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n<uses-permission android:name=\"android.permission.DISABLE_KEYGUARD\" />\n```\n判断当前App处于前台还是后台状态\n``` shell\npublic static boolean isApplicationBackground(final Context context) {\n        ActivityManager am = (ActivityManager) context\n                .getSystemService(Context.ACTIVITY_SERVICE);\n        @SuppressWarnings(\"deprecation\")\n        List<ActivityManager.RunningTaskInfo> tasks = am.getRunningTasks(1);\n        if (!tasks.isEmpty()) {\n            ComponentName topActivity = tasks.get(0).topActivity;\n            if (!topActivity.getPackageName().equals(context.getPackageName())) {\n                return true;\n            }\n        }\n        return false;\n    }\n```\n需要添加权限\n``` shell\n<uses-permission\n     android:name=\"android.permission.GET_TASKS\" />\n```\n判断当前手机是否处于锁屏(睡眠)状态\n``` shell\npublic static boolean isSleeping(Context context) {\n        KeyguardManager kgMgr = (KeyguardManager) context\n                .getSystemService(Context.KEYGUARD_SERVICE);\n        boolean isSleeping = kgMgr.inKeyguardRestrictedInputMode();\n        return isSleeping;\n    }\n```\n判断当前是否有网络连接\n``` shell\npublic static boolean isOnline(Context context) {\n        ConnectivityManager manager = (ConnectivityManager) context\n                .getSystemService(Activity.CONNECTIVITY_SERVICE);\n        NetworkInfo info = manager.getActiveNetworkInfo();\n        if (info != null && info.isConnected()) {\n            return true;\n        }\n        return false;\n    }\n```\n判断当前是否是WIFI连接状态\n``` shell\npublic static boolean isWifiConnected(Context context) {\n    ConnectivityManager connectivityManager = (ConnectivityManager) context\n            .getSystemService(Context.CONNECTIVITY_SERVICE);\n    NetworkInfo wifiNetworkInfo = connectivityManager\n            .getNetworkInfo(ConnectivityManager.TYPE_WIFI);\n    if (wifiNetworkInfo.isConnected()) {\n        return true;\n    }\n    return false;\n}\n```\n安装APK\n``` shell\npublic static void installApk(Context context, File file) {\n    Intent intent = new Intent();\n    intent.setAction(\"android.intent.action.VIEW\");\n    intent.addCategory(\"android.intent.category.DEFAULT\");\n    intent.setType(\"application/vnd.android.package-archive\");\n    intent.setDataAndType(Uri.fromFile(file),\n            \"application/vnd.android.package-archive\");\n    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n    context.startActivity(intent);\n}\n```\n判断当前设备是否为手机\n``` shell\npublic static boolean isPhone(Context context) {\n    TelephonyManager telephony = (TelephonyManager) context\n            .getSystemService(Context.TELEPHONY_SERVICE);\n    if (telephony.getPhoneType() == TelephonyManager.PHONE_TYPE_NONE) {\n        return false;\n    } else {\n        return true;\n    }\n}\n```\n获取当前设备宽高，单位px\n``` shell\n@SuppressWarnings(\"deprecation\")\npublic static int getDeviceWidth(Context context) {\n    WindowManager manager = (WindowManager) context\n            .getSystemService(Context.WINDOW_SERVICE);\n    return manager.getDefaultDisplay().getWidth();\n}\n\n@SuppressWarnings(\"deprecation\")\npublic static int getDeviceHeight(Context context) {\n    WindowManager manager = (WindowManager) context\n            .getSystemService(Context.WINDOW_SERVICE);\n    return manager.getDefaultDisplay().getHeight();\n}\n```\n获取当前设备的IMEI，需要与上面的isPhone()一起使用\n``` shell\n@TargetApi(Build.VERSION_CODES.CUPCAKE)\npublic static String getDeviceIMEI(Context context) {\n    String deviceId;\n    if (isPhone(context)) {\n        TelephonyManager telephony = (TelephonyManager) context\n                .getSystemService(Context.TELEPHONY_SERVICE);\n        deviceId = telephony.getDeviceId();\n    } else {\n        deviceId = Settings.Secure.getString(context.getContentResolver(),\n                Settings.Secure.ANDROID_ID);\n\n    }\n    return deviceId;\n}\n```\n获取当前设备的MAC地址\n``` shell\npublic static String getMacAddress(Context context) {\n    String macAddress;\n    WifiManager wifi = (WifiManager) context\n            .getSystemService(Context.WIFI_SERVICE);\n    WifiInfo info = wifi.getConnectionInfo();\n    macAddress = info.getMacAddress();\n    if (null == macAddress) {\n        return \"\";\n    }\n    macAddress = macAddress.replace(\":\", \"\");\n    return macAddress;\n}\n```\n获取当前程序的版本号\n``` shell\npublic static String getAppVersion(Context context) {\n    String version = \"0\";\n    try {\n        version = context.getPackageManager().getPackageInfo(\n                context.getPackageName(), 0).versionName;\n    } catch (PackageManager.NameNotFoundException e) {\n        e.printStackTrace();\n    }\n    return version;\n}\n```\n收集设备信息，用于信息统计分析\n``` shell\npublic static Properties collectDeviceInfo(Context context) {\n        Properties mDeviceCrashInfo = new Properties();\n        try {\n            PackageManager pm = context.getPackageManager();\n            PackageInfo pi = pm.getPackageInfo(context.getPackageName(),\n                    PackageManager.GET_ACTIVITIES);\n            if (pi != null) {\n                mDeviceCrashInfo.put(VERSION_NAME,\n                        pi.versionName == null ? \"not set\" : pi.versionName);\n                mDeviceCrashInfo.put(VERSION_CODE, pi.versionCode);\n            }\n        } catch (PackageManager.NameNotFoundException e) {\n            Log.e(TAG, \"Error while collect package info\", e);\n        }\n        Field[] fields = Build.class.getDeclaredFields();\n        for (Field field : fields) {\n            try {\n                field.setAccessible(true);\n                mDeviceCrashInfo.put(field.getName(), field.get(null));\n            } catch (Exception e) {\n                Log.e(TAG, \"Error while collect crash info\", e);\n            }\n        }\n\n        return mDeviceCrashInfo;\n    }\n\npublic static String collectDeviceInfoStr(Context context) {\n        Properties prop = collectDeviceInfo(context);\n        Set deviceInfos = prop.keySet();\n        StringBuilder deviceInfoStr = new StringBuilder(\"{\\n\");\n        for (Iterator iter = deviceInfos.iterator(); iter.hasNext();) {\n            Object item = iter.next();\n            deviceInfoStr.append(\"\\t\\t\\t\" + item + \":\" + prop.get(item)\n                    + \", \\n\");\n        }\n        deviceInfoStr.append(\"}\");\n        return deviceInfoStr.toString();\n    }\n```\n是否有SD卡\n``` shell\npublic static boolean haveSDCard() {\n        return android.os.Environment.getExternalStorageState().equals(\n                android.os.Environment.MEDIA_MOUNTED);\n    }\n```\n动态隐藏软键盘\n``` shell\n@TargetApi(Build.VERSION_CODES.CUPCAKE)\n    public static void hideSoftInput(Activity activity) {\n        View view = activity.getWindow().peekDecorView();\n        if (view != null) {\n            InputMethodManager inputmanger = (InputMethodManager) activity\n                    .getSystemService(Context.INPUT_METHOD_SERVICE);\n            inputmanger.hideSoftInputFromWindow(view.getWindowToken(), 0);\n        }\n    }\n\n    @TargetApi(Build.VERSION_CODES.CUPCAKE)\npublic static void hideSoftInput(Context context, EditText edit) {\n        edit.clearFocus();\n        InputMethodManager inputmanger = (InputMethodManager) context\n                .getSystemService(Context.INPUT_METHOD_SERVICE);\n        inputmanger.hideSoftInputFromWindow(edit.getWindowToken(), 0);\n    }\n```\n动态显示软键盘\n``` shell\n@TargetApi(Build.VERSION_CODES.CUPCAKE)\npublic static void showSoftInput(Context context, EditText edit) {\n        edit.setFocusable(true);\n        edit.setFocusableInTouchMode(true);\n        edit.requestFocus();\n        InputMethodManager inputManager = (InputMethodManager) context\n                .getSystemService(Context.INPUT_METHOD_SERVICE);\n        inputManager.showSoftInput(edit, 0);\n    }\n\n动态显示或者是隐藏软键盘\n\n\n@TargetApi(Build.VERSION_CODES.CUPCAKE)\npublic static void toggleSoftInput(Context context, EditText edit) {\n        edit.setFocusable(true);\n        edit.setFocusableInTouchMode(true);\n        edit.requestFocus();\n        InputMethodManager inputManager = (InputMethodManager) context\n                .getSystemService(Context.INPUT_METHOD_SERVICE);\n        inputManager.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);\n    }\n```\n主动回到Home，后台运行\n``` shell\npublic static void goHome(Context context) {\n        Intent mHomeIntent = new Intent(Intent.ACTION_MAIN);\n        mHomeIntent.addCategory(Intent.CATEGORY_HOME);\n        mHomeIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK\n                | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);\n        context.startActivity(mHomeIntent);\n    }\n```\n获取状态栏高度\n注意，要在onWindowFocusChanged中调用，在onCreate中获取高度为0\n``` shell\n@TargetApi(Build.VERSION_CODES.CUPCAKE)\npublic static int getStatusBarHeight(Activity activity) {\n    Rect frame = new Rect();\n    activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(frame);\n        return frame.top;\n    }\n```\n获取状态栏高度＋标题栏(ActionBar)高度\n(注意，如果没有ActionBar，那么获取的高度将和上面的是一样的，只有状态栏的高度)\n``` shell\npublic static int getTopBarHeight(Activity activity) {\n        return activity.getWindow().findViewById(Window.ID_ANDROID_CONTENT)\n                .getTop();\n    }\n```\n获取MCC+MNC代码 (SIM卡运营商国家代码和运营商网络代码)\n仅当用户已在网络注册时有效, CDMA 可能会无效（中国移动：46000 46002, 中国联通：46001,中国电信：46003）\n``` shell\npublic static String getNetworkOperator(Context context) {\n        TelephonyManager telephonyManager = (TelephonyManager) context\n                .getSystemService(Context.TELEPHONY_SERVICE);\n        return telephonyManager.getNetworkOperator();\n    }\n```\n返回移动网络运营商的名字\n(例：中国联通、中国移动、中国电信) 仅当用户已在网络注册时有效, CDMA 可能会无效)\n``` shell\npublic static String getNetworkOperatorName(Context context) {\n        TelephonyManager telephonyManager = (TelephonyManager) context\n                .getSystemService(Context.TELEPHONY_SERVICE);\n        return telephonyManager.getNetworkOperatorName();\n    }\n```\n返回移动终端类型\nPHONE_TYPE_NONE :0 手机制式未知\nPHONE_TYPE_GSM :1 手机制式为GSM，移动和联通\nPHONE_TYPE_CDMA :2 手机制式为CDMA，电信\nPHONE_TYPE_SIP:3\n``` shell\npublic static int getPhoneType(Context context) {\n        TelephonyManager telephonyManager = (TelephonyManager) context\n                .getSystemService(Context.TELEPHONY_SERVICE);\n        return telephonyManager.getPhoneType();\n    }\n```\n判断手机连接的网络类型(2G,3G,4G)\n联通的3G为UMTS或HSDPA，移动和联通的2G为GPRS或EGDE，电信的2G为CDMA，电信的3G为EVDO\n``` shell\npublic class Constants {\n    /**\n     * Unknown network class\n     */\n    public static final int NETWORK_CLASS_UNKNOWN = 0;\n\n    /**\n     * wifi net work\n     */\n    public static final int NETWORK_WIFI = 1;\n\n    /**\n     * \"2G\" networks\n     */\n    public static final int NETWORK_CLASS_2_G = 2;\n\n    /**\n     * \"3G\" networks\n     */\n    public static final int NETWORK_CLASS_3_G = 3;\n\n    /**\n     * \"4G\" networks\n     */\n    public static final int NETWORK_CLASS_4_G = 4;\n\n}\n\npublic static int getNetWorkClass(Context context) {\n        TelephonyManager telephonyManager = (TelephonyManager) context\n                .getSystemService(Context.TELEPHONY_SERVICE);\n\n        switch (telephonyManager.getNetworkType()) {\n        case TelephonyManager.NETWORK_TYPE_GPRS:\n        case TelephonyManager.NETWORK_TYPE_EDGE:\n        case TelephonyManager.NETWORK_TYPE_CDMA:\n        case TelephonyManager.NETWORK_TYPE_1xRTT:\n        case TelephonyManager.NETWORK_TYPE_IDEN:\n            return Constants.NETWORK_CLASS_2_G;\n\n        case TelephonyManager.NETWORK_TYPE_UMTS:\n        case TelephonyManager.NETWORK_TYPE_EVDO_0:\n        case TelephonyManager.NETWORK_TYPE_EVDO_A:\n        case TelephonyManager.NETWORK_TYPE_HSDPA:\n        case TelephonyManager.NETWORK_TYPE_HSUPA:\n        case TelephonyManager.NETWORK_TYPE_HSPA:\n        case TelephonyManager.NETWORK_TYPE_EVDO_B:\n        case TelephonyManager.NETWORK_TYPE_EHRPD:\n        case TelephonyManager.NETWORK_TYPE_HSPAP:\n            return Constants.NETWORK_CLASS_3_G;\n\n        case TelephonyManager.NETWORK_TYPE_LTE:\n            return Constants.NETWORK_CLASS_4_G;\n\n        default:\n            return Constants.NETWORK_CLASS_UNKNOWN;\n        }\n    }\n```\n判断当前手机的网络类型(WIFI还是2,3,4G)\n需要用到上面的方法\n``` shell\npublic static int getNetWorkStatus(Context context) {\n        int netWorkType = Constants.NETWORK_CLASS_UNKNOWN;\n\n        ConnectivityManager connectivityManager = (ConnectivityManager) context\n                .getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n\n        if (networkInfo != null && networkInfo.isConnected()) {\n            int type = networkInfo.getType();\n\n            if (type == ConnectivityManager.TYPE_WIFI) {\n                netWorkType = Constants.NETWORK_WIFI;\n            } else if (type == ConnectivityManager.TYPE_MOBILE) {\n                netWorkType = getNetWorkClass(context);\n            }\n        }\n\n        return netWorkType;\n    }\n```\npx-dp转换\n``` shell\npublic static int dip2px(Context context, float dpValue) {\n    final float scale = context.getResources().getDisplayMetrics().density;\n    return (int) (dpValue * scale + 0.5f);\n}\n\npublic static int px2dip(Context context, float pxValue) {\n    final float scale = context.getResources().getDisplayMetrics().density;\n    return (int) (pxValue / scale + 0.5f);\n}\n```\npx-sp转换\n``` shell\npublic static int px2sp(Context context, float pxValue) {\n        final float fontScale = context.getResources().getDisplayMetrics().scaledDensity;\n        return (int) (pxValue / fontScale + 0.5f);\n    }\n\npublic static int sp2px(Context context, float spValue) {\n        final float fontScale = context.getResources().getDisplayMetrics().scaledDensity;\n        return (int) (spValue * fontScale + 0.5f);\n    }\n```\n\n\n","source":"_posts/android/小工具.md","raw":"---\ntitle: 小工具\ndate: 2017-03-13 22:08:04\ncategories: android\ntags: [android]\n---\n拨打电话\n``` shell\npublic static void call(Context context, String phoneNumber) {\n        context.startActivity(new Intent(Intent.ACTION_CALL, Uri.parse(\"tel:\" + phoneNumber)));\n    }\n```\n<!-- more -->\n跳转至拨号界面\n``` shell\npublic static void callDial(Context context, String phoneNumber) {\n        context.startActivity(new Intent(Intent.ACTION_DIAL, Uri.parse(\"tel:\" + phoneNumber)));\n    }\n```\n发送短信\n``` shell\npublic static void sendSms(Context context, String phoneNumber,\n            String content) {\n        Uri uri = Uri.parse(\"smsto:\"\n                + (TextUtils.isEmpty(phoneNumber) ? \"\" : phoneNumber));\n        Intent intent = new Intent(Intent.ACTION_SENDTO, uri);\n        intent.putExtra(\"sms_body\", TextUtils.isEmpty(content) ? \"\" : content);\n        context.startActivity(intent);\n    }\n```\n唤醒屏幕并解锁\n``` shell\npublic static void wakeUpAndUnlock(Context context){\n        KeyguardManager km= (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);\n        KeyguardManager.KeyguardLock kl = km.newKeyguardLock(\"unLock\");\n        //解锁\n        kl.disableKeyguard();\n        //获取电源管理器对象\n        PowerManager pm=(PowerManager) context.getSystemService(Context.POWER_SERVICE);\n        //获取PowerManager.WakeLock对象,后面的参数|表示同时传入两个值,最后的是LogCat里用的Tag\n        PowerManager.WakeLock wl = pm.newWakeLock(PowerManager.ACQUIRE_CAUSES_WAKEUP | PowerManager.SCREEN_DIM_WAKE_LOCK,\"bright\");\n        //点亮屏幕\n        wl.acquire();\n        //释放\n        wl.release();\n    }\n```\n需要添加权限\n``` shell\n<uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n<uses-permission android:name=\"android.permission.DISABLE_KEYGUARD\" />\n```\n判断当前App处于前台还是后台状态\n``` shell\npublic static boolean isApplicationBackground(final Context context) {\n        ActivityManager am = (ActivityManager) context\n                .getSystemService(Context.ACTIVITY_SERVICE);\n        @SuppressWarnings(\"deprecation\")\n        List<ActivityManager.RunningTaskInfo> tasks = am.getRunningTasks(1);\n        if (!tasks.isEmpty()) {\n            ComponentName topActivity = tasks.get(0).topActivity;\n            if (!topActivity.getPackageName().equals(context.getPackageName())) {\n                return true;\n            }\n        }\n        return false;\n    }\n```\n需要添加权限\n``` shell\n<uses-permission\n     android:name=\"android.permission.GET_TASKS\" />\n```\n判断当前手机是否处于锁屏(睡眠)状态\n``` shell\npublic static boolean isSleeping(Context context) {\n        KeyguardManager kgMgr = (KeyguardManager) context\n                .getSystemService(Context.KEYGUARD_SERVICE);\n        boolean isSleeping = kgMgr.inKeyguardRestrictedInputMode();\n        return isSleeping;\n    }\n```\n判断当前是否有网络连接\n``` shell\npublic static boolean isOnline(Context context) {\n        ConnectivityManager manager = (ConnectivityManager) context\n                .getSystemService(Activity.CONNECTIVITY_SERVICE);\n        NetworkInfo info = manager.getActiveNetworkInfo();\n        if (info != null && info.isConnected()) {\n            return true;\n        }\n        return false;\n    }\n```\n判断当前是否是WIFI连接状态\n``` shell\npublic static boolean isWifiConnected(Context context) {\n    ConnectivityManager connectivityManager = (ConnectivityManager) context\n            .getSystemService(Context.CONNECTIVITY_SERVICE);\n    NetworkInfo wifiNetworkInfo = connectivityManager\n            .getNetworkInfo(ConnectivityManager.TYPE_WIFI);\n    if (wifiNetworkInfo.isConnected()) {\n        return true;\n    }\n    return false;\n}\n```\n安装APK\n``` shell\npublic static void installApk(Context context, File file) {\n    Intent intent = new Intent();\n    intent.setAction(\"android.intent.action.VIEW\");\n    intent.addCategory(\"android.intent.category.DEFAULT\");\n    intent.setType(\"application/vnd.android.package-archive\");\n    intent.setDataAndType(Uri.fromFile(file),\n            \"application/vnd.android.package-archive\");\n    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n    context.startActivity(intent);\n}\n```\n判断当前设备是否为手机\n``` shell\npublic static boolean isPhone(Context context) {\n    TelephonyManager telephony = (TelephonyManager) context\n            .getSystemService(Context.TELEPHONY_SERVICE);\n    if (telephony.getPhoneType() == TelephonyManager.PHONE_TYPE_NONE) {\n        return false;\n    } else {\n        return true;\n    }\n}\n```\n获取当前设备宽高，单位px\n``` shell\n@SuppressWarnings(\"deprecation\")\npublic static int getDeviceWidth(Context context) {\n    WindowManager manager = (WindowManager) context\n            .getSystemService(Context.WINDOW_SERVICE);\n    return manager.getDefaultDisplay().getWidth();\n}\n\n@SuppressWarnings(\"deprecation\")\npublic static int getDeviceHeight(Context context) {\n    WindowManager manager = (WindowManager) context\n            .getSystemService(Context.WINDOW_SERVICE);\n    return manager.getDefaultDisplay().getHeight();\n}\n```\n获取当前设备的IMEI，需要与上面的isPhone()一起使用\n``` shell\n@TargetApi(Build.VERSION_CODES.CUPCAKE)\npublic static String getDeviceIMEI(Context context) {\n    String deviceId;\n    if (isPhone(context)) {\n        TelephonyManager telephony = (TelephonyManager) context\n                .getSystemService(Context.TELEPHONY_SERVICE);\n        deviceId = telephony.getDeviceId();\n    } else {\n        deviceId = Settings.Secure.getString(context.getContentResolver(),\n                Settings.Secure.ANDROID_ID);\n\n    }\n    return deviceId;\n}\n```\n获取当前设备的MAC地址\n``` shell\npublic static String getMacAddress(Context context) {\n    String macAddress;\n    WifiManager wifi = (WifiManager) context\n            .getSystemService(Context.WIFI_SERVICE);\n    WifiInfo info = wifi.getConnectionInfo();\n    macAddress = info.getMacAddress();\n    if (null == macAddress) {\n        return \"\";\n    }\n    macAddress = macAddress.replace(\":\", \"\");\n    return macAddress;\n}\n```\n获取当前程序的版本号\n``` shell\npublic static String getAppVersion(Context context) {\n    String version = \"0\";\n    try {\n        version = context.getPackageManager().getPackageInfo(\n                context.getPackageName(), 0).versionName;\n    } catch (PackageManager.NameNotFoundException e) {\n        e.printStackTrace();\n    }\n    return version;\n}\n```\n收集设备信息，用于信息统计分析\n``` shell\npublic static Properties collectDeviceInfo(Context context) {\n        Properties mDeviceCrashInfo = new Properties();\n        try {\n            PackageManager pm = context.getPackageManager();\n            PackageInfo pi = pm.getPackageInfo(context.getPackageName(),\n                    PackageManager.GET_ACTIVITIES);\n            if (pi != null) {\n                mDeviceCrashInfo.put(VERSION_NAME,\n                        pi.versionName == null ? \"not set\" : pi.versionName);\n                mDeviceCrashInfo.put(VERSION_CODE, pi.versionCode);\n            }\n        } catch (PackageManager.NameNotFoundException e) {\n            Log.e(TAG, \"Error while collect package info\", e);\n        }\n        Field[] fields = Build.class.getDeclaredFields();\n        for (Field field : fields) {\n            try {\n                field.setAccessible(true);\n                mDeviceCrashInfo.put(field.getName(), field.get(null));\n            } catch (Exception e) {\n                Log.e(TAG, \"Error while collect crash info\", e);\n            }\n        }\n\n        return mDeviceCrashInfo;\n    }\n\npublic static String collectDeviceInfoStr(Context context) {\n        Properties prop = collectDeviceInfo(context);\n        Set deviceInfos = prop.keySet();\n        StringBuilder deviceInfoStr = new StringBuilder(\"{\\n\");\n        for (Iterator iter = deviceInfos.iterator(); iter.hasNext();) {\n            Object item = iter.next();\n            deviceInfoStr.append(\"\\t\\t\\t\" + item + \":\" + prop.get(item)\n                    + \", \\n\");\n        }\n        deviceInfoStr.append(\"}\");\n        return deviceInfoStr.toString();\n    }\n```\n是否有SD卡\n``` shell\npublic static boolean haveSDCard() {\n        return android.os.Environment.getExternalStorageState().equals(\n                android.os.Environment.MEDIA_MOUNTED);\n    }\n```\n动态隐藏软键盘\n``` shell\n@TargetApi(Build.VERSION_CODES.CUPCAKE)\n    public static void hideSoftInput(Activity activity) {\n        View view = activity.getWindow().peekDecorView();\n        if (view != null) {\n            InputMethodManager inputmanger = (InputMethodManager) activity\n                    .getSystemService(Context.INPUT_METHOD_SERVICE);\n            inputmanger.hideSoftInputFromWindow(view.getWindowToken(), 0);\n        }\n    }\n\n    @TargetApi(Build.VERSION_CODES.CUPCAKE)\npublic static void hideSoftInput(Context context, EditText edit) {\n        edit.clearFocus();\n        InputMethodManager inputmanger = (InputMethodManager) context\n                .getSystemService(Context.INPUT_METHOD_SERVICE);\n        inputmanger.hideSoftInputFromWindow(edit.getWindowToken(), 0);\n    }\n```\n动态显示软键盘\n``` shell\n@TargetApi(Build.VERSION_CODES.CUPCAKE)\npublic static void showSoftInput(Context context, EditText edit) {\n        edit.setFocusable(true);\n        edit.setFocusableInTouchMode(true);\n        edit.requestFocus();\n        InputMethodManager inputManager = (InputMethodManager) context\n                .getSystemService(Context.INPUT_METHOD_SERVICE);\n        inputManager.showSoftInput(edit, 0);\n    }\n\n动态显示或者是隐藏软键盘\n\n\n@TargetApi(Build.VERSION_CODES.CUPCAKE)\npublic static void toggleSoftInput(Context context, EditText edit) {\n        edit.setFocusable(true);\n        edit.setFocusableInTouchMode(true);\n        edit.requestFocus();\n        InputMethodManager inputManager = (InputMethodManager) context\n                .getSystemService(Context.INPUT_METHOD_SERVICE);\n        inputManager.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);\n    }\n```\n主动回到Home，后台运行\n``` shell\npublic static void goHome(Context context) {\n        Intent mHomeIntent = new Intent(Intent.ACTION_MAIN);\n        mHomeIntent.addCategory(Intent.CATEGORY_HOME);\n        mHomeIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK\n                | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);\n        context.startActivity(mHomeIntent);\n    }\n```\n获取状态栏高度\n注意，要在onWindowFocusChanged中调用，在onCreate中获取高度为0\n``` shell\n@TargetApi(Build.VERSION_CODES.CUPCAKE)\npublic static int getStatusBarHeight(Activity activity) {\n    Rect frame = new Rect();\n    activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(frame);\n        return frame.top;\n    }\n```\n获取状态栏高度＋标题栏(ActionBar)高度\n(注意，如果没有ActionBar，那么获取的高度将和上面的是一样的，只有状态栏的高度)\n``` shell\npublic static int getTopBarHeight(Activity activity) {\n        return activity.getWindow().findViewById(Window.ID_ANDROID_CONTENT)\n                .getTop();\n    }\n```\n获取MCC+MNC代码 (SIM卡运营商国家代码和运营商网络代码)\n仅当用户已在网络注册时有效, CDMA 可能会无效（中国移动：46000 46002, 中国联通：46001,中国电信：46003）\n``` shell\npublic static String getNetworkOperator(Context context) {\n        TelephonyManager telephonyManager = (TelephonyManager) context\n                .getSystemService(Context.TELEPHONY_SERVICE);\n        return telephonyManager.getNetworkOperator();\n    }\n```\n返回移动网络运营商的名字\n(例：中国联通、中国移动、中国电信) 仅当用户已在网络注册时有效, CDMA 可能会无效)\n``` shell\npublic static String getNetworkOperatorName(Context context) {\n        TelephonyManager telephonyManager = (TelephonyManager) context\n                .getSystemService(Context.TELEPHONY_SERVICE);\n        return telephonyManager.getNetworkOperatorName();\n    }\n```\n返回移动终端类型\nPHONE_TYPE_NONE :0 手机制式未知\nPHONE_TYPE_GSM :1 手机制式为GSM，移动和联通\nPHONE_TYPE_CDMA :2 手机制式为CDMA，电信\nPHONE_TYPE_SIP:3\n``` shell\npublic static int getPhoneType(Context context) {\n        TelephonyManager telephonyManager = (TelephonyManager) context\n                .getSystemService(Context.TELEPHONY_SERVICE);\n        return telephonyManager.getPhoneType();\n    }\n```\n判断手机连接的网络类型(2G,3G,4G)\n联通的3G为UMTS或HSDPA，移动和联通的2G为GPRS或EGDE，电信的2G为CDMA，电信的3G为EVDO\n``` shell\npublic class Constants {\n    /**\n     * Unknown network class\n     */\n    public static final int NETWORK_CLASS_UNKNOWN = 0;\n\n    /**\n     * wifi net work\n     */\n    public static final int NETWORK_WIFI = 1;\n\n    /**\n     * \"2G\" networks\n     */\n    public static final int NETWORK_CLASS_2_G = 2;\n\n    /**\n     * \"3G\" networks\n     */\n    public static final int NETWORK_CLASS_3_G = 3;\n\n    /**\n     * \"4G\" networks\n     */\n    public static final int NETWORK_CLASS_4_G = 4;\n\n}\n\npublic static int getNetWorkClass(Context context) {\n        TelephonyManager telephonyManager = (TelephonyManager) context\n                .getSystemService(Context.TELEPHONY_SERVICE);\n\n        switch (telephonyManager.getNetworkType()) {\n        case TelephonyManager.NETWORK_TYPE_GPRS:\n        case TelephonyManager.NETWORK_TYPE_EDGE:\n        case TelephonyManager.NETWORK_TYPE_CDMA:\n        case TelephonyManager.NETWORK_TYPE_1xRTT:\n        case TelephonyManager.NETWORK_TYPE_IDEN:\n            return Constants.NETWORK_CLASS_2_G;\n\n        case TelephonyManager.NETWORK_TYPE_UMTS:\n        case TelephonyManager.NETWORK_TYPE_EVDO_0:\n        case TelephonyManager.NETWORK_TYPE_EVDO_A:\n        case TelephonyManager.NETWORK_TYPE_HSDPA:\n        case TelephonyManager.NETWORK_TYPE_HSUPA:\n        case TelephonyManager.NETWORK_TYPE_HSPA:\n        case TelephonyManager.NETWORK_TYPE_EVDO_B:\n        case TelephonyManager.NETWORK_TYPE_EHRPD:\n        case TelephonyManager.NETWORK_TYPE_HSPAP:\n            return Constants.NETWORK_CLASS_3_G;\n\n        case TelephonyManager.NETWORK_TYPE_LTE:\n            return Constants.NETWORK_CLASS_4_G;\n\n        default:\n            return Constants.NETWORK_CLASS_UNKNOWN;\n        }\n    }\n```\n判断当前手机的网络类型(WIFI还是2,3,4G)\n需要用到上面的方法\n``` shell\npublic static int getNetWorkStatus(Context context) {\n        int netWorkType = Constants.NETWORK_CLASS_UNKNOWN;\n\n        ConnectivityManager connectivityManager = (ConnectivityManager) context\n                .getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n\n        if (networkInfo != null && networkInfo.isConnected()) {\n            int type = networkInfo.getType();\n\n            if (type == ConnectivityManager.TYPE_WIFI) {\n                netWorkType = Constants.NETWORK_WIFI;\n            } else if (type == ConnectivityManager.TYPE_MOBILE) {\n                netWorkType = getNetWorkClass(context);\n            }\n        }\n\n        return netWorkType;\n    }\n```\npx-dp转换\n``` shell\npublic static int dip2px(Context context, float dpValue) {\n    final float scale = context.getResources().getDisplayMetrics().density;\n    return (int) (dpValue * scale + 0.5f);\n}\n\npublic static int px2dip(Context context, float pxValue) {\n    final float scale = context.getResources().getDisplayMetrics().density;\n    return (int) (pxValue / scale + 0.5f);\n}\n```\npx-sp转换\n``` shell\npublic static int px2sp(Context context, float pxValue) {\n        final float fontScale = context.getResources().getDisplayMetrics().scaledDensity;\n        return (int) (pxValue / fontScale + 0.5f);\n    }\n\npublic static int sp2px(Context context, float spValue) {\n        final float fontScale = context.getResources().getDisplayMetrics().scaledDensity;\n        return (int) (spValue * fontScale + 0.5f);\n    }\n```\n\n\n","slug":"android/小工具","published":1,"updated":"2017-03-13T14:28:24.616Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taacs000qr8syq20uks94","content":"<p>拨打电话<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void call(Context context, String phoneNumber) &#123;</div><div class=\"line\">        context.startActivity(new Intent(Intent.ACTION_CALL, Uri.parse(&quot;tel:&quot; + phoneNumber)));</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>跳转至拨号界面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void callDial(Context context, String phoneNumber) &#123;</div><div class=\"line\">        context.startActivity(new Intent(Intent.ACTION_DIAL, Uri.parse(&quot;tel:&quot; + phoneNumber)));</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>发送短信<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void sendSms(Context context, String phoneNumber,</div><div class=\"line\">            String content) &#123;</div><div class=\"line\">        Uri uri = Uri.parse(&quot;smsto:&quot;</div><div class=\"line\">                + (TextUtils.isEmpty(phoneNumber) ? &quot;&quot; : phoneNumber));</div><div class=\"line\">        Intent intent = new Intent(Intent.ACTION_SENDTO, uri);</div><div class=\"line\">        intent.putExtra(&quot;sms_body&quot;, TextUtils.isEmpty(content) ? &quot;&quot; : content);</div><div class=\"line\">        context.startActivity(intent);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>唤醒屏幕并解锁<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void wakeUpAndUnlock(Context context)&#123;</div><div class=\"line\">        KeyguardManager km= (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);</div><div class=\"line\">        KeyguardManager.KeyguardLock kl = km.newKeyguardLock(&quot;unLock&quot;);</div><div class=\"line\">        //解锁</div><div class=\"line\">        kl.disableKeyguard();</div><div class=\"line\">        //获取电源管理器对象</div><div class=\"line\">        PowerManager pm=(PowerManager) context.getSystemService(Context.POWER_SERVICE);</div><div class=\"line\">        //获取PowerManager.WakeLock对象,后面的参数|表示同时传入两个值,最后的是LogCat里用的Tag</div><div class=\"line\">        PowerManager.WakeLock wl = pm.newWakeLock(PowerManager.ACQUIRE_CAUSES_WAKEUP | PowerManager.SCREEN_DIM_WAKE_LOCK,&quot;bright&quot;);</div><div class=\"line\">        //点亮屏幕</div><div class=\"line\">        wl.acquire();</div><div class=\"line\">        //释放</div><div class=\"line\">        wl.release();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>需要添加权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;uses-permission android:name=&quot;android.permission.WAKE_LOCK&quot; /&gt;</div><div class=\"line\">&lt;uses-permission android:name=&quot;android.permission.DISABLE_KEYGUARD&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>判断当前App处于前台还是后台状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean isApplicationBackground(final Context context) &#123;</div><div class=\"line\">        ActivityManager am = (ActivityManager) context</div><div class=\"line\">                .getSystemService(Context.ACTIVITY_SERVICE);</div><div class=\"line\">        @SuppressWarnings(&quot;deprecation&quot;)</div><div class=\"line\">        List&lt;ActivityManager.RunningTaskInfo&gt; tasks = am.getRunningTasks(1);</div><div class=\"line\">        if (!tasks.isEmpty()) &#123;</div><div class=\"line\">            ComponentName topActivity = tasks.get(0).topActivity;</div><div class=\"line\">            if (!topActivity.getPackageName().equals(context.getPackageName())) &#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return false;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>需要添加权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;uses-permission</div><div class=\"line\">     android:name=&quot;android.permission.GET_TASKS&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>判断当前手机是否处于锁屏(睡眠)状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean isSleeping(Context context) &#123;</div><div class=\"line\">        KeyguardManager kgMgr = (KeyguardManager) context</div><div class=\"line\">                .getSystemService(Context.KEYGUARD_SERVICE);</div><div class=\"line\">        boolean isSleeping = kgMgr.inKeyguardRestrictedInputMode();</div><div class=\"line\">        return isSleeping;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>判断当前是否有网络连接<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean isOnline(Context context) &#123;</div><div class=\"line\">        ConnectivityManager manager = (ConnectivityManager) context</div><div class=\"line\">                .getSystemService(Activity.CONNECTIVITY_SERVICE);</div><div class=\"line\">        NetworkInfo info = manager.getActiveNetworkInfo();</div><div class=\"line\">        if (info != null &amp;&amp; info.isConnected()) &#123;</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return false;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>判断当前是否是WIFI连接状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean isWifiConnected(Context context) &#123;</div><div class=\"line\">    ConnectivityManager connectivityManager = (ConnectivityManager) context</div><div class=\"line\">            .getSystemService(Context.CONNECTIVITY_SERVICE);</div><div class=\"line\">    NetworkInfo wifiNetworkInfo = connectivityManager</div><div class=\"line\">            .getNetworkInfo(ConnectivityManager.TYPE_WIFI);</div><div class=\"line\">    if (wifiNetworkInfo.isConnected()) &#123;</div><div class=\"line\">        return true;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return false;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>安装APK<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void installApk(Context context, File file) &#123;</div><div class=\"line\">    Intent intent = new Intent();</div><div class=\"line\">    intent.setAction(&quot;android.intent.action.VIEW&quot;);</div><div class=\"line\">    intent.addCategory(&quot;android.intent.category.DEFAULT&quot;);</div><div class=\"line\">    intent.setType(&quot;application/vnd.android.package-archive&quot;);</div><div class=\"line\">    intent.setDataAndType(Uri.fromFile(file),</div><div class=\"line\">            &quot;application/vnd.android.package-archive&quot;);</div><div class=\"line\">    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">    context.startActivity(intent);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>判断当前设备是否为手机<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean isPhone(Context context) &#123;</div><div class=\"line\">    TelephonyManager telephony = (TelephonyManager) context</div><div class=\"line\">            .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\">    if (telephony.getPhoneType() == TelephonyManager.PHONE_TYPE_NONE) &#123;</div><div class=\"line\">        return false;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        return true;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>获取当前设备宽高，单位px<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">@SuppressWarnings(&quot;deprecation&quot;)</div><div class=\"line\">public static int getDeviceWidth(Context context) &#123;</div><div class=\"line\">    WindowManager manager = (WindowManager) context</div><div class=\"line\">            .getSystemService(Context.WINDOW_SERVICE);</div><div class=\"line\">    return manager.getDefaultDisplay().getWidth();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@SuppressWarnings(&quot;deprecation&quot;)</div><div class=\"line\">public static int getDeviceHeight(Context context) &#123;</div><div class=\"line\">    WindowManager manager = (WindowManager) context</div><div class=\"line\">            .getSystemService(Context.WINDOW_SERVICE);</div><div class=\"line\">    return manager.getDefaultDisplay().getHeight();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>获取当前设备的IMEI，需要与上面的isPhone()一起使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">@TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">public static String getDeviceIMEI(Context context) &#123;</div><div class=\"line\">    String deviceId;</div><div class=\"line\">    if (isPhone(context)) &#123;</div><div class=\"line\">        TelephonyManager telephony = (TelephonyManager) context</div><div class=\"line\">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\">        deviceId = telephony.getDeviceId();</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        deviceId = Settings.Secure.getString(context.getContentResolver(),</div><div class=\"line\">                Settings.Secure.ANDROID_ID);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    return deviceId;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>获取当前设备的MAC地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static String getMacAddress(Context context) &#123;</div><div class=\"line\">    String macAddress;</div><div class=\"line\">    WifiManager wifi = (WifiManager) context</div><div class=\"line\">            .getSystemService(Context.WIFI_SERVICE);</div><div class=\"line\">    WifiInfo info = wifi.getConnectionInfo();</div><div class=\"line\">    macAddress = info.getMacAddress();</div><div class=\"line\">    if (null == macAddress) &#123;</div><div class=\"line\">        return &quot;&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    macAddress = macAddress.replace(&quot;:&quot;, &quot;&quot;);</div><div class=\"line\">    return macAddress;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>获取当前程序的版本号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static String getAppVersion(Context context) &#123;</div><div class=\"line\">    String version = &quot;0&quot;;</div><div class=\"line\">    try &#123;</div><div class=\"line\">        version = context.getPackageManager().getPackageInfo(</div><div class=\"line\">                context.getPackageName(), 0).versionName;</div><div class=\"line\">    &#125; catch (PackageManager.NameNotFoundException e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">    return version;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>收集设备信息，用于信息统计分析<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static Properties collectDeviceInfo(Context context) &#123;</div><div class=\"line\">        Properties mDeviceCrashInfo = new Properties();</div><div class=\"line\">        try &#123;</div><div class=\"line\">            PackageManager pm = context.getPackageManager();</div><div class=\"line\">            PackageInfo pi = pm.getPackageInfo(context.getPackageName(),</div><div class=\"line\">                    PackageManager.GET_ACTIVITIES);</div><div class=\"line\">            if (pi != null) &#123;</div><div class=\"line\">                mDeviceCrashInfo.put(VERSION_NAME,</div><div class=\"line\">                        pi.versionName == null ? &quot;not set&quot; : pi.versionName);</div><div class=\"line\">                mDeviceCrashInfo.put(VERSION_CODE, pi.versionCode);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; catch (PackageManager.NameNotFoundException e) &#123;</div><div class=\"line\">            Log.e(TAG, &quot;Error while collect package info&quot;, e);</div><div class=\"line\">        &#125;</div><div class=\"line\">        Field[] fields = Build.class.getDeclaredFields();</div><div class=\"line\">        for (Field field : fields) &#123;</div><div class=\"line\">            try &#123;</div><div class=\"line\">                field.setAccessible(true);</div><div class=\"line\">                mDeviceCrashInfo.put(field.getName(), field.get(null));</div><div class=\"line\">            &#125; catch (Exception e) &#123;</div><div class=\"line\">                Log.e(TAG, &quot;Error while collect crash info&quot;, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        return mDeviceCrashInfo;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">public static String collectDeviceInfoStr(Context context) &#123;</div><div class=\"line\">        Properties prop = collectDeviceInfo(context);</div><div class=\"line\">        Set deviceInfos = prop.keySet();</div><div class=\"line\">        StringBuilder deviceInfoStr = new StringBuilder(&quot;&#123;\\n&quot;);</div><div class=\"line\">        for (Iterator iter = deviceInfos.iterator(); iter.hasNext();) &#123;</div><div class=\"line\">            Object item = iter.next();</div><div class=\"line\">            deviceInfoStr.append(&quot;\\t\\t\\t&quot; + item + &quot;:&quot; + prop.get(item)</div><div class=\"line\">                    + &quot;, \\n&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        deviceInfoStr.append(&quot;&#125;&quot;);</div><div class=\"line\">        return deviceInfoStr.toString();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>是否有SD卡<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean haveSDCard() &#123;</div><div class=\"line\">        return android.os.Environment.getExternalStorageState().equals(</div><div class=\"line\">                android.os.Environment.MEDIA_MOUNTED);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>动态隐藏软键盘<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">@TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">    public static void hideSoftInput(Activity activity) &#123;</div><div class=\"line\">        View view = activity.getWindow().peekDecorView();</div><div class=\"line\">        if (view != null) &#123;</div><div class=\"line\">            InputMethodManager inputmanger = (InputMethodManager) activity</div><div class=\"line\">                    .getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class=\"line\">            inputmanger.hideSoftInputFromWindow(view.getWindowToken(), 0);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">public static void hideSoftInput(Context context, EditText edit) &#123;</div><div class=\"line\">        edit.clearFocus();</div><div class=\"line\">        InputMethodManager inputmanger = (InputMethodManager) context</div><div class=\"line\">                .getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class=\"line\">        inputmanger.hideSoftInputFromWindow(edit.getWindowToken(), 0);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>动态显示软键盘<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">@TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">public static void showSoftInput(Context context, EditText edit) &#123;</div><div class=\"line\">        edit.setFocusable(true);</div><div class=\"line\">        edit.setFocusableInTouchMode(true);</div><div class=\"line\">        edit.requestFocus();</div><div class=\"line\">        InputMethodManager inputManager = (InputMethodManager) context</div><div class=\"line\">                .getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class=\"line\">        inputManager.showSoftInput(edit, 0);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">动态显示或者是隐藏软键盘</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">@TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">public static void toggleSoftInput(Context context, EditText edit) &#123;</div><div class=\"line\">        edit.setFocusable(true);</div><div class=\"line\">        edit.setFocusableInTouchMode(true);</div><div class=\"line\">        edit.requestFocus();</div><div class=\"line\">        InputMethodManager inputManager = (InputMethodManager) context</div><div class=\"line\">                .getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class=\"line\">        inputManager.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>主动回到Home，后台运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void goHome(Context context) &#123;</div><div class=\"line\">        Intent mHomeIntent = new Intent(Intent.ACTION_MAIN);</div><div class=\"line\">        mHomeIntent.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">        mHomeIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK</div><div class=\"line\">                | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);</div><div class=\"line\">        context.startActivity(mHomeIntent);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>获取状态栏高度<br>注意，要在onWindowFocusChanged中调用，在onCreate中获取高度为0<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">public static int getStatusBarHeight(Activity activity) &#123;</div><div class=\"line\">    Rect frame = new Rect();</div><div class=\"line\">    activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(frame);</div><div class=\"line\">        return frame.top;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>获取状态栏高度＋标题栏(ActionBar)高度<br>(注意，如果没有ActionBar，那么获取的高度将和上面的是一样的，只有状态栏的高度)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static int getTopBarHeight(Activity activity) &#123;</div><div class=\"line\">        return activity.getWindow().findViewById(Window.ID_ANDROID_CONTENT)</div><div class=\"line\">                .getTop();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>获取MCC+MNC代码 (SIM卡运营商国家代码和运营商网络代码)<br>仅当用户已在网络注册时有效, CDMA 可能会无效（中国移动：46000 46002, 中国联通：46001,中国电信：46003）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static String getNetworkOperator(Context context) &#123;</div><div class=\"line\">        TelephonyManager telephonyManager = (TelephonyManager) context</div><div class=\"line\">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\">        return telephonyManager.getNetworkOperator();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>返回移动网络运营商的名字<br>(例：中国联通、中国移动、中国电信) 仅当用户已在网络注册时有效, CDMA 可能会无效)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static String getNetworkOperatorName(Context context) &#123;</div><div class=\"line\">        TelephonyManager telephonyManager = (TelephonyManager) context</div><div class=\"line\">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\">        return telephonyManager.getNetworkOperatorName();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>返回移动终端类型<br>PHONE_TYPE_NONE :0 手机制式未知<br>PHONE_TYPE_GSM :1 手机制式为GSM，移动和联通<br>PHONE_TYPE_CDMA :2 手机制式为CDMA，电信<br>PHONE_TYPE_SIP:3<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static int getPhoneType(Context context) &#123;</div><div class=\"line\">        TelephonyManager telephonyManager = (TelephonyManager) context</div><div class=\"line\">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\">        return telephonyManager.getPhoneType();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>判断手机连接的网络类型(2G,3G,4G)<br>联通的3G为UMTS或HSDPA，移动和联通的2G为GPRS或EGDE，电信的2G为CDMA，电信的3G为EVDO<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class Constants &#123;</div><div class=\"line\">    /**</div><div class=\"line\">     * Unknown network class</div><div class=\"line\">     */</div><div class=\"line\">    public static final int NETWORK_CLASS_UNKNOWN = 0;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * wifi net work</div><div class=\"line\">     */</div><div class=\"line\">    public static final int NETWORK_WIFI = 1;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * &quot;2G&quot; networks</div><div class=\"line\">     */</div><div class=\"line\">    public static final int NETWORK_CLASS_2_G = 2;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * &quot;3G&quot; networks</div><div class=\"line\">     */</div><div class=\"line\">    public static final int NETWORK_CLASS_3_G = 3;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * &quot;4G&quot; networks</div><div class=\"line\">     */</div><div class=\"line\">    public static final int NETWORK_CLASS_4_G = 4;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public static int getNetWorkClass(Context context) &#123;</div><div class=\"line\">        TelephonyManager telephonyManager = (TelephonyManager) context</div><div class=\"line\">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\"></div><div class=\"line\">        switch (telephonyManager.getNetworkType()) &#123;</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_GPRS:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_EDGE:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_CDMA:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_1xRTT:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_IDEN:</div><div class=\"line\">            return Constants.NETWORK_CLASS_2_G;</div><div class=\"line\"></div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_UMTS:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_EVDO_0:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_EVDO_A:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_HSDPA:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_HSUPA:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_HSPA:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_EVDO_B:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_EHRPD:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_HSPAP:</div><div class=\"line\">            return Constants.NETWORK_CLASS_3_G;</div><div class=\"line\"></div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_LTE:</div><div class=\"line\">            return Constants.NETWORK_CLASS_4_G;</div><div class=\"line\"></div><div class=\"line\">        default:</div><div class=\"line\">            return Constants.NETWORK_CLASS_UNKNOWN;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>判断当前手机的网络类型(WIFI还是2,3,4G)<br>需要用到上面的方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static int getNetWorkStatus(Context context) &#123;</div><div class=\"line\">        int netWorkType = Constants.NETWORK_CLASS_UNKNOWN;</div><div class=\"line\"></div><div class=\"line\">        ConnectivityManager connectivityManager = (ConnectivityManager) context</div><div class=\"line\">                .getSystemService(Context.CONNECTIVITY_SERVICE);</div><div class=\"line\">        NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();</div><div class=\"line\"></div><div class=\"line\">        if (networkInfo != null &amp;&amp; networkInfo.isConnected()) &#123;</div><div class=\"line\">            int type = networkInfo.getType();</div><div class=\"line\"></div><div class=\"line\">            if (type == ConnectivityManager.TYPE_WIFI) &#123;</div><div class=\"line\">                netWorkType = Constants.NETWORK_WIFI;</div><div class=\"line\">            &#125; else if (type == ConnectivityManager.TYPE_MOBILE) &#123;</div><div class=\"line\">                netWorkType = getNetWorkClass(context);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        return netWorkType;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>px-dp转换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static int dip2px(Context context, float dpValue) &#123;</div><div class=\"line\">    final float scale = context.getResources().getDisplayMetrics().density;</div><div class=\"line\">    return (int) (dpValue * scale + 0.5f);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public static int px2dip(Context context, float pxValue) &#123;</div><div class=\"line\">    final float scale = context.getResources().getDisplayMetrics().density;</div><div class=\"line\">    return (int) (pxValue / scale + 0.5f);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>px-sp转换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static int px2sp(Context context, float pxValue) &#123;</div><div class=\"line\">        final float fontScale = context.getResources().getDisplayMetrics().scaledDensity;</div><div class=\"line\">        return (int) (pxValue / fontScale + 0.5f);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">public static int sp2px(Context context, float spValue) &#123;</div><div class=\"line\">        final float fontScale = context.getResources().getDisplayMetrics().scaledDensity;</div><div class=\"line\">        return (int) (spValue * fontScale + 0.5f);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>拨打电话<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void call(Context context, String phoneNumber) &#123;</div><div class=\"line\">        context.startActivity(new Intent(Intent.ACTION_CALL, Uri.parse(&quot;tel:&quot; + phoneNumber)));</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>","more":"<p>跳转至拨号界面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void callDial(Context context, String phoneNumber) &#123;</div><div class=\"line\">        context.startActivity(new Intent(Intent.ACTION_DIAL, Uri.parse(&quot;tel:&quot; + phoneNumber)));</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>发送短信<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void sendSms(Context context, String phoneNumber,</div><div class=\"line\">            String content) &#123;</div><div class=\"line\">        Uri uri = Uri.parse(&quot;smsto:&quot;</div><div class=\"line\">                + (TextUtils.isEmpty(phoneNumber) ? &quot;&quot; : phoneNumber));</div><div class=\"line\">        Intent intent = new Intent(Intent.ACTION_SENDTO, uri);</div><div class=\"line\">        intent.putExtra(&quot;sms_body&quot;, TextUtils.isEmpty(content) ? &quot;&quot; : content);</div><div class=\"line\">        context.startActivity(intent);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>唤醒屏幕并解锁<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void wakeUpAndUnlock(Context context)&#123;</div><div class=\"line\">        KeyguardManager km= (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);</div><div class=\"line\">        KeyguardManager.KeyguardLock kl = km.newKeyguardLock(&quot;unLock&quot;);</div><div class=\"line\">        //解锁</div><div class=\"line\">        kl.disableKeyguard();</div><div class=\"line\">        //获取电源管理器对象</div><div class=\"line\">        PowerManager pm=(PowerManager) context.getSystemService(Context.POWER_SERVICE);</div><div class=\"line\">        //获取PowerManager.WakeLock对象,后面的参数|表示同时传入两个值,最后的是LogCat里用的Tag</div><div class=\"line\">        PowerManager.WakeLock wl = pm.newWakeLock(PowerManager.ACQUIRE_CAUSES_WAKEUP | PowerManager.SCREEN_DIM_WAKE_LOCK,&quot;bright&quot;);</div><div class=\"line\">        //点亮屏幕</div><div class=\"line\">        wl.acquire();</div><div class=\"line\">        //释放</div><div class=\"line\">        wl.release();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>需要添加权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;uses-permission android:name=&quot;android.permission.WAKE_LOCK&quot; /&gt;</div><div class=\"line\">&lt;uses-permission android:name=&quot;android.permission.DISABLE_KEYGUARD&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>判断当前App处于前台还是后台状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean isApplicationBackground(final Context context) &#123;</div><div class=\"line\">        ActivityManager am = (ActivityManager) context</div><div class=\"line\">                .getSystemService(Context.ACTIVITY_SERVICE);</div><div class=\"line\">        @SuppressWarnings(&quot;deprecation&quot;)</div><div class=\"line\">        List&lt;ActivityManager.RunningTaskInfo&gt; tasks = am.getRunningTasks(1);</div><div class=\"line\">        if (!tasks.isEmpty()) &#123;</div><div class=\"line\">            ComponentName topActivity = tasks.get(0).topActivity;</div><div class=\"line\">            if (!topActivity.getPackageName().equals(context.getPackageName())) &#123;</div><div class=\"line\">                return true;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return false;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>需要添加权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;uses-permission</div><div class=\"line\">     android:name=&quot;android.permission.GET_TASKS&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>判断当前手机是否处于锁屏(睡眠)状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean isSleeping(Context context) &#123;</div><div class=\"line\">        KeyguardManager kgMgr = (KeyguardManager) context</div><div class=\"line\">                .getSystemService(Context.KEYGUARD_SERVICE);</div><div class=\"line\">        boolean isSleeping = kgMgr.inKeyguardRestrictedInputMode();</div><div class=\"line\">        return isSleeping;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>判断当前是否有网络连接<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean isOnline(Context context) &#123;</div><div class=\"line\">        ConnectivityManager manager = (ConnectivityManager) context</div><div class=\"line\">                .getSystemService(Activity.CONNECTIVITY_SERVICE);</div><div class=\"line\">        NetworkInfo info = manager.getActiveNetworkInfo();</div><div class=\"line\">        if (info != null &amp;&amp; info.isConnected()) &#123;</div><div class=\"line\">            return true;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return false;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>判断当前是否是WIFI连接状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean isWifiConnected(Context context) &#123;</div><div class=\"line\">    ConnectivityManager connectivityManager = (ConnectivityManager) context</div><div class=\"line\">            .getSystemService(Context.CONNECTIVITY_SERVICE);</div><div class=\"line\">    NetworkInfo wifiNetworkInfo = connectivityManager</div><div class=\"line\">            .getNetworkInfo(ConnectivityManager.TYPE_WIFI);</div><div class=\"line\">    if (wifiNetworkInfo.isConnected()) &#123;</div><div class=\"line\">        return true;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return false;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>安装APK<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void installApk(Context context, File file) &#123;</div><div class=\"line\">    Intent intent = new Intent();</div><div class=\"line\">    intent.setAction(&quot;android.intent.action.VIEW&quot;);</div><div class=\"line\">    intent.addCategory(&quot;android.intent.category.DEFAULT&quot;);</div><div class=\"line\">    intent.setType(&quot;application/vnd.android.package-archive&quot;);</div><div class=\"line\">    intent.setDataAndType(Uri.fromFile(file),</div><div class=\"line\">            &quot;application/vnd.android.package-archive&quot;);</div><div class=\"line\">    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</div><div class=\"line\">    context.startActivity(intent);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>判断当前设备是否为手机<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean isPhone(Context context) &#123;</div><div class=\"line\">    TelephonyManager telephony = (TelephonyManager) context</div><div class=\"line\">            .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\">    if (telephony.getPhoneType() == TelephonyManager.PHONE_TYPE_NONE) &#123;</div><div class=\"line\">        return false;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        return true;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>获取当前设备宽高，单位px<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">@SuppressWarnings(&quot;deprecation&quot;)</div><div class=\"line\">public static int getDeviceWidth(Context context) &#123;</div><div class=\"line\">    WindowManager manager = (WindowManager) context</div><div class=\"line\">            .getSystemService(Context.WINDOW_SERVICE);</div><div class=\"line\">    return manager.getDefaultDisplay().getWidth();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@SuppressWarnings(&quot;deprecation&quot;)</div><div class=\"line\">public static int getDeviceHeight(Context context) &#123;</div><div class=\"line\">    WindowManager manager = (WindowManager) context</div><div class=\"line\">            .getSystemService(Context.WINDOW_SERVICE);</div><div class=\"line\">    return manager.getDefaultDisplay().getHeight();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>获取当前设备的IMEI，需要与上面的isPhone()一起使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">@TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">public static String getDeviceIMEI(Context context) &#123;</div><div class=\"line\">    String deviceId;</div><div class=\"line\">    if (isPhone(context)) &#123;</div><div class=\"line\">        TelephonyManager telephony = (TelephonyManager) context</div><div class=\"line\">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\">        deviceId = telephony.getDeviceId();</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        deviceId = Settings.Secure.getString(context.getContentResolver(),</div><div class=\"line\">                Settings.Secure.ANDROID_ID);</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    return deviceId;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>获取当前设备的MAC地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static String getMacAddress(Context context) &#123;</div><div class=\"line\">    String macAddress;</div><div class=\"line\">    WifiManager wifi = (WifiManager) context</div><div class=\"line\">            .getSystemService(Context.WIFI_SERVICE);</div><div class=\"line\">    WifiInfo info = wifi.getConnectionInfo();</div><div class=\"line\">    macAddress = info.getMacAddress();</div><div class=\"line\">    if (null == macAddress) &#123;</div><div class=\"line\">        return &quot;&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    macAddress = macAddress.replace(&quot;:&quot;, &quot;&quot;);</div><div class=\"line\">    return macAddress;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>获取当前程序的版本号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static String getAppVersion(Context context) &#123;</div><div class=\"line\">    String version = &quot;0&quot;;</div><div class=\"line\">    try &#123;</div><div class=\"line\">        version = context.getPackageManager().getPackageInfo(</div><div class=\"line\">                context.getPackageName(), 0).versionName;</div><div class=\"line\">    &#125; catch (PackageManager.NameNotFoundException e) &#123;</div><div class=\"line\">        e.printStackTrace();</div><div class=\"line\">    &#125;</div><div class=\"line\">    return version;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>收集设备信息，用于信息统计分析<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static Properties collectDeviceInfo(Context context) &#123;</div><div class=\"line\">        Properties mDeviceCrashInfo = new Properties();</div><div class=\"line\">        try &#123;</div><div class=\"line\">            PackageManager pm = context.getPackageManager();</div><div class=\"line\">            PackageInfo pi = pm.getPackageInfo(context.getPackageName(),</div><div class=\"line\">                    PackageManager.GET_ACTIVITIES);</div><div class=\"line\">            if (pi != null) &#123;</div><div class=\"line\">                mDeviceCrashInfo.put(VERSION_NAME,</div><div class=\"line\">                        pi.versionName == null ? &quot;not set&quot; : pi.versionName);</div><div class=\"line\">                mDeviceCrashInfo.put(VERSION_CODE, pi.versionCode);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; catch (PackageManager.NameNotFoundException e) &#123;</div><div class=\"line\">            Log.e(TAG, &quot;Error while collect package info&quot;, e);</div><div class=\"line\">        &#125;</div><div class=\"line\">        Field[] fields = Build.class.getDeclaredFields();</div><div class=\"line\">        for (Field field : fields) &#123;</div><div class=\"line\">            try &#123;</div><div class=\"line\">                field.setAccessible(true);</div><div class=\"line\">                mDeviceCrashInfo.put(field.getName(), field.get(null));</div><div class=\"line\">            &#125; catch (Exception e) &#123;</div><div class=\"line\">                Log.e(TAG, &quot;Error while collect crash info&quot;, e);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        return mDeviceCrashInfo;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">public static String collectDeviceInfoStr(Context context) &#123;</div><div class=\"line\">        Properties prop = collectDeviceInfo(context);</div><div class=\"line\">        Set deviceInfos = prop.keySet();</div><div class=\"line\">        StringBuilder deviceInfoStr = new StringBuilder(&quot;&#123;\\n&quot;);</div><div class=\"line\">        for (Iterator iter = deviceInfos.iterator(); iter.hasNext();) &#123;</div><div class=\"line\">            Object item = iter.next();</div><div class=\"line\">            deviceInfoStr.append(&quot;\\t\\t\\t&quot; + item + &quot;:&quot; + prop.get(item)</div><div class=\"line\">                    + &quot;, \\n&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        deviceInfoStr.append(&quot;&#125;&quot;);</div><div class=\"line\">        return deviceInfoStr.toString();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>是否有SD卡<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static boolean haveSDCard() &#123;</div><div class=\"line\">        return android.os.Environment.getExternalStorageState().equals(</div><div class=\"line\">                android.os.Environment.MEDIA_MOUNTED);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>动态隐藏软键盘<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">@TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">    public static void hideSoftInput(Activity activity) &#123;</div><div class=\"line\">        View view = activity.getWindow().peekDecorView();</div><div class=\"line\">        if (view != null) &#123;</div><div class=\"line\">            InputMethodManager inputmanger = (InputMethodManager) activity</div><div class=\"line\">                    .getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class=\"line\">            inputmanger.hideSoftInputFromWindow(view.getWindowToken(), 0);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    @TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">public static void hideSoftInput(Context context, EditText edit) &#123;</div><div class=\"line\">        edit.clearFocus();</div><div class=\"line\">        InputMethodManager inputmanger = (InputMethodManager) context</div><div class=\"line\">                .getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class=\"line\">        inputmanger.hideSoftInputFromWindow(edit.getWindowToken(), 0);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>动态显示软键盘<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">@TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">public static void showSoftInput(Context context, EditText edit) &#123;</div><div class=\"line\">        edit.setFocusable(true);</div><div class=\"line\">        edit.setFocusableInTouchMode(true);</div><div class=\"line\">        edit.requestFocus();</div><div class=\"line\">        InputMethodManager inputManager = (InputMethodManager) context</div><div class=\"line\">                .getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class=\"line\">        inputManager.showSoftInput(edit, 0);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">动态显示或者是隐藏软键盘</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">@TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">public static void toggleSoftInput(Context context, EditText edit) &#123;</div><div class=\"line\">        edit.setFocusable(true);</div><div class=\"line\">        edit.setFocusableInTouchMode(true);</div><div class=\"line\">        edit.requestFocus();</div><div class=\"line\">        InputMethodManager inputManager = (InputMethodManager) context</div><div class=\"line\">                .getSystemService(Context.INPUT_METHOD_SERVICE);</div><div class=\"line\">        inputManager.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>主动回到Home，后台运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static void goHome(Context context) &#123;</div><div class=\"line\">        Intent mHomeIntent = new Intent(Intent.ACTION_MAIN);</div><div class=\"line\">        mHomeIntent.addCategory(Intent.CATEGORY_HOME);</div><div class=\"line\">        mHomeIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK</div><div class=\"line\">                | Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED);</div><div class=\"line\">        context.startActivity(mHomeIntent);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>获取状态栏高度<br>注意，要在onWindowFocusChanged中调用，在onCreate中获取高度为0<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@TargetApi(Build.VERSION_CODES.CUPCAKE)</div><div class=\"line\">public static int getStatusBarHeight(Activity activity) &#123;</div><div class=\"line\">    Rect frame = new Rect();</div><div class=\"line\">    activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(frame);</div><div class=\"line\">        return frame.top;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>获取状态栏高度＋标题栏(ActionBar)高度<br>(注意，如果没有ActionBar，那么获取的高度将和上面的是一样的，只有状态栏的高度)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static int getTopBarHeight(Activity activity) &#123;</div><div class=\"line\">        return activity.getWindow().findViewById(Window.ID_ANDROID_CONTENT)</div><div class=\"line\">                .getTop();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>获取MCC+MNC代码 (SIM卡运营商国家代码和运营商网络代码)<br>仅当用户已在网络注册时有效, CDMA 可能会无效（中国移动：46000 46002, 中国联通：46001,中国电信：46003）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static String getNetworkOperator(Context context) &#123;</div><div class=\"line\">        TelephonyManager telephonyManager = (TelephonyManager) context</div><div class=\"line\">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\">        return telephonyManager.getNetworkOperator();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>返回移动网络运营商的名字<br>(例：中国联通、中国移动、中国电信) 仅当用户已在网络注册时有效, CDMA 可能会无效)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static String getNetworkOperatorName(Context context) &#123;</div><div class=\"line\">        TelephonyManager telephonyManager = (TelephonyManager) context</div><div class=\"line\">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\">        return telephonyManager.getNetworkOperatorName();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>返回移动终端类型<br>PHONE_TYPE_NONE :0 手机制式未知<br>PHONE_TYPE_GSM :1 手机制式为GSM，移动和联通<br>PHONE_TYPE_CDMA :2 手机制式为CDMA，电信<br>PHONE_TYPE_SIP:3<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static int getPhoneType(Context context) &#123;</div><div class=\"line\">        TelephonyManager telephonyManager = (TelephonyManager) context</div><div class=\"line\">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\">        return telephonyManager.getPhoneType();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>判断手机连接的网络类型(2G,3G,4G)<br>联通的3G为UMTS或HSDPA，移动和联通的2G为GPRS或EGDE，电信的2G为CDMA，电信的3G为EVDO<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class Constants &#123;</div><div class=\"line\">    /**</div><div class=\"line\">     * Unknown network class</div><div class=\"line\">     */</div><div class=\"line\">    public static final int NETWORK_CLASS_UNKNOWN = 0;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * wifi net work</div><div class=\"line\">     */</div><div class=\"line\">    public static final int NETWORK_WIFI = 1;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * &quot;2G&quot; networks</div><div class=\"line\">     */</div><div class=\"line\">    public static final int NETWORK_CLASS_2_G = 2;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * &quot;3G&quot; networks</div><div class=\"line\">     */</div><div class=\"line\">    public static final int NETWORK_CLASS_3_G = 3;</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * &quot;4G&quot; networks</div><div class=\"line\">     */</div><div class=\"line\">    public static final int NETWORK_CLASS_4_G = 4;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public static int getNetWorkClass(Context context) &#123;</div><div class=\"line\">        TelephonyManager telephonyManager = (TelephonyManager) context</div><div class=\"line\">                .getSystemService(Context.TELEPHONY_SERVICE);</div><div class=\"line\"></div><div class=\"line\">        switch (telephonyManager.getNetworkType()) &#123;</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_GPRS:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_EDGE:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_CDMA:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_1xRTT:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_IDEN:</div><div class=\"line\">            return Constants.NETWORK_CLASS_2_G;</div><div class=\"line\"></div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_UMTS:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_EVDO_0:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_EVDO_A:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_HSDPA:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_HSUPA:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_HSPA:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_EVDO_B:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_EHRPD:</div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_HSPAP:</div><div class=\"line\">            return Constants.NETWORK_CLASS_3_G;</div><div class=\"line\"></div><div class=\"line\">        case TelephonyManager.NETWORK_TYPE_LTE:</div><div class=\"line\">            return Constants.NETWORK_CLASS_4_G;</div><div class=\"line\"></div><div class=\"line\">        default:</div><div class=\"line\">            return Constants.NETWORK_CLASS_UNKNOWN;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>判断当前手机的网络类型(WIFI还是2,3,4G)<br>需要用到上面的方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static int getNetWorkStatus(Context context) &#123;</div><div class=\"line\">        int netWorkType = Constants.NETWORK_CLASS_UNKNOWN;</div><div class=\"line\"></div><div class=\"line\">        ConnectivityManager connectivityManager = (ConnectivityManager) context</div><div class=\"line\">                .getSystemService(Context.CONNECTIVITY_SERVICE);</div><div class=\"line\">        NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();</div><div class=\"line\"></div><div class=\"line\">        if (networkInfo != null &amp;&amp; networkInfo.isConnected()) &#123;</div><div class=\"line\">            int type = networkInfo.getType();</div><div class=\"line\"></div><div class=\"line\">            if (type == ConnectivityManager.TYPE_WIFI) &#123;</div><div class=\"line\">                netWorkType = Constants.NETWORK_WIFI;</div><div class=\"line\">            &#125; else if (type == ConnectivityManager.TYPE_MOBILE) &#123;</div><div class=\"line\">                netWorkType = getNetWorkClass(context);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        return netWorkType;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>px-dp转换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static int dip2px(Context context, float dpValue) &#123;</div><div class=\"line\">    final float scale = context.getResources().getDisplayMetrics().density;</div><div class=\"line\">    return (int) (dpValue * scale + 0.5f);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">public static int px2dip(Context context, float pxValue) &#123;</div><div class=\"line\">    final float scale = context.getResources().getDisplayMetrics().density;</div><div class=\"line\">    return (int) (pxValue / scale + 0.5f);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>px-sp转换<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public static int px2sp(Context context, float pxValue) &#123;</div><div class=\"line\">        final float fontScale = context.getResources().getDisplayMetrics().scaledDensity;</div><div class=\"line\">        return (int) (pxValue / fontScale + 0.5f);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">public static int sp2px(Context context, float spValue) &#123;</div><div class=\"line\">        final float fontScale = context.getResources().getDisplayMetrics().scaledDensity;</div><div class=\"line\">        return (int) (spValue * fontScale + 0.5f);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>"},{"title":"提示插件版本太旧","date":"2017-03-13T15:00:34.000Z","_content":"提示错误如下：\n``` shell\nError:(1, 0) Plugin is too old, please update to a more recent version, or set ANDROID_DAILY_OVERRIDE environment variable to \"95749c122780b10ce030e9195472e6fef5829f59\"\n<a href=\"fixGradleElements\">Fix plugin version and sync project</a><br><a href=\"openFile:F:\\android_demo\\MyMVP\\app\\build.gradle\">Open File</a>\n```\n是build.gradle 里classpath的问题 我用的是 2.0.0 alpha 改成1.5.0就好了（改了之后会自动下载，耐心等待，请保持网络墙畅通）\n修改后如下：\n``` shell\n dependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n```\n","source":"_posts/android/提示插件版本太旧.md","raw":"---\ntitle: 提示插件版本太旧\ndate: 2017-03-13 23:00:34\ncategories: android\ntags: [android,版本太旧]\n---\n提示错误如下：\n``` shell\nError:(1, 0) Plugin is too old, please update to a more recent version, or set ANDROID_DAILY_OVERRIDE environment variable to \"95749c122780b10ce030e9195472e6fef5829f59\"\n<a href=\"fixGradleElements\">Fix plugin version and sync project</a><br><a href=\"openFile:F:\\android_demo\\MyMVP\\app\\build.gradle\">Open File</a>\n```\n是build.gradle 里classpath的问题 我用的是 2.0.0 alpha 改成1.5.0就好了（改了之后会自动下载，耐心等待，请保持网络墙畅通）\n修改后如下：\n``` shell\n dependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n```\n","slug":"android/提示插件版本太旧","published":1,"updated":"2017-03-13T15:01:56.460Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taacv000tr8syhaqrb5af","content":"<p>提示错误如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Error:(1, 0) Plugin is too old, please update to a more recent version, or set ANDROID_DAILY_OVERRIDE environment variable to &quot;95749c122780b10ce030e9195472e6fef5829f59&quot;</div><div class=\"line\">&lt;a href=&quot;fixGradleElements&quot;&gt;Fix plugin version and sync project&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;openFile:F:\\android_demo\\MyMVP\\app\\build.gradle&quot;&gt;Open File&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>是build.gradle 里classpath的问题 我用的是 2.0.0 alpha 改成1.5.0就好了（改了之后会自动下载，耐心等待，请保持网络墙畅通）<br>修改后如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">       classpath &apos;com.android.tools.build:gradle:1.5.0&apos;</div><div class=\"line\">       // NOTE: Do not place your application dependencies here; they belong</div><div class=\"line\">       // in the individual module build.gradle files</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>提示错误如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Error:(1, 0) Plugin is too old, please update to a more recent version, or set ANDROID_DAILY_OVERRIDE environment variable to &quot;95749c122780b10ce030e9195472e6fef5829f59&quot;</div><div class=\"line\">&lt;a href=&quot;fixGradleElements&quot;&gt;Fix plugin version and sync project&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;openFile:F:\\android_demo\\MyMVP\\app\\build.gradle&quot;&gt;Open File&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>是build.gradle 里classpath的问题 我用的是 2.0.0 alpha 改成1.5.0就好了（改了之后会自动下载，耐心等待，请保持网络墙畅通）<br>修改后如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">dependencies &#123;</div><div class=\"line\">       classpath &apos;com.android.tools.build:gradle:1.5.0&apos;</div><div class=\"line\">       // NOTE: Do not place your application dependencies here; they belong</div><div class=\"line\">       // in the individual module build.gradle files</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"设置编码","date":"2017-03-13T14:59:07.000Z","_content":"编译器使用的编码还需要单独设置，否则 gradle 默认使用 utf-8 的编码和文件的实际编码不一致，就会导致程序运行的时候显示乱码。\ngradle 配置编码在 build.gradle 脚本文件中配置。添加上下面配置就行。\n``` shell\nandroid {\n ......\ncompileOptions {\nencoding \"GBK\"\n}\n}\n```\n","source":"_posts/android/设置编码.md","raw":"---\ntitle: 设置编码\ndate: 2017-03-13 22:59:07\ncategories: android\ntags: [android,编码]\n---\n编译器使用的编码还需要单独设置，否则 gradle 默认使用 utf-8 的编码和文件的实际编码不一致，就会导致程序运行的时候显示乱码。\ngradle 配置编码在 build.gradle 脚本文件中配置。添加上下面配置就行。\n``` shell\nandroid {\n ......\ncompileOptions {\nencoding \"GBK\"\n}\n}\n```\n","slug":"android/设置编码","published":1,"updated":"2017-03-13T15:04:52.609Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taacx000wr8syugquq82k","content":"<p>编译器使用的编码还需要单独设置，否则 gradle 默认使用 utf-8 的编码和文件的实际编码不一致，就会导致程序运行的时候显示乱码。<br>gradle 配置编码在 build.gradle 脚本文件中配置。添加上下面配置就行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">android &#123;</div><div class=\"line\"> ......</div><div class=\"line\">compileOptions &#123;</div><div class=\"line\">encoding &quot;GBK&quot;</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>编译器使用的编码还需要单独设置，否则 gradle 默认使用 utf-8 的编码和文件的实际编码不一致，就会导致程序运行的时候显示乱码。<br>gradle 配置编码在 build.gradle 脚本文件中配置。添加上下面配置就行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">android &#123;</div><div class=\"line\"> ......</div><div class=\"line\">compileOptions &#123;</div><div class=\"line\">encoding &quot;GBK&quot;</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"获取apk的sha1值","date":"2017-03-13T14:37:35.000Z","_content":"直接用打包出来的apk查看签名，具体如下：\n1） 将apk修改后缀为 .zip文件后解压；\n2） 进入解压后的META-INF目录，该目录下会存在文件CERT.RSA\n3） 在该目录下打开cmd，输入命令 ：keytool -printcert -file CERT.RSA 这里将会显示出MD5和SHA1签名。\n","source":"_posts/android/获取apk的sha1值.md","raw":"---\ntitle: 获取apk的sha1值\ndate: 2017-03-13 22:37:35\ncategories: android\ntags: [android]\n---\n直接用打包出来的apk查看签名，具体如下：\n1） 将apk修改后缀为 .zip文件后解压；\n2） 进入解压后的META-INF目录，该目录下会存在文件CERT.RSA\n3） 在该目录下打开cmd，输入命令 ：keytool -printcert -file CERT.RSA 这里将会显示出MD5和SHA1签名。\n","slug":"android/获取apk的sha1值","published":1,"updated":"2017-03-13T14:59:48.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taad20010r8symfcm0ekb","content":"<p>直接用打包出来的apk查看签名，具体如下：<br>1） 将apk修改后缀为 .zip文件后解压；<br>2） 进入解压后的META-INF目录，该目录下会存在文件CERT.RSA<br>3） 在该目录下打开cmd，输入命令 ：keytool -printcert -file CERT.RSA 这里将会显示出MD5和SHA1签名。</p>\n","excerpt":"","more":"<p>直接用打包出来的apk查看签名，具体如下：<br>1） 将apk修改后缀为 .zip文件后解压；<br>2） 进入解压后的META-INF目录，该目录下会存在文件CERT.RSA<br>3） 在该目录下打开cmd，输入命令 ：keytool -printcert -file CERT.RSA 这里将会显示出MD5和SHA1签名。</p>\n"},{"title":"安装Elasticsearch","date":"2017-03-17T06:43:41.000Z","_content":"## 下载解压elasticsearch\n<!--more-->\n## 执行如下命令启动\n```shell\n./bin/elasticsearch\n```\n## 另外一个终端，查看\n```shel\ncurl 'http://localhost:9200/?pretty'\n{\n  \"name\" : \"fNc9QZL\",\n  \"cluster_name\" : \"elasticsearch\",\n  \"cluster_uuid\" : \"S2Ac_4AfRpeFeCz6hXj3Ng\",\n  \"version\" : {\n    \"number\" : \"5.1.2\",\n    \"build_hash\" : \"c8c4c16\",\n    \"build_date\" : \"2017-01-11T20:18:39.146Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"6.3.0\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n```\n说明安装成功！\n## 常见问题\n### virtual memory areas vm.max_map_count [65530] is too low\n```shell\nmax virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]\n```\n这是由于 vm.max_map_count 太小引起的，可以使用\n```shell\nsysctl -w vm.max_map_count=262144\nsysctl -a|grep \"vm.max_map_count\"\n```\n可以在sysctl.conf增加 vm.max_map_count=262144，然后使用\n```shell\nsysctl -p /etc/sysctl.conf\n```\n做永久调整\n\n### max file descriptors [4096] for elasticsearch process is too low\n```shell\nmax file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]\n```\n在Linux的系统中对于进程(Process)会有一些限制，你可以使用 ulimit -Sn 和 ulimit -Hn 查看软硬限制。\n使用 root 帐号调整即可\n```shell\n#使用ulimit 命令可以分别查看软限制和硬限制，方法实在查看的参数前加 S 或 H。例如，查看打开文件数限制\nulimit -Sn #查看的是软限制\nulimit -Hn #查看的是硬限制\n```\nvim /etc/security/limits.conf\n```shell\n#添加如下配置\nJJS soft nofile 65536\nJJS hard nofile 65536\n```\n编辑后，重新登录JJS用户，通过ulimit查看，发现已经更改成功\n\n### max number of threads [1024] for user [xx] is too low\n```shell\nmax number of threads [1024] for user [JJS] is too low, increase to at least [2048]\n```\n```shell\n#编辑\nvim /etc/security/limits.d/90-nproc.conf\n```\n![logo](307afbba-50a9-49f0-8500-8e362ff809ae.png)\n编辑后，重新登录JJS用户\n","source":"_posts/elasticsearch/安装Elasticsearch.md","raw":"---\ntitle: 安装Elasticsearch\ndate: 2017-03-17 14:43:41\ncategory: Elasticsearch\ntags: [Elasticsearch]\n---\n## 下载解压elasticsearch\n<!--more-->\n## 执行如下命令启动\n```shell\n./bin/elasticsearch\n```\n## 另外一个终端，查看\n```shel\ncurl 'http://localhost:9200/?pretty'\n{\n  \"name\" : \"fNc9QZL\",\n  \"cluster_name\" : \"elasticsearch\",\n  \"cluster_uuid\" : \"S2Ac_4AfRpeFeCz6hXj3Ng\",\n  \"version\" : {\n    \"number\" : \"5.1.2\",\n    \"build_hash\" : \"c8c4c16\",\n    \"build_date\" : \"2017-01-11T20:18:39.146Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"6.3.0\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n```\n说明安装成功！\n## 常见问题\n### virtual memory areas vm.max_map_count [65530] is too low\n```shell\nmax virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]\n```\n这是由于 vm.max_map_count 太小引起的，可以使用\n```shell\nsysctl -w vm.max_map_count=262144\nsysctl -a|grep \"vm.max_map_count\"\n```\n可以在sysctl.conf增加 vm.max_map_count=262144，然后使用\n```shell\nsysctl -p /etc/sysctl.conf\n```\n做永久调整\n\n### max file descriptors [4096] for elasticsearch process is too low\n```shell\nmax file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]\n```\n在Linux的系统中对于进程(Process)会有一些限制，你可以使用 ulimit -Sn 和 ulimit -Hn 查看软硬限制。\n使用 root 帐号调整即可\n```shell\n#使用ulimit 命令可以分别查看软限制和硬限制，方法实在查看的参数前加 S 或 H。例如，查看打开文件数限制\nulimit -Sn #查看的是软限制\nulimit -Hn #查看的是硬限制\n```\nvim /etc/security/limits.conf\n```shell\n#添加如下配置\nJJS soft nofile 65536\nJJS hard nofile 65536\n```\n编辑后，重新登录JJS用户，通过ulimit查看，发现已经更改成功\n\n### max number of threads [1024] for user [xx] is too low\n```shell\nmax number of threads [1024] for user [JJS] is too low, increase to at least [2048]\n```\n```shell\n#编辑\nvim /etc/security/limits.d/90-nproc.conf\n```\n![logo](307afbba-50a9-49f0-8500-8e362ff809ae.png)\n编辑后，重新登录JJS用户\n","slug":"elasticsearch/安装Elasticsearch","published":1,"updated":"2017-03-17T06:58:23.476Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taad40012r8syc8tmuim1","content":"<h2 id=\"下载解压elasticsearch\"><a href=\"#下载解压elasticsearch\" class=\"headerlink\" title=\"下载解压elasticsearch\"></a>下载解压elasticsearch</h2><a id=\"more\"></a>\n<h2 id=\"执行如下命令启动\"><a href=\"#执行如下命令启动\" class=\"headerlink\" title=\"执行如下命令启动\"></a>执行如下命令启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./bin/elasticsearch</div></pre></td></tr></table></figure>\n<h2 id=\"另外一个终端，查看\"><a href=\"#另外一个终端，查看\" class=\"headerlink\" title=\"另外一个终端，查看\"></a>另外一个终端，查看</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl &apos;http://localhost:9200/?pretty&apos;</div><div class=\"line\">&#123;</div><div class=\"line\">  &quot;name&quot; : &quot;fNc9QZL&quot;,</div><div class=\"line\">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</div><div class=\"line\">  &quot;cluster_uuid&quot; : &quot;S2Ac_4AfRpeFeCz6hXj3Ng&quot;,</div><div class=\"line\">  &quot;version&quot; : &#123;</div><div class=\"line\">    &quot;number&quot; : &quot;5.1.2&quot;,</div><div class=\"line\">    &quot;build_hash&quot; : &quot;c8c4c16&quot;,</div><div class=\"line\">    &quot;build_date&quot; : &quot;2017-01-11T20:18:39.146Z&quot;,</div><div class=\"line\">    &quot;build_snapshot&quot; : false,</div><div class=\"line\">    &quot;lucene_version&quot; : &quot;6.3.0&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>说明安装成功！</p>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><h3 id=\"virtual-memory-areas-vm-max-map-count-65530-is-too-low\"><a href=\"#virtual-memory-areas-vm-max-map-count-65530-is-too-low\" class=\"headerlink\" title=\"virtual memory areas vm.max_map_count [65530] is too low\"></a>virtual memory areas vm.max_map_count [65530] is too low</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</div></pre></td></tr></table></figure>\n<p>这是由于 vm.max_map_count 太小引起的，可以使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sysctl -w vm.max_map_count=262144</div><div class=\"line\">sysctl -a|grep &quot;vm.max_map_count&quot;</div></pre></td></tr></table></figure></p>\n<p>可以在sysctl.conf增加 vm.max_map_count=262144，然后使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sysctl -p /etc/sysctl.conf</div></pre></td></tr></table></figure></p>\n<p>做永久调整</p>\n<h3 id=\"max-file-descriptors-4096-for-elasticsearch-process-is-too-low\"><a href=\"#max-file-descriptors-4096-for-elasticsearch-process-is-too-low\" class=\"headerlink\" title=\"max file descriptors [4096] for elasticsearch process is too low\"></a>max file descriptors [4096] for elasticsearch process is too low</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</div></pre></td></tr></table></figure>\n<p>在Linux的系统中对于进程(Process)会有一些限制，你可以使用 ulimit -Sn 和 ulimit -Hn 查看软硬限制。<br>使用 root 帐号调整即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#使用ulimit 命令可以分别查看软限制和硬限制，方法实在查看的参数前加 S 或 H。例如，查看打开文件数限制</div><div class=\"line\">ulimit -Sn #查看的是软限制</div><div class=\"line\">ulimit -Hn #查看的是硬限制</div></pre></td></tr></table></figure></p>\n<p>vim /etc/security/limits.conf<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#添加如下配置</div><div class=\"line\">JJS soft nofile 65536</div><div class=\"line\">JJS hard nofile 65536</div></pre></td></tr></table></figure></p>\n<p>编辑后，重新登录JJS用户，通过ulimit查看，发现已经更改成功</p>\n<h3 id=\"max-number-of-threads-1024-for-user-xx-is-too-low\"><a href=\"#max-number-of-threads-1024-for-user-xx-is-too-low\" class=\"headerlink\" title=\"max number of threads [1024] for user [xx] is too low\"></a>max number of threads [1024] for user [xx] is too low</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">max number of threads [1024] for user [JJS] is too low, increase to at least [2048]</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#编辑</div><div class=\"line\">vim /etc/security/limits.d/90-nproc.conf</div></pre></td></tr></table></figure>\n<p><img src=\"/2017/03/17/elasticsearch/安装Elasticsearch/307afbba-50a9-49f0-8500-8e362ff809ae.png\" alt=\"logo\"><br>编辑后，重新登录JJS用户</p>\n","excerpt":"<h2 id=\"下载解压elasticsearch\"><a href=\"#下载解压elasticsearch\" class=\"headerlink\" title=\"下载解压elasticsearch\"></a>下载解压elasticsearch</h2>","more":"<h2 id=\"执行如下命令启动\"><a href=\"#执行如下命令启动\" class=\"headerlink\" title=\"执行如下命令启动\"></a>执行如下命令启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./bin/elasticsearch</div></pre></td></tr></table></figure>\n<h2 id=\"另外一个终端，查看\"><a href=\"#另外一个终端，查看\" class=\"headerlink\" title=\"另外一个终端，查看\"></a>另外一个终端，查看</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl &apos;http://localhost:9200/?pretty&apos;</div><div class=\"line\">&#123;</div><div class=\"line\">  &quot;name&quot; : &quot;fNc9QZL&quot;,</div><div class=\"line\">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</div><div class=\"line\">  &quot;cluster_uuid&quot; : &quot;S2Ac_4AfRpeFeCz6hXj3Ng&quot;,</div><div class=\"line\">  &quot;version&quot; : &#123;</div><div class=\"line\">    &quot;number&quot; : &quot;5.1.2&quot;,</div><div class=\"line\">    &quot;build_hash&quot; : &quot;c8c4c16&quot;,</div><div class=\"line\">    &quot;build_date&quot; : &quot;2017-01-11T20:18:39.146Z&quot;,</div><div class=\"line\">    &quot;build_snapshot&quot; : false,</div><div class=\"line\">    &quot;lucene_version&quot; : &quot;6.3.0&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>说明安装成功！</p>\n<h2 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h2><h3 id=\"virtual-memory-areas-vm-max-map-count-65530-is-too-low\"><a href=\"#virtual-memory-areas-vm-max-map-count-65530-is-too-low\" class=\"headerlink\" title=\"virtual memory areas vm.max_map_count [65530] is too low\"></a>virtual memory areas vm.max_map_count [65530] is too low</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</div></pre></td></tr></table></figure>\n<p>这是由于 vm.max_map_count 太小引起的，可以使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sysctl -w vm.max_map_count=262144</div><div class=\"line\">sysctl -a|grep &quot;vm.max_map_count&quot;</div></pre></td></tr></table></figure></p>\n<p>可以在sysctl.conf增加 vm.max_map_count=262144，然后使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sysctl -p /etc/sysctl.conf</div></pre></td></tr></table></figure></p>\n<p>做永久调整</p>\n<h3 id=\"max-file-descriptors-4096-for-elasticsearch-process-is-too-low\"><a href=\"#max-file-descriptors-4096-for-elasticsearch-process-is-too-low\" class=\"headerlink\" title=\"max file descriptors [4096] for elasticsearch process is too low\"></a>max file descriptors [4096] for elasticsearch process is too low</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</div></pre></td></tr></table></figure>\n<p>在Linux的系统中对于进程(Process)会有一些限制，你可以使用 ulimit -Sn 和 ulimit -Hn 查看软硬限制。<br>使用 root 帐号调整即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#使用ulimit 命令可以分别查看软限制和硬限制，方法实在查看的参数前加 S 或 H。例如，查看打开文件数限制</div><div class=\"line\">ulimit -Sn #查看的是软限制</div><div class=\"line\">ulimit -Hn #查看的是硬限制</div></pre></td></tr></table></figure></p>\n<p>vim /etc/security/limits.conf<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#添加如下配置</div><div class=\"line\">JJS soft nofile 65536</div><div class=\"line\">JJS hard nofile 65536</div></pre></td></tr></table></figure></p>\n<p>编辑后，重新登录JJS用户，通过ulimit查看，发现已经更改成功</p>\n<h3 id=\"max-number-of-threads-1024-for-user-xx-is-too-low\"><a href=\"#max-number-of-threads-1024-for-user-xx-is-too-low\" class=\"headerlink\" title=\"max number of threads [1024] for user [xx] is too low\"></a>max number of threads [1024] for user [xx] is too low</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">max number of threads [1024] for user [JJS] is too low, increase to at least [2048]</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#编辑</div><div class=\"line\">vim /etc/security/limits.d/90-nproc.conf</div></pre></td></tr></table></figure>\n<p><img src=\"/2017/03/17/elasticsearch/安装Elasticsearch/307afbba-50a9-49f0-8500-8e362ff809ae.png\" alt=\"logo\"><br>编辑后，重新登录JJS用户</p>"},{"title":"安装Elasticsearch-head插件","date":"2017-03-17T06:59:17.000Z","_content":"elasticsearch 5.0 与elasticsearch2.0差距比较大，在这里记录下插件elasticsearch-head的安装\n<!--more-->\n## 下载elasticsearch-head插件\n```shell\ngit clone https://github.com/mobz/elasticsearch-head.git\n```\n## 由于需要node环境，如果没有则需要安装。\n## 在node环境基础上，如果没有安装grunt， 则需要安装grunt。\n```shell\nnpm install -g grunt\n```\n## 进入elasticsearch-head目录下进行npm install 使用node.js安装。\n```shell\nnpm install\n```\n## 启动elasticsearch-head\n```shell\ngrunt server\n```\n## 修改elasticsearch配置参数，并启动\n```shell\n# 修改一下ES的监听地址，这样别的机器也可以访问\nnetwork.host: 0.0.0.0\n\n# 增加新的参数，这样head插件可以访问es\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n```\n\n","source":"_posts/elasticsearch/安装Elasticsearch-head插件.md","raw":"---\ntitle: 安装Elasticsearch-head插件\ndate: 2017-03-17 14:59:17\ncategory: Elasticsearch\ntags: [Elasticsearch,Elasticsearch-head]\n---\nelasticsearch 5.0 与elasticsearch2.0差距比较大，在这里记录下插件elasticsearch-head的安装\n<!--more-->\n## 下载elasticsearch-head插件\n```shell\ngit clone https://github.com/mobz/elasticsearch-head.git\n```\n## 由于需要node环境，如果没有则需要安装。\n## 在node环境基础上，如果没有安装grunt， 则需要安装grunt。\n```shell\nnpm install -g grunt\n```\n## 进入elasticsearch-head目录下进行npm install 使用node.js安装。\n```shell\nnpm install\n```\n## 启动elasticsearch-head\n```shell\ngrunt server\n```\n## 修改elasticsearch配置参数，并启动\n```shell\n# 修改一下ES的监听地址，这样别的机器也可以访问\nnetwork.host: 0.0.0.0\n\n# 增加新的参数，这样head插件可以访问es\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n```\n\n","slug":"elasticsearch/安装Elasticsearch-head插件","published":1,"updated":"2017-03-17T07:03:43.868Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taad90016r8syvx14hiwi","content":"<p>elasticsearch 5.0 与elasticsearch2.0差距比较大，在这里记录下插件elasticsearch-head的安装<br><a id=\"more\"></a></p>\n<h2 id=\"下载elasticsearch-head插件\"><a href=\"#下载elasticsearch-head插件\" class=\"headerlink\" title=\"下载elasticsearch-head插件\"></a>下载elasticsearch-head插件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/mobz/elasticsearch-head.git</div></pre></td></tr></table></figure>\n<h2 id=\"由于需要node环境，如果没有则需要安装。\"><a href=\"#由于需要node环境，如果没有则需要安装。\" class=\"headerlink\" title=\"由于需要node环境，如果没有则需要安装。\"></a>由于需要node环境，如果没有则需要安装。</h2><h2 id=\"在node环境基础上，如果没有安装grunt，-则需要安装grunt。\"><a href=\"#在node环境基础上，如果没有安装grunt，-则需要安装grunt。\" class=\"headerlink\" title=\"在node环境基础上，如果没有安装grunt， 则需要安装grunt。\"></a>在node环境基础上，如果没有安装grunt， 则需要安装grunt。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g grunt</div></pre></td></tr></table></figure>\n<h2 id=\"进入elasticsearch-head目录下进行npm-install-使用node-js安装。\"><a href=\"#进入elasticsearch-head目录下进行npm-install-使用node-js安装。\" class=\"headerlink\" title=\"进入elasticsearch-head目录下进行npm install 使用node.js安装。\"></a>进入elasticsearch-head目录下进行npm install 使用node.js安装。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<h2 id=\"启动elasticsearch-head\"><a href=\"#启动elasticsearch-head\" class=\"headerlink\" title=\"启动elasticsearch-head\"></a>启动elasticsearch-head</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grunt server</div></pre></td></tr></table></figure>\n<h2 id=\"修改elasticsearch配置参数，并启动\"><a href=\"#修改elasticsearch配置参数，并启动\" class=\"headerlink\" title=\"修改elasticsearch配置参数，并启动\"></a>修改elasticsearch配置参数，并启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 修改一下ES的监听地址，这样别的机器也可以访问</div><div class=\"line\">network.host: 0.0.0.0</div><div class=\"line\"></div><div class=\"line\"># 增加新的参数，这样head插件可以访问es</div><div class=\"line\">http.cors.enabled: true</div><div class=\"line\">http.cors.allow-origin: &quot;*&quot;</div></pre></td></tr></table></figure>\n","excerpt":"<p>elasticsearch 5.0 与elasticsearch2.0差距比较大，在这里记录下插件elasticsearch-head的安装<br></p>","more":"<p></p>\n<h2 id=\"下载elasticsearch-head插件\"><a href=\"#下载elasticsearch-head插件\" class=\"headerlink\" title=\"下载elasticsearch-head插件\"></a>下载elasticsearch-head插件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/mobz/elasticsearch-head.git</div></pre></td></tr></table></figure>\n<h2 id=\"由于需要node环境，如果没有则需要安装。\"><a href=\"#由于需要node环境，如果没有则需要安装。\" class=\"headerlink\" title=\"由于需要node环境，如果没有则需要安装。\"></a>由于需要node环境，如果没有则需要安装。</h2><h2 id=\"在node环境基础上，如果没有安装grunt，-则需要安装grunt。\"><a href=\"#在node环境基础上，如果没有安装grunt，-则需要安装grunt。\" class=\"headerlink\" title=\"在node环境基础上，如果没有安装grunt， 则需要安装grunt。\"></a>在node环境基础上，如果没有安装grunt， 则需要安装grunt。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g grunt</div></pre></td></tr></table></figure>\n<h2 id=\"进入elasticsearch-head目录下进行npm-install-使用node-js安装。\"><a href=\"#进入elasticsearch-head目录下进行npm-install-使用node-js安装。\" class=\"headerlink\" title=\"进入elasticsearch-head目录下进行npm install 使用node.js安装。\"></a>进入elasticsearch-head目录下进行npm install 使用node.js安装。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<h2 id=\"启动elasticsearch-head\"><a href=\"#启动elasticsearch-head\" class=\"headerlink\" title=\"启动elasticsearch-head\"></a>启动elasticsearch-head</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">grunt server</div></pre></td></tr></table></figure>\n<h2 id=\"修改elasticsearch配置参数，并启动\"><a href=\"#修改elasticsearch配置参数，并启动\" class=\"headerlink\" title=\"修改elasticsearch配置参数，并启动\"></a>修改elasticsearch配置参数，并启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 修改一下ES的监听地址，这样别的机器也可以访问</div><div class=\"line\">network.host: 0.0.0.0</div><div class=\"line\"></div><div class=\"line\"># 增加新的参数，这样head插件可以访问es</div><div class=\"line\">http.cors.enabled: true</div><div class=\"line\">http.cors.allow-origin: &quot;*&quot;</div></pre></td></tr></table></figure>"},{"title":"FreeMarker list的遍历","date":"2017-03-17T06:29:56.000Z","_content":"# freemarker List的遍历\nFreemarker中如何遍历List摘要：在Freemarker应用中经常会遍历List获取需要的数据，\n并对需要的数据进行排序加工后呈现给用户。那么在Freemarker中如何遍历List，\n并对List中数据进行适当的排序呢？\n通过下文的介绍，相信您一定会找到答案。\n<!--more-->\n## 一、 Freemarker中list指令简单介绍\n要想在Freemarker中遍历list,必须通过使用list指令,即<#list sequence as item>…</#list>\nsequence是集合(collection)的表达式，item是循环变量的名字，不能是表达式。\n当在遍历sequence时，会将遍历变量的值保存到item中。\n举个例子说明吧：\n```shell\n<#list userList as user>\n…\n</#list>\n```\nuserList中封装了很多个User对象，我们在遍历userList时候，会将遍历的User对象的值，保存到上述的user变量中。\n那么在取值时，我们可以通过${user.userName }来获取User对象的userName属性值。\nList指令还隐含了两个循环变量：\nitem_index:当前迭代项在所有迭代项中的位置，是数字值。\nitem_has_next:用于判断当前迭代项是否是所有迭代项中的最后一项。\n注意：在使用上述两个循环变量时，一定要将item换成你自己定义的循环变量名,item其实就是前缀罢了。\n例如，如果你使用<# list list as l>..</#list>定义，那么就要使用l_index,l_has_next。\n在循环过程中，如果您想跳出循环，那么可以使用结合break指令，即<#break>来完成。\n","source":"_posts/freeMarker/FreeMarker-list的遍历.md","raw":"---\ntitle: FreeMarker list的遍历\ndate: 2017-03-17 14:29:56\ncategory: freeMarker\ntags: [freeMarker]\n---\n# freemarker List的遍历\nFreemarker中如何遍历List摘要：在Freemarker应用中经常会遍历List获取需要的数据，\n并对需要的数据进行排序加工后呈现给用户。那么在Freemarker中如何遍历List，\n并对List中数据进行适当的排序呢？\n通过下文的介绍，相信您一定会找到答案。\n<!--more-->\n## 一、 Freemarker中list指令简单介绍\n要想在Freemarker中遍历list,必须通过使用list指令,即<#list sequence as item>…</#list>\nsequence是集合(collection)的表达式，item是循环变量的名字，不能是表达式。\n当在遍历sequence时，会将遍历变量的值保存到item中。\n举个例子说明吧：\n```shell\n<#list userList as user>\n…\n</#list>\n```\nuserList中封装了很多个User对象，我们在遍历userList时候，会将遍历的User对象的值，保存到上述的user变量中。\n那么在取值时，我们可以通过${user.userName }来获取User对象的userName属性值。\nList指令还隐含了两个循环变量：\nitem_index:当前迭代项在所有迭代项中的位置，是数字值。\nitem_has_next:用于判断当前迭代项是否是所有迭代项中的最后一项。\n注意：在使用上述两个循环变量时，一定要将item换成你自己定义的循环变量名,item其实就是前缀罢了。\n例如，如果你使用<# list list as l>..</#list>定义，那么就要使用l_index,l_has_next。\n在循环过程中，如果您想跳出循环，那么可以使用结合break指令，即<#break>来完成。\n","slug":"freeMarker/FreeMarker-list的遍历","published":1,"updated":"2017-03-17T06:36:17.404Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taadd0019r8syyydjc2o5","content":"<h1 id=\"freemarker-List的遍历\"><a href=\"#freemarker-List的遍历\" class=\"headerlink\" title=\"freemarker List的遍历\"></a>freemarker List的遍历</h1><p>Freemarker中如何遍历List摘要：在Freemarker应用中经常会遍历List获取需要的数据，<br>并对需要的数据进行排序加工后呈现给用户。那么在Freemarker中如何遍历List，<br>并对List中数据进行适当的排序呢？<br>通过下文的介绍，相信您一定会找到答案。<br><a id=\"more\"></a></p>\n<h2 id=\"一、-Freemarker中list指令简单介绍\"><a href=\"#一、-Freemarker中list指令简单介绍\" class=\"headerlink\" title=\"一、 Freemarker中list指令简单介绍\"></a>一、 Freemarker中list指令简单介绍</h2><p>要想在Freemarker中遍历list,必须通过使用list指令,即&lt;#list sequence as item&gt;…&lt;/#list&gt;<br>sequence是集合(collection)的表达式，item是循环变量的名字，不能是表达式。<br>当在遍历sequence时，会将遍历变量的值保存到item中。<br>举个例子说明吧：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list userList as user&gt;</div><div class=\"line\">…</div><div class=\"line\">&lt;/#list&gt;</div></pre></td></tr></table></figure></p>\n<p>userList中封装了很多个User对象，我们在遍历userList时候，会将遍历的User对象的值，保存到上述的user变量中。<br>那么在取值时，我们可以通过${user.userName }来获取User对象的userName属性值。<br>List指令还隐含了两个循环变量：<br>item_index:当前迭代项在所有迭代项中的位置，是数字值。<br>item_has_next:用于判断当前迭代项是否是所有迭代项中的最后一项。<br>注意：在使用上述两个循环变量时，一定要将item换成你自己定义的循环变量名,item其实就是前缀罢了。<br>例如，如果你使用&lt;# list list as l&gt;..&lt;/#list&gt;定义，那么就要使用l_index,l_has_next。<br>在循环过程中，如果您想跳出循环，那么可以使用结合break指令，即&lt;#break&gt;来完成。</p>\n","excerpt":"<h1 id=\"freemarker-List的遍历\"><a href=\"#freemarker-List的遍历\" class=\"headerlink\" title=\"freemarker List的遍历\"></a>freemarker List的遍历</h1><p>Freemarker中如何遍历List摘要：在Freemarker应用中经常会遍历List获取需要的数据，<br>并对需要的数据进行排序加工后呈现给用户。那么在Freemarker中如何遍历List，<br>并对List中数据进行适当的排序呢？<br>通过下文的介绍，相信您一定会找到答案。<br></p>","more":"<p></p>\n<h2 id=\"一、-Freemarker中list指令简单介绍\"><a href=\"#一、-Freemarker中list指令简单介绍\" class=\"headerlink\" title=\"一、 Freemarker中list指令简单介绍\"></a>一、 Freemarker中list指令简单介绍</h2><p>要想在Freemarker中遍历list,必须通过使用list指令,即&lt;#list sequence as item&gt;…&lt;/#list&gt;<br>sequence是集合(collection)的表达式，item是循环变量的名字，不能是表达式。<br>当在遍历sequence时，会将遍历变量的值保存到item中。<br>举个例子说明吧：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list userList as user&gt;</div><div class=\"line\">…</div><div class=\"line\">&lt;/#list&gt;</div></pre></td></tr></table></figure></p>\n<p>userList中封装了很多个User对象，我们在遍历userList时候，会将遍历的User对象的值，保存到上述的user变量中。<br>那么在取值时，我们可以通过${user.userName }来获取User对象的userName属性值。<br>List指令还隐含了两个循环变量：<br>item_index:当前迭代项在所有迭代项中的位置，是数字值。<br>item_has_next:用于判断当前迭代项是否是所有迭代项中的最后一项。<br>注意：在使用上述两个循环变量时，一定要将item换成你自己定义的循环变量名,item其实就是前缀罢了。<br>例如，如果你使用&lt;# list list as l&gt;..&lt;/#list&gt;定义，那么就要使用l_index,l_has_next。<br>在循环过程中，如果您想跳出循环，那么可以使用结合break指令，即&lt;#break&gt;来完成。</p>"},{"title":"FreeMarker 基础知识 表达式(引用)","date":"2017-03-17T03:48:10.000Z","_content":"FreeMarker 基础知识 表达式(引用)\n表达式是FreeMarker的核心功能，FreeMarker中的插值支持多种表达式。\n<!--more-->\n## 一、直接指定值\n直接指定值可以是字符串、数值、布尔值、集合及Map对象。\n1. 字符串\n直接指定字符串值使用单引号或双引号限定。字符串中可以使用转义字符”\\\"。如果字符串内有大量的特殊字符，则可以在引号的前面加上一个字母r，则字符串内的所有字符都将直接输出。\n2. 数值\n数值可以直接输入，不需要引号。FreeMarker不支持科学计数法。\n3. 布尔值\n直接使用true或false，不使用引号。\n4. 集合\n集合用中括号包括，集合元素之间用逗号分隔。\n使用数字范围也可以表示一个数字集合，如1..5等同于集合[1, 2, 3, 4, 5]；同样也可以用5..1来表示[5, 4, 3, 2, 1]。\n5. Map对象\nMap对象使用花括号包括，Map中的key-value对之间用冒号分隔，多组key-value对之间用逗号分隔。\n注意：Map对象的key和value都是表达式，但key必须是字符串。\n## 二、输出变量值\nFreeMarker的表达式输出变量时，这些变量可以是顶层变量，也可以是Map对象的变量，还可以是集合中的变量，并可以使用点（.）语法来访问Java对象的属性。\n1. 顶层变量\n所谓顶层变量就是直接放在数据模型中的值。输出时直接用${variableName}即可。\n2. 输出集合元素\n可以根据集合元素的索引来输出集合元素，索引用中括号包括。如： 输出[“1”， “2”， “3”]这个名为number的集合，可以用${number[0]}来输出第一个数字。\nFreeMarker还支持用number[1..2]来表示原集合的子集合[“2”， “3”]。\n3. 输出Map元素\n对于JavaBean实例，FreeMarker一样把它看作属性为key，属性值为value的Map对象。\n输出Map对象时，可以使用点语法或中括号语法，如下面的几种写法的效果是一样的：\n             book.author.name\n             book.author[\"name\"]\n             book[\"author\"].name\n             book[\"author\"][\"name\"]\n使用点语法时，变量名字有和顶层变量一样的限制，但中括号语法没有任何限制。\n## 三、字符串操作\n1. 字符串连接\n 字符串连接有两种语法：\n（1） 使用${..}或#{..}在字符串常量内插入表达式的值；\n(2)  直接使用连接运算符“+”连接字符串。\n如，下面两种写法等效：\n              ${\"Hello, ${user}\"}\n              ${\"Hello, \" + user + \"!\"}\n有一点需要注意： ${..}只能用于文本部分作为插值输出，而不能用于比较等其他用途，如：\n              <#if ${isBig}>Wow!</#if>\n              <#if \"${isBig}\">Wow!</#if>\n应该写成：\n              <#if isBig>Wow!</#if>\n2. 截取子串\n截取子串可以根据字符串的索引来进行，如果指定一个索引值，则取得字符串该索引处的字符；如果指定两个索引值，则截取两个索引中间的字符串子串。如：\n              <#assign number=\"01234\">\n              ${number[0]} <#-- 输出字符0 -->\n              ${number[0..3]} <#-- 输出子串“0123” -->四、集合连接操作\n      连接集合的运算符为“+”\n## 五、Map连接操作\nMap连接操作的运算符为“+”\n## 六、算术运算符\nFreeMarker表达式中支持“+”、“－”、“*”、“/”、“%”运算符。\n## 七、比较运算符\n表达式中支持的比较运算符有如下几种：\n1. =（或者==）： 判断两个值是否相等；\n2. !=： 判断两个值是否不相等；\n注： =和!=可以用作字符串、数值和日期的比较，但两边的数据类型必须相同。而且FreeMarker的比较是精确比较，不会忽略大小写及空格。\n3. >（或者gt）： 大于\n4. >=（或者gte）： 大于等于\n5. <（或者lt）： 小于\n6. <=（或者lte）： 小于等于\n注： 上面这些比较运算符可以用于数字和日期，但不能用于字符串。大部分时候，使用gt比>有更好的效果，因为FreeMarker会把>解释成标签的结束字符。可以使用括号来避免这种情况，如：<#if (x>y)>。\n## 八、逻辑运算符\n1. &&： 逻辑与；\n2. ||： 逻辑或；\n3. !： 逻辑非\n逻辑运算符只能用于布尔值。\n## 九、内建函数\nFreeMarker提供了一些内建函数来转换输出，可以在任何变量后紧跟?，?后紧跟内建函数，就可以通过内建函数来转换输出变量。字符串相关常用的内建函数：\n1. html： 对字符串进行HTML编码；\n2. cap_first： 使字符串第一个字母大写；\n3. lower_case： 将字符串转成小写；\n4. upper_case： 将字符串转成大写；集合相关常用的内建函数：\n1. size： 获得集合中元素的个数；数字值相关常用的内建函数：\n1. int： 取得数字的整数部分。十、空值处理运算符\nFreeMarker的变量必须赋值，否则就会抛出异常。而对于FreeMarker来说，null值和不存在的变量是完全一样的，因为FreeMarker无法理解null值。\nFreeMarker提供两个运算符来避免空值：\n1. !： 指定缺失变量的默认值；\n2. ??：判断变量是否存在。\n!运算符有两种用法：variable!或variable!defaultValue。第一种用法不给变量指定默认值，表明默认值是空字符串、长度为0的集合、或长度为0的Map对象。\n使用!运算符指定默认值并不要求默认值的类型和变量类型相同。\n??运算符返回布尔值，如：variable??，如果变量存在，返回true，否则返回false。\n\nfreemarker 的内建函数 contains 的使用\nfreemarker 的内建函数 contains 的使用 关键字: freemarker contains\nfreemarker 的内建函数 contains 的使用:\n<#if employee.departments?contains(department)>checked=\"checked\"</#if> 其中departments是一个集合，而department是departments集合里的一个元素。contains函数可以判断出，元素 department是否存在于集合departments里，最终返回一个Booleancontains是freemarker的内建函数，即自带的 。\nFreeMarker 的内建函数有：\nchunk,  is_date,  last,  root,  j_string,  round,  contains,  is_hash,  long,  float,  ends_with,  namespace,  matches,  time,  values,  seq_last_index_of,  uncap_first,  byte,  substring,  is_transform,  web_safe,  groups,  seq_contains,  is_macro,  index_of,  word_list,  int,  is_method,  eval,  parent,  xml,  number,  capitalize,  if_exists,  rtf,  node_type,  double,  is_directive,  url,  size,  default,  floor,  ceiling, is_boolean,  split,  node_name,  is_enumerable,  seq_index_of,  is_sequence,  sort,  is_node,\nsort_by,  left_pad,  cap_first,  interpret,  children,  node_namespace,  chop_linebreak, date,  short,  last_index_of,  is_collection,  ancestors,  length,  trim,  datetime, is_string,  reverse,  c,  keys,  upper_case,  js_string,  has_content,  right_pad,  replace,  is_hash_ex,  new,  is_number,  lower_case,  is_indexable,  string,  exists,  html,  first\n\n\n","source":"_posts/freeMarker/FreeMarker-基础知识-表达式-引用.md","raw":"---\ntitle: FreeMarker 基础知识 表达式(引用)\ndate: 2017-03-17 11:48:10\ncategory: freeMarker\ntags: [freeMarker]\n---\nFreeMarker 基础知识 表达式(引用)\n表达式是FreeMarker的核心功能，FreeMarker中的插值支持多种表达式。\n<!--more-->\n## 一、直接指定值\n直接指定值可以是字符串、数值、布尔值、集合及Map对象。\n1. 字符串\n直接指定字符串值使用单引号或双引号限定。字符串中可以使用转义字符”\\\"。如果字符串内有大量的特殊字符，则可以在引号的前面加上一个字母r，则字符串内的所有字符都将直接输出。\n2. 数值\n数值可以直接输入，不需要引号。FreeMarker不支持科学计数法。\n3. 布尔值\n直接使用true或false，不使用引号。\n4. 集合\n集合用中括号包括，集合元素之间用逗号分隔。\n使用数字范围也可以表示一个数字集合，如1..5等同于集合[1, 2, 3, 4, 5]；同样也可以用5..1来表示[5, 4, 3, 2, 1]。\n5. Map对象\nMap对象使用花括号包括，Map中的key-value对之间用冒号分隔，多组key-value对之间用逗号分隔。\n注意：Map对象的key和value都是表达式，但key必须是字符串。\n## 二、输出变量值\nFreeMarker的表达式输出变量时，这些变量可以是顶层变量，也可以是Map对象的变量，还可以是集合中的变量，并可以使用点（.）语法来访问Java对象的属性。\n1. 顶层变量\n所谓顶层变量就是直接放在数据模型中的值。输出时直接用${variableName}即可。\n2. 输出集合元素\n可以根据集合元素的索引来输出集合元素，索引用中括号包括。如： 输出[“1”， “2”， “3”]这个名为number的集合，可以用${number[0]}来输出第一个数字。\nFreeMarker还支持用number[1..2]来表示原集合的子集合[“2”， “3”]。\n3. 输出Map元素\n对于JavaBean实例，FreeMarker一样把它看作属性为key，属性值为value的Map对象。\n输出Map对象时，可以使用点语法或中括号语法，如下面的几种写法的效果是一样的：\n             book.author.name\n             book.author[\"name\"]\n             book[\"author\"].name\n             book[\"author\"][\"name\"]\n使用点语法时，变量名字有和顶层变量一样的限制，但中括号语法没有任何限制。\n## 三、字符串操作\n1. 字符串连接\n 字符串连接有两种语法：\n（1） 使用${..}或#{..}在字符串常量内插入表达式的值；\n(2)  直接使用连接运算符“+”连接字符串。\n如，下面两种写法等效：\n              ${\"Hello, ${user}\"}\n              ${\"Hello, \" + user + \"!\"}\n有一点需要注意： ${..}只能用于文本部分作为插值输出，而不能用于比较等其他用途，如：\n              <#if ${isBig}>Wow!</#if>\n              <#if \"${isBig}\">Wow!</#if>\n应该写成：\n              <#if isBig>Wow!</#if>\n2. 截取子串\n截取子串可以根据字符串的索引来进行，如果指定一个索引值，则取得字符串该索引处的字符；如果指定两个索引值，则截取两个索引中间的字符串子串。如：\n              <#assign number=\"01234\">\n              ${number[0]} <#-- 输出字符0 -->\n              ${number[0..3]} <#-- 输出子串“0123” -->四、集合连接操作\n      连接集合的运算符为“+”\n## 五、Map连接操作\nMap连接操作的运算符为“+”\n## 六、算术运算符\nFreeMarker表达式中支持“+”、“－”、“*”、“/”、“%”运算符。\n## 七、比较运算符\n表达式中支持的比较运算符有如下几种：\n1. =（或者==）： 判断两个值是否相等；\n2. !=： 判断两个值是否不相等；\n注： =和!=可以用作字符串、数值和日期的比较，但两边的数据类型必须相同。而且FreeMarker的比较是精确比较，不会忽略大小写及空格。\n3. >（或者gt）： 大于\n4. >=（或者gte）： 大于等于\n5. <（或者lt）： 小于\n6. <=（或者lte）： 小于等于\n注： 上面这些比较运算符可以用于数字和日期，但不能用于字符串。大部分时候，使用gt比>有更好的效果，因为FreeMarker会把>解释成标签的结束字符。可以使用括号来避免这种情况，如：<#if (x>y)>。\n## 八、逻辑运算符\n1. &&： 逻辑与；\n2. ||： 逻辑或；\n3. !： 逻辑非\n逻辑运算符只能用于布尔值。\n## 九、内建函数\nFreeMarker提供了一些内建函数来转换输出，可以在任何变量后紧跟?，?后紧跟内建函数，就可以通过内建函数来转换输出变量。字符串相关常用的内建函数：\n1. html： 对字符串进行HTML编码；\n2. cap_first： 使字符串第一个字母大写；\n3. lower_case： 将字符串转成小写；\n4. upper_case： 将字符串转成大写；集合相关常用的内建函数：\n1. size： 获得集合中元素的个数；数字值相关常用的内建函数：\n1. int： 取得数字的整数部分。十、空值处理运算符\nFreeMarker的变量必须赋值，否则就会抛出异常。而对于FreeMarker来说，null值和不存在的变量是完全一样的，因为FreeMarker无法理解null值。\nFreeMarker提供两个运算符来避免空值：\n1. !： 指定缺失变量的默认值；\n2. ??：判断变量是否存在。\n!运算符有两种用法：variable!或variable!defaultValue。第一种用法不给变量指定默认值，表明默认值是空字符串、长度为0的集合、或长度为0的Map对象。\n使用!运算符指定默认值并不要求默认值的类型和变量类型相同。\n??运算符返回布尔值，如：variable??，如果变量存在，返回true，否则返回false。\n\nfreemarker 的内建函数 contains 的使用\nfreemarker 的内建函数 contains 的使用 关键字: freemarker contains\nfreemarker 的内建函数 contains 的使用:\n<#if employee.departments?contains(department)>checked=\"checked\"</#if> 其中departments是一个集合，而department是departments集合里的一个元素。contains函数可以判断出，元素 department是否存在于集合departments里，最终返回一个Booleancontains是freemarker的内建函数，即自带的 。\nFreeMarker 的内建函数有：\nchunk,  is_date,  last,  root,  j_string,  round,  contains,  is_hash,  long,  float,  ends_with,  namespace,  matches,  time,  values,  seq_last_index_of,  uncap_first,  byte,  substring,  is_transform,  web_safe,  groups,  seq_contains,  is_macro,  index_of,  word_list,  int,  is_method,  eval,  parent,  xml,  number,  capitalize,  if_exists,  rtf,  node_type,  double,  is_directive,  url,  size,  default,  floor,  ceiling, is_boolean,  split,  node_name,  is_enumerable,  seq_index_of,  is_sequence,  sort,  is_node,\nsort_by,  left_pad,  cap_first,  interpret,  children,  node_namespace,  chop_linebreak, date,  short,  last_index_of,  is_collection,  ancestors,  length,  trim,  datetime, is_string,  reverse,  c,  keys,  upper_case,  js_string,  has_content,  right_pad,  replace,  is_hash_ex,  new,  is_number,  lower_case,  is_indexable,  string,  exists,  html,  first\n\n\n","slug":"freeMarker/FreeMarker-基础知识-表达式-引用","published":1,"updated":"2017-03-17T08:01:42.271Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taadf001dr8sy5lzhxo5q","content":"<p>FreeMarker 基础知识 表达式(引用)<br>表达式是FreeMarker的核心功能，FreeMarker中的插值支持多种表达式。<br><a id=\"more\"></a></p>\n<h2 id=\"一、直接指定值\"><a href=\"#一、直接指定值\" class=\"headerlink\" title=\"一、直接指定值\"></a>一、直接指定值</h2><p>直接指定值可以是字符串、数值、布尔值、集合及Map对象。</p>\n<ol>\n<li>字符串<br>直接指定字符串值使用单引号或双引号限定。字符串中可以使用转义字符”\\”。如果字符串内有大量的特殊字符，则可以在引号的前面加上一个字母r，则字符串内的所有字符都将直接输出。</li>\n<li>数值<br>数值可以直接输入，不需要引号。FreeMarker不支持科学计数法。</li>\n<li>布尔值<br>直接使用true或false，不使用引号。</li>\n<li>集合<br>集合用中括号包括，集合元素之间用逗号分隔。<br>使用数字范围也可以表示一个数字集合，如1..5等同于集合[1, 2, 3, 4, 5]；同样也可以用5..1来表示[5, 4, 3, 2, 1]。</li>\n<li>Map对象<br>Map对象使用花括号包括，Map中的key-value对之间用冒号分隔，多组key-value对之间用逗号分隔。<br>注意：Map对象的key和value都是表达式，但key必须是字符串。<h2 id=\"二、输出变量值\"><a href=\"#二、输出变量值\" class=\"headerlink\" title=\"二、输出变量值\"></a>二、输出变量值</h2>FreeMarker的表达式输出变量时，这些变量可以是顶层变量，也可以是Map对象的变量，还可以是集合中的变量，并可以使用点（.）语法来访问Java对象的属性。</li>\n<li>顶层变量<br>所谓顶层变量就是直接放在数据模型中的值。输出时直接用${variableName}即可。</li>\n<li>输出集合元素<br>可以根据集合元素的索引来输出集合元素，索引用中括号包括。如： 输出[“1”， “2”， “3”]这个名为number的集合，可以用${number[0]}来输出第一个数字。<br>FreeMarker还支持用number[1..2]来表示原集合的子集合[“2”， “3”]。</li>\n<li>输出Map元素<br>对于JavaBean实例，FreeMarker一样把它看作属性为key，属性值为value的Map对象。<br>输出Map对象时，可以使用点语法或中括号语法，如下面的几种写法的效果是一样的：<pre><code>book.author.name\nbook.author[&quot;name&quot;]\nbook[&quot;author&quot;].name\nbook[&quot;author&quot;][&quot;name&quot;]\n</code></pre>使用点语法时，变量名字有和顶层变量一样的限制，但中括号语法没有任何限制。<h2 id=\"三、字符串操作\"><a href=\"#三、字符串操作\" class=\"headerlink\" title=\"三、字符串操作\"></a>三、字符串操作</h2></li>\n<li>字符串连接<br>字符串连接有两种语法：<br>（1） 使用${..}或#{..}在字符串常量内插入表达式的值；<br>(2)  直接使用连接运算符“+”连接字符串。<br>如，下面两种写法等效：<pre><code>${&quot;Hello, ${user}&quot;}\n${&quot;Hello, &quot; + user + &quot;!&quot;}\n</code></pre>有一点需要注意： ${..}只能用于文本部分作为插值输出，而不能用于比较等其他用途，如：<pre><code>&lt;#if ${isBig}&gt;Wow!&lt;/#if&gt;\n&lt;#if &quot;${isBig}&quot;&gt;Wow!&lt;/#if&gt;\n</code></pre>应该写成：<pre><code>&lt;#if isBig&gt;Wow!&lt;/#if&gt;\n</code></pre></li>\n<li>截取子串<br>截取子串可以根据字符串的索引来进行，如果指定一个索引值，则取得字符串该索引处的字符；如果指定两个索引值，则截取两个索引中间的字符串子串。如：<pre><code>&lt;#assign number=&quot;01234&quot;&gt;\n${number[0]} &lt;#-- 输出字符0 --&gt;\n${number[0..3]} &lt;#-- 输出子串“0123” --&gt;四、集合连接操作\n</code></pre>   连接集合的运算符为“+”<h2 id=\"五、Map连接操作\"><a href=\"#五、Map连接操作\" class=\"headerlink\" title=\"五、Map连接操作\"></a>五、Map连接操作</h2>Map连接操作的运算符为“+”<h2 id=\"六、算术运算符\"><a href=\"#六、算术运算符\" class=\"headerlink\" title=\"六、算术运算符\"></a>六、算术运算符</h2>FreeMarker表达式中支持“+”、“－”、“*”、“/”、“%”运算符。<h2 id=\"七、比较运算符\"><a href=\"#七、比较运算符\" class=\"headerlink\" title=\"七、比较运算符\"></a>七、比较运算符</h2>表达式中支持的比较运算符有如下几种：</li>\n<li>=（或者==）： 判断两个值是否相等；</li>\n<li>!=： 判断两个值是否不相等；<br>注： =和!=可以用作字符串、数值和日期的比较，但两边的数据类型必须相同。而且FreeMarker的比较是精确比较，不会忽略大小写及空格。</li>\n<li><blockquote>\n<p>（或者gt）： 大于</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>=（或者gte）： 大于等于</p>\n</blockquote>\n</li>\n<li>&lt;（或者lt）： 小于</li>\n<li>&lt;=（或者lte）： 小于等于<br>注： 上面这些比较运算符可以用于数字和日期，但不能用于字符串。大部分时候，使用gt比&gt;有更好的效果，因为FreeMarker会把&gt;解释成标签的结束字符。可以使用括号来避免这种情况，如：&lt;#if (x&gt;y)&gt;。<h2 id=\"八、逻辑运算符\"><a href=\"#八、逻辑运算符\" class=\"headerlink\" title=\"八、逻辑运算符\"></a>八、逻辑运算符</h2></li>\n<li>&amp;&amp;： 逻辑与；</li>\n<li>||： 逻辑或；</li>\n<li>!： 逻辑非<br>逻辑运算符只能用于布尔值。<h2 id=\"九、内建函数\"><a href=\"#九、内建函数\" class=\"headerlink\" title=\"九、内建函数\"></a>九、内建函数</h2>FreeMarker提供了一些内建函数来转换输出，可以在任何变量后紧跟?，?后紧跟内建函数，就可以通过内建函数来转换输出变量。字符串相关常用的内建函数：</li>\n<li>html： 对字符串进行HTML编码；</li>\n<li>cap_first： 使字符串第一个字母大写；</li>\n<li>lower_case： 将字符串转成小写；</li>\n<li>upper_case： 将字符串转成大写；集合相关常用的内建函数：</li>\n<li>size： 获得集合中元素的个数；数字值相关常用的内建函数：</li>\n<li>int： 取得数字的整数部分。十、空值处理运算符<br>FreeMarker的变量必须赋值，否则就会抛出异常。而对于FreeMarker来说，null值和不存在的变量是完全一样的，因为FreeMarker无法理解null值。<br>FreeMarker提供两个运算符来避免空值：</li>\n<li>!： 指定缺失变量的默认值；</li>\n<li>??：判断变量是否存在。<br>!运算符有两种用法：variable!或variable!defaultValue。第一种用法不给变量指定默认值，表明默认值是空字符串、长度为0的集合、或长度为0的Map对象。<br>使用!运算符指定默认值并不要求默认值的类型和变量类型相同。<br>??运算符返回布尔值，如：variable??，如果变量存在，返回true，否则返回false。</li>\n</ol>\n<p>freemarker 的内建函数 contains 的使用<br>freemarker 的内建函数 contains 的使用 关键字: freemarker contains<br>freemarker 的内建函数 contains 的使用:<br>&lt;#if employee.departments?contains(department)&gt;checked=”checked”&lt;/#if&gt; 其中departments是一个集合，而department是departments集合里的一个元素。contains函数可以判断出，元素 department是否存在于集合departments里，最终返回一个Booleancontains是freemarker的内建函数，即自带的 。<br>FreeMarker 的内建函数有：<br>chunk,  is_date,  last,  root,  j_string,  round,  contains,  is_hash,  long,  float,  ends_with,  namespace,  matches,  time,  values,  seq_last_index_of,  uncap_first,  byte,  substring,  is_transform,  web_safe,  groups,  seq_contains,  is_macro,  index_of,  word_list,  int,  is_method,  eval,  parent,  xml,  number,  capitalize,  if_exists,  rtf,  node_type,  double,  is_directive,  url,  size,  default,  floor,  ceiling, is_boolean,  split,  node_name,  is_enumerable,  seq_index_of,  is_sequence,  sort,  is_node,<br>sort_by,  left_pad,  cap_first,  interpret,  children,  node_namespace,  chop_linebreak, date,  short,  last_index_of,  is_collection,  ancestors,  length,  trim,  datetime, is_string,  reverse,  c,  keys,  upper_case,  js_string,  has_content,  right_pad,  replace,  is_hash_ex,  new,  is_number,  lower_case,  is_indexable,  string,  exists,  html,  first</p>\n","excerpt":"<p>FreeMarker 基础知识 表达式(引用)<br>表达式是FreeMarker的核心功能，FreeMarker中的插值支持多种表达式。<br></p>","more":"<p></p>\n<h2 id=\"一、直接指定值\"><a href=\"#一、直接指定值\" class=\"headerlink\" title=\"一、直接指定值\"></a>一、直接指定值</h2><p>直接指定值可以是字符串、数值、布尔值、集合及Map对象。</p>\n<ol>\n<li>字符串<br>直接指定字符串值使用单引号或双引号限定。字符串中可以使用转义字符”\\”。如果字符串内有大量的特殊字符，则可以在引号的前面加上一个字母r，则字符串内的所有字符都将直接输出。</li>\n<li>数值<br>数值可以直接输入，不需要引号。FreeMarker不支持科学计数法。</li>\n<li>布尔值<br>直接使用true或false，不使用引号。</li>\n<li>集合<br>集合用中括号包括，集合元素之间用逗号分隔。<br>使用数字范围也可以表示一个数字集合，如1..5等同于集合[1, 2, 3, 4, 5]；同样也可以用5..1来表示[5, 4, 3, 2, 1]。</li>\n<li>Map对象<br>Map对象使用花括号包括，Map中的key-value对之间用冒号分隔，多组key-value对之间用逗号分隔。<br>注意：Map对象的key和value都是表达式，但key必须是字符串。<h2 id=\"二、输出变量值\"><a href=\"#二、输出变量值\" class=\"headerlink\" title=\"二、输出变量值\"></a>二、输出变量值</h2>FreeMarker的表达式输出变量时，这些变量可以是顶层变量，也可以是Map对象的变量，还可以是集合中的变量，并可以使用点（.）语法来访问Java对象的属性。</li>\n<li>顶层变量<br>所谓顶层变量就是直接放在数据模型中的值。输出时直接用${variableName}即可。</li>\n<li>输出集合元素<br>可以根据集合元素的索引来输出集合元素，索引用中括号包括。如： 输出[“1”， “2”， “3”]这个名为number的集合，可以用${number[0]}来输出第一个数字。<br>FreeMarker还支持用number[1..2]来表示原集合的子集合[“2”， “3”]。</li>\n<li>输出Map元素<br>对于JavaBean实例，FreeMarker一样把它看作属性为key，属性值为value的Map对象。<br>输出Map对象时，可以使用点语法或中括号语法，如下面的几种写法的效果是一样的：<pre><code>book.author.name\nbook.author[&quot;name&quot;]\nbook[&quot;author&quot;].name\nbook[&quot;author&quot;][&quot;name&quot;]\n</code></pre>使用点语法时，变量名字有和顶层变量一样的限制，但中括号语法没有任何限制。<h2 id=\"三、字符串操作\"><a href=\"#三、字符串操作\" class=\"headerlink\" title=\"三、字符串操作\"></a>三、字符串操作</h2></li>\n<li>字符串连接<br>字符串连接有两种语法：<br>（1） 使用${..}或#{..}在字符串常量内插入表达式的值；<br>(2)  直接使用连接运算符“+”连接字符串。<br>如，下面两种写法等效：<pre><code>${&quot;Hello, ${user}&quot;}\n${&quot;Hello, &quot; + user + &quot;!&quot;}\n</code></pre>有一点需要注意： ${..}只能用于文本部分作为插值输出，而不能用于比较等其他用途，如：<pre><code>&lt;#if ${isBig}&gt;Wow!&lt;/#if&gt;\n&lt;#if &quot;${isBig}&quot;&gt;Wow!&lt;/#if&gt;\n</code></pre>应该写成：<pre><code>&lt;#if isBig&gt;Wow!&lt;/#if&gt;\n</code></pre></li>\n<li>截取子串<br>截取子串可以根据字符串的索引来进行，如果指定一个索引值，则取得字符串该索引处的字符；如果指定两个索引值，则截取两个索引中间的字符串子串。如：<pre><code>&lt;#assign number=&quot;01234&quot;&gt;\n${number[0]} &lt;#-- 输出字符0 --&gt;\n${number[0..3]} &lt;#-- 输出子串“0123” --&gt;四、集合连接操作\n</code></pre>   连接集合的运算符为“+”<h2 id=\"五、Map连接操作\"><a href=\"#五、Map连接操作\" class=\"headerlink\" title=\"五、Map连接操作\"></a>五、Map连接操作</h2>Map连接操作的运算符为“+”<h2 id=\"六、算术运算符\"><a href=\"#六、算术运算符\" class=\"headerlink\" title=\"六、算术运算符\"></a>六、算术运算符</h2>FreeMarker表达式中支持“+”、“－”、“*”、“/”、“%”运算符。<h2 id=\"七、比较运算符\"><a href=\"#七、比较运算符\" class=\"headerlink\" title=\"七、比较运算符\"></a>七、比较运算符</h2>表达式中支持的比较运算符有如下几种：</li>\n<li>=（或者==）： 判断两个值是否相等；</li>\n<li>!=： 判断两个值是否不相等；<br>注： =和!=可以用作字符串、数值和日期的比较，但两边的数据类型必须相同。而且FreeMarker的比较是精确比较，不会忽略大小写及空格。</li>\n<li><blockquote>\n<p>（或者gt）： 大于</p>\n</blockquote>\n</li>\n<li><blockquote>\n<p>=（或者gte）： 大于等于</p>\n</blockquote>\n</li>\n<li>&lt;（或者lt）： 小于</li>\n<li>&lt;=（或者lte）： 小于等于<br>注： 上面这些比较运算符可以用于数字和日期，但不能用于字符串。大部分时候，使用gt比&gt;有更好的效果，因为FreeMarker会把&gt;解释成标签的结束字符。可以使用括号来避免这种情况，如：&lt;#if (x&gt;y)&gt;。<h2 id=\"八、逻辑运算符\"><a href=\"#八、逻辑运算符\" class=\"headerlink\" title=\"八、逻辑运算符\"></a>八、逻辑运算符</h2></li>\n<li>&amp;&amp;： 逻辑与；</li>\n<li>||： 逻辑或；</li>\n<li>!： 逻辑非<br>逻辑运算符只能用于布尔值。<h2 id=\"九、内建函数\"><a href=\"#九、内建函数\" class=\"headerlink\" title=\"九、内建函数\"></a>九、内建函数</h2>FreeMarker提供了一些内建函数来转换输出，可以在任何变量后紧跟?，?后紧跟内建函数，就可以通过内建函数来转换输出变量。字符串相关常用的内建函数：</li>\n<li>html： 对字符串进行HTML编码；</li>\n<li>cap_first： 使字符串第一个字母大写；</li>\n<li>lower_case： 将字符串转成小写；</li>\n<li>upper_case： 将字符串转成大写；集合相关常用的内建函数：</li>\n<li>size： 获得集合中元素的个数；数字值相关常用的内建函数：</li>\n<li>int： 取得数字的整数部分。十、空值处理运算符<br>FreeMarker的变量必须赋值，否则就会抛出异常。而对于FreeMarker来说，null值和不存在的变量是完全一样的，因为FreeMarker无法理解null值。<br>FreeMarker提供两个运算符来避免空值：</li>\n<li>!： 指定缺失变量的默认值；</li>\n<li>??：判断变量是否存在。<br>!运算符有两种用法：variable!或variable!defaultValue。第一种用法不给变量指定默认值，表明默认值是空字符串、长度为0的集合、或长度为0的Map对象。<br>使用!运算符指定默认值并不要求默认值的类型和变量类型相同。<br>??运算符返回布尔值，如：variable??，如果变量存在，返回true，否则返回false。</li>\n</ol>\n<p>freemarker 的内建函数 contains 的使用<br>freemarker 的内建函数 contains 的使用 关键字: freemarker contains<br>freemarker 的内建函数 contains 的使用:<br>&lt;#if employee.departments?contains(department)&gt;checked=”checked”&lt;/#if&gt; 其中departments是一个集合，而department是departments集合里的一个元素。contains函数可以判断出，元素 department是否存在于集合departments里，最终返回一个Booleancontains是freemarker的内建函数，即自带的 。<br>FreeMarker 的内建函数有：<br>chunk,  is_date,  last,  root,  j_string,  round,  contains,  is_hash,  long,  float,  ends_with,  namespace,  matches,  time,  values,  seq_last_index_of,  uncap_first,  byte,  substring,  is_transform,  web_safe,  groups,  seq_contains,  is_macro,  index_of,  word_list,  int,  is_method,  eval,  parent,  xml,  number,  capitalize,  if_exists,  rtf,  node_type,  double,  is_directive,  url,  size,  default,  floor,  ceiling, is_boolean,  split,  node_name,  is_enumerable,  seq_index_of,  is_sequence,  sort,  is_node,<br>sort_by,  left_pad,  cap_first,  interpret,  children,  node_namespace,  chop_linebreak, date,  short,  last_index_of,  is_collection,  ancestors,  length,  trim,  datetime, is_string,  reverse,  c,  keys,  upper_case,  js_string,  has_content,  right_pad,  replace,  is_hash_ex,  new,  is_number,  lower_case,  is_indexable,  string,  exists,  html,  first</p>"},{"title":"FreeMarker对null值得处理","date":"2017-03-17T06:37:24.000Z","_content":"## 判断是否存在,通过exists关键字或者\"??\"运算符。都将返回一个布尔值\nuser.name?exists\nuser.name??\n<!--more-->\n```shell\n<#if user.name?exists>\n //TO DO\n</#if>\n\n<#if user.age??>\n //TO DO\n</#if>\n```\n\n## 忽略null值\n假设前提：user.name为null\n${user.name}，异常\n${user.name!},显示空白\n${user.name!'vakin'}，若user.name不为空则显示本身的值，否则显示vakin\n${user.name?default('vakin')}，同上\n${user.name???string(user.name,'vakin')},同上\n\n来源： [http://www.cnblogs.com/modou/articles/2577450.html](http://www.cnblogs.com/modou/articles/2577450.html)","source":"_posts/freeMarker/FreeMarker对null值得处理.md","raw":"---\ntitle: FreeMarker对null值得处理\ndate: 2017-03-17 14:37:24\ncategory: freeMarker\ntags: [freeMarker]\n---\n## 判断是否存在,通过exists关键字或者\"??\"运算符。都将返回一个布尔值\nuser.name?exists\nuser.name??\n<!--more-->\n```shell\n<#if user.name?exists>\n //TO DO\n</#if>\n\n<#if user.age??>\n //TO DO\n</#if>\n```\n\n## 忽略null值\n假设前提：user.name为null\n${user.name}，异常\n${user.name!},显示空白\n${user.name!'vakin'}，若user.name不为空则显示本身的值，否则显示vakin\n${user.name?default('vakin')}，同上\n${user.name???string(user.name,'vakin')},同上\n\n来源： [http://www.cnblogs.com/modou/articles/2577450.html](http://www.cnblogs.com/modou/articles/2577450.html)","slug":"freeMarker/FreeMarker对null值得处理","published":1,"updated":"2017-03-17T06:40:06.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taadh001er8sy7cnx3obv","content":"<h2 id=\"判断是否存在-通过exists关键字或者”-”运算符。都将返回一个布尔值\"><a href=\"#判断是否存在-通过exists关键字或者”-”运算符。都将返回一个布尔值\" class=\"headerlink\" title=\"判断是否存在,通过exists关键字或者”??”运算符。都将返回一个布尔值\"></a>判断是否存在,通过exists关键字或者”??”运算符。都将返回一个布尔值</h2><p>user.name?exists<br>user.name??<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#if user.name?exists&gt;</div><div class=\"line\"> //TO DO</div><div class=\"line\">&lt;/#if&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;#if user.age??&gt;</div><div class=\"line\"> //TO DO</div><div class=\"line\">&lt;/#if&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"忽略null值\"><a href=\"#忽略null值\" class=\"headerlink\" title=\"忽略null值\"></a>忽略null值</h2><p>假设前提：user.name为null<br>${user.name}，异常<br>${user.name!},显示空白<br>${user.name!’vakin’}，若user.name不为空则显示本身的值，否则显示vakin<br>${user.name?default(‘vakin’)}，同上<br>${user.name???string(user.name,’vakin’)},同上</p>\n<p>来源： <a href=\"http://www.cnblogs.com/modou/articles/2577450.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/modou/articles/2577450.html</a></p>\n","excerpt":"<h2 id=\"判断是否存在-通过exists关键字或者”-”运算符。都将返回一个布尔值\"><a href=\"#判断是否存在-通过exists关键字或者”-”运算符。都将返回一个布尔值\" class=\"headerlink\" title=\"判断是否存在,通过exists关键字或者”??”运算符。都将返回一个布尔值\"></a>判断是否存在,通过exists关键字或者”??”运算符。都将返回一个布尔值</h2><p>user.name?exists<br>user.name??<br></p>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#if user.name?exists&gt;</div><div class=\"line\"> //TO DO</div><div class=\"line\">&lt;/#if&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;#if user.age??&gt;</div><div class=\"line\"> //TO DO</div><div class=\"line\">&lt;/#if&gt;</div></pre></td></tr></table></figure><p></p>\n<h2 id=\"忽略null值\"><a href=\"#忽略null值\" class=\"headerlink\" title=\"忽略null值\"></a>忽略null值</h2><p>假设前提：user.name为null<br>${user.name}，异常<br>${user.name!},显示空白<br>${user.name!’vakin’}，若user.name不为空则显示本身的值，否则显示vakin<br>${user.name?default(‘vakin’)}，同上<br>${user.name???string(user.name,’vakin’)},同上</p>\n<p>来源： <a href=\"http://www.cnblogs.com/modou/articles/2577450.html\">http://www.cnblogs.com/modou/articles/2577450.html</a></p>"},{"title":"Freemarker中对List进行排序","date":"2017-03-17T06:23:07.000Z","_content":"# Freemarker中对List进行排序\n通常我们的排序操作都是通过DAO层来实现的，如果我们想随时更改我们的排序，那么就必须修改我们的DAO层代码，\n确实不方便。但Freemarker为我们提供了这样的排序方法，解决了这个问题。\n<!--more-->\n## sort升序排序函数\nsort对序列(sequence)进行排序，要求序列中的变量必须是：字符串（按首字母排序）,数字，日期值。\n```shell\n<#list list?sort as l>…</#list>\n```\n## sort_by函数\nsort_by有一个参数,该参数用于指定想要排序的子变量，排序是按照变量对应的值进行排序,如：\n```shell\n<#list userList?sort_by(“age”) as user>…</#list>\n```\nage是User对象的属性，排序是按age的值进行的。\n## reverse降序排序函数\n``` shell\n<#list list? reverse as l>…</#list>\n```\nreverse使用同sort相同。reverse还可以同sort_by一起使用\n如：想让用户按年龄降序排序，那么可以这个样写\n```shell\n<#list userList?sort_by(“age”)?reverse as user>…</#list>\n```\n\"_index\"是FreeMarker中对于循环索引变量的命名约定。\n通过“迭代变量名_index”即可访问当前循环索引。\n类似的循环状态访问约定还有“迭代变量名_has_next”，可通过这个循环状态属性判断是否还有后继循环。\n因很多时候要用到“序号”、“索引”之类的东西，而FreeMarker刚好自己带有，但很多人还并不知道它的妙用。\n因此就从Spring开发指南摘录下来。这样可以避免另申请一个变量，然后每次循环体又对它+1了。不知道是否提到过这个。\n```shell\n<#list subDir as d>\n    <input type=\"checkbox\" name=\"ids\" value=\"file-${d_index}\"/>\n</#list>\n```","source":"_posts/freeMarker/Freemarker中对List进行排序.md","raw":"---\ntitle: Freemarker中对List进行排序\ndate: 2017-03-17 14:23:07\ncategory: freeMarker\ntags: [freeMarker]\n---\n# Freemarker中对List进行排序\n通常我们的排序操作都是通过DAO层来实现的，如果我们想随时更改我们的排序，那么就必须修改我们的DAO层代码，\n确实不方便。但Freemarker为我们提供了这样的排序方法，解决了这个问题。\n<!--more-->\n## sort升序排序函数\nsort对序列(sequence)进行排序，要求序列中的变量必须是：字符串（按首字母排序）,数字，日期值。\n```shell\n<#list list?sort as l>…</#list>\n```\n## sort_by函数\nsort_by有一个参数,该参数用于指定想要排序的子变量，排序是按照变量对应的值进行排序,如：\n```shell\n<#list userList?sort_by(“age”) as user>…</#list>\n```\nage是User对象的属性，排序是按age的值进行的。\n## reverse降序排序函数\n``` shell\n<#list list? reverse as l>…</#list>\n```\nreverse使用同sort相同。reverse还可以同sort_by一起使用\n如：想让用户按年龄降序排序，那么可以这个样写\n```shell\n<#list userList?sort_by(“age”)?reverse as user>…</#list>\n```\n\"_index\"是FreeMarker中对于循环索引变量的命名约定。\n通过“迭代变量名_index”即可访问当前循环索引。\n类似的循环状态访问约定还有“迭代变量名_has_next”，可通过这个循环状态属性判断是否还有后继循环。\n因很多时候要用到“序号”、“索引”之类的东西，而FreeMarker刚好自己带有，但很多人还并不知道它的妙用。\n因此就从Spring开发指南摘录下来。这样可以避免另申请一个变量，然后每次循环体又对它+1了。不知道是否提到过这个。\n```shell\n<#list subDir as d>\n    <input type=\"checkbox\" name=\"ids\" value=\"file-${d_index}\"/>\n</#list>\n```","slug":"freeMarker/Freemarker中对List进行排序","published":1,"updated":"2017-03-17T06:27:48.573Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taadi001hr8syybzbpfv9","content":"<h1 id=\"Freemarker中对List进行排序\"><a href=\"#Freemarker中对List进行排序\" class=\"headerlink\" title=\"Freemarker中对List进行排序\"></a>Freemarker中对List进行排序</h1><p>通常我们的排序操作都是通过DAO层来实现的，如果我们想随时更改我们的排序，那么就必须修改我们的DAO层代码，<br>确实不方便。但Freemarker为我们提供了这样的排序方法，解决了这个问题。<br><a id=\"more\"></a></p>\n<h2 id=\"sort升序排序函数\"><a href=\"#sort升序排序函数\" class=\"headerlink\" title=\"sort升序排序函数\"></a>sort升序排序函数</h2><p>sort对序列(sequence)进行排序，要求序列中的变量必须是：字符串（按首字母排序）,数字，日期值。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list list?sort as l&gt;…&lt;/#list&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"sort-by函数\"><a href=\"#sort-by函数\" class=\"headerlink\" title=\"sort_by函数\"></a>sort_by函数</h2><p>sort_by有一个参数,该参数用于指定想要排序的子变量，排序是按照变量对应的值进行排序,如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list userList?sort_by(“age”) as user&gt;…&lt;/#list&gt;</div></pre></td></tr></table></figure></p>\n<p>age是User对象的属性，排序是按age的值进行的。</p>\n<h2 id=\"reverse降序排序函数\"><a href=\"#reverse降序排序函数\" class=\"headerlink\" title=\"reverse降序排序函数\"></a>reverse降序排序函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list list? reverse as l&gt;…&lt;/#list&gt;</div></pre></td></tr></table></figure>\n<p>reverse使用同sort相同。reverse还可以同sort_by一起使用<br>如：想让用户按年龄降序排序，那么可以这个样写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list userList?sort_by(“age”)?reverse as user&gt;…&lt;/#list&gt;</div></pre></td></tr></table></figure></p>\n<p>“_index”是FreeMarker中对于循环索引变量的命名约定。<br>通过“迭代变量名_index”即可访问当前循环索引。<br>类似的循环状态访问约定还有“迭代变量名_has_next”，可通过这个循环状态属性判断是否还有后继循环。<br>因很多时候要用到“序号”、“索引”之类的东西，而FreeMarker刚好自己带有，但很多人还并不知道它的妙用。<br>因此就从Spring开发指南摘录下来。这样可以避免另申请一个变量，然后每次循环体又对它+1了。不知道是否提到过这个。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list subDir as d&gt;</div><div class=\"line\">    &lt;input type=&quot;checkbox&quot; name=&quot;ids&quot; value=&quot;file-$&#123;d_index&#125;&quot;/&gt;</div><div class=\"line\">&lt;/#list&gt;</div></pre></td></tr></table></figure></p>\n","excerpt":"<h1 id=\"Freemarker中对List进行排序\"><a href=\"#Freemarker中对List进行排序\" class=\"headerlink\" title=\"Freemarker中对List进行排序\"></a>Freemarker中对List进行排序</h1><p>通常我们的排序操作都是通过DAO层来实现的，如果我们想随时更改我们的排序，那么就必须修改我们的DAO层代码，<br>确实不方便。但Freemarker为我们提供了这样的排序方法，解决了这个问题。<br></p>","more":"<p></p>\n<h2 id=\"sort升序排序函数\"><a href=\"#sort升序排序函数\" class=\"headerlink\" title=\"sort升序排序函数\"></a>sort升序排序函数</h2><p>sort对序列(sequence)进行排序，要求序列中的变量必须是：字符串（按首字母排序）,数字，日期值。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list list?sort as l&gt;…&lt;/#list&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"sort-by函数\"><a href=\"#sort-by函数\" class=\"headerlink\" title=\"sort_by函数\"></a>sort_by函数</h2><p>sort_by有一个参数,该参数用于指定想要排序的子变量，排序是按照变量对应的值进行排序,如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list userList?sort_by(“age”) as user&gt;…&lt;/#list&gt;</div></pre></td></tr></table></figure></p>\n<p>age是User对象的属性，排序是按age的值进行的。</p>\n<h2 id=\"reverse降序排序函数\"><a href=\"#reverse降序排序函数\" class=\"headerlink\" title=\"reverse降序排序函数\"></a>reverse降序排序函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list list? reverse as l&gt;…&lt;/#list&gt;</div></pre></td></tr></table></figure>\n<p>reverse使用同sort相同。reverse还可以同sort_by一起使用<br>如：想让用户按年龄降序排序，那么可以这个样写<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list userList?sort_by(“age”)?reverse as user&gt;…&lt;/#list&gt;</div></pre></td></tr></table></figure></p>\n<p>“_index”是FreeMarker中对于循环索引变量的命名约定。<br>通过“迭代变量名_index”即可访问当前循环索引。<br>类似的循环状态访问约定还有“迭代变量名_has_next”，可通过这个循环状态属性判断是否还有后继循环。<br>因很多时候要用到“序号”、“索引”之类的东西，而FreeMarker刚好自己带有，但很多人还并不知道它的妙用。<br>因此就从Spring开发指南摘录下来。这样可以避免另申请一个变量，然后每次循环体又对它+1了。不知道是否提到过这个。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;#list subDir as d&gt;</div><div class=\"line\">    &lt;input type=&quot;checkbox&quot; name=&quot;ids&quot; value=&quot;file-$&#123;d_index&#125;&quot;/&gt;</div><div class=\"line\">&lt;/#list&gt;</div></pre></td></tr></table></figure></p>"},{"title":"file控件的onchang事件只触发一次","date":"2017-03-12T12:33:42.000Z","_content":"在html中，一个file控件，第一次选中一张图片，会触发该控件的onchang事件。\n如果继续选中同一张图片，则不会触发onchang事件，所以我在另一个js方法中（删除方法）\n对file控件的value置为空。测试通过。\n","source":"_posts/javascript/file控件的onchang事件只触发一次.md","raw":"---\ntitle: file控件的onchang事件只触发一次\ndate: 2017-03-12 20:33:42\ncategories: javascript\ntags:\n - javascript\n - onchang\n---\n在html中，一个file控件，第一次选中一张图片，会触发该控件的onchang事件。\n如果继续选中同一张图片，则不会触发onchang事件，所以我在另一个js方法中（删除方法）\n对file控件的value置为空。测试通过。\n","slug":"javascript/file控件的onchang事件只触发一次","published":1,"updated":"2017-03-12T15:40:52.134Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taado001kr8sygz0jlw52","content":"<p>在html中，一个file控件，第一次选中一张图片，会触发该控件的onchang事件。<br>如果继续选中同一张图片，则不会触发onchang事件，所以我在另一个js方法中（删除方法）<br>对file控件的value置为空。测试通过。</p>\n","excerpt":"","more":"<p>在html中，一个file控件，第一次选中一张图片，会触发该控件的onchang事件。<br>如果继续选中同一张图片，则不会触发onchang事件，所以我在另一个js方法中（删除方法）<br>对file控件的value置为空。测试通过。</p>\n"},{"title":"jQuery中的.bind()、.live()和.delegate()之间区别分析","date":"2017-03-12T15:49:49.000Z","_content":"\n\n","source":"_posts/javascript/jQuery中的-bind-、-live-和-delegate-之间区别分析.md","raw":"---\ntitle: jQuery中的.bind()、.live()和.delegate()之间区别分析\ndate: 2017-03-12 23:49:49\ncategories: javascript\ntags: [javascript,jQuery,bind,live,delegate]\n---\n\n\n","slug":"javascript/jQuery中的-bind-、-live-和-delegate-之间区别分析","published":1,"updated":"2017-03-12T16:12:32.534Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taadq001or8sy4plv090q","content":"","excerpt":"","more":""},{"title":"判断当前窗口是不是最上层窗口","date":"2017-03-12T15:52:18.000Z","_content":"如果当前窗口不是最上层窗口（比如是在Iframe中），那么就把自己变为最上层窗口。这可以防止别的网站把你自己的网站放在他的Iframe中，从而损害你的利益（因为会误导浏览者）\n```html\nif (window != top)\n    top.location.href = location.href;\n```\n","source":"_posts/javascript/判断当前窗口是不是最上层窗口.md","raw":"---\ntitle: 判断当前窗口是不是最上层窗口\ndate: 2017-03-12 23:52:18\ncategories: javascript\ntags: [javascript,iframe]\n---\n如果当前窗口不是最上层窗口（比如是在Iframe中），那么就把自己变为最上层窗口。这可以防止别的网站把你自己的网站放在他的Iframe中，从而损害你的利益（因为会误导浏览者）\n```html\nif (window != top)\n    top.location.href = location.href;\n```\n","slug":"javascript/判断当前窗口是不是最上层窗口","published":1,"updated":"2017-03-12T15:53:39.804Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taads001qr8syetoow7of","content":"<p>如果当前窗口不是最上层窗口（比如是在Iframe中），那么就把自己变为最上层窗口。这可以防止别的网站把你自己的网站放在他的Iframe中，从而损害你的利益（因为会误导浏览者）<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (window != top)</div><div class=\"line\">    top.location.href = location.href;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>如果当前窗口不是最上层窗口（比如是在Iframe中），那么就把自己变为最上层窗口。这可以防止别的网站把你自己的网站放在他的Iframe中，从而损害你的利益（因为会误导浏览者）<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">if (window != top)</div><div class=\"line\">    top.location.href = location.href;</div></pre></td></tr></table></figure></p>\n"},{"title":"HashMap,LinkHashMap,TreeMap的区别","date":"2017-03-17T02:35:47.000Z","_content":"Map主要用于存储健值对，根据键得到值，因此不允许键重复(重复了覆盖了),但允许值重复。\nHashmap 是一个最常用的Map,它根据键的HashCode 值存储数据,根据键可以直接获取它的值，具有很快的访问速度，遍历时，取得数据的顺序是完全随机的。HashMap最多只允许一条记录的键为Null;允许多条记录的值为 Null;HashMap不支持线程的同步，即任一时刻可以有多个线程同时写HashMap;可能会导致数据的不一致。如果需要同步，可以用 Collections的synchronizedMap方法使HashMap具有同步的能力，或者使用ConcurrentHashMap。\nHashtable与 HashMap类似,它继承自Dictionary类，不同的是:它不允许记录的键或者值为空;它支持线程的同步，即任一时刻只有一个线程能写Hashtable,因此也导致了 Hashtable在写入时会比较慢。\nLinkedHashMap保存了记录的插入顺序，在用Iterator遍历LinkedHashMap时，先得到的记录肯定是先插入的.也可以在构造时用带参数，按照应用次数排序。在遍历的时候会比HashMap慢，不过有种情况例外，当HashMap容量很大，实际数据较少时，遍历起来可能会比LinkedHashMap慢，因为LinkedHashMap的遍历速度只和实际数据有关，和容量无关，而HashMap的遍历速度和他的容量有关。\nTreeMap实现SortMap接口，能够把它保存的记录根据键排序,默认是按键值的升序排序，也可以指定排序的比较器，当用Iterator 遍历TreeMap时，得到的记录是排过序的。\n<!--more-->\n一般情况下，我们用的最多的是HashMap,HashMap里面存入的键值对在取出的时候是随机的,它根据键的HashCode值存储数据,根据键可以直接获取它的值，具有很快的访问速度。在Map 中插入、删除和定位元素，HashMap 是最好的选择。\nTreeMap取出来的是排序后的键值对。但如果您要按自然顺序或自定义顺序遍历键，那么TreeMap会更好。\nLinkedHashMap 是HashMap的一个子类，如果需要输出的顺序和输入的相同,那么用LinkedHashMap可以实现,它还可以按读取顺序来排列，像连接池中可以应用。\n\n1. HashSet是通过HashMap实现的,TreeSet是通过TreeMap实现的,只不过Set用的只是Map的key\n2. Map的key和Set都有一个共同的特性就是集合的唯一性.TreeMap更是多了一个排序的功能.\n3. hashCode和equal()是HashMap用的, 因为无需排序所以只需要关注定位和唯一性即可.\n   a. hashCode是用来计算hash值的,hash值是用来确定hash表索引的.\n   b. hash表中的一个索引处存放的是一张链表, 所以还要通过equal方法循环比较链上的每一个对象\n       才可以真正定位到键值对应的Entry.\n   c. put时,如果hash表中没定位到,就在链表前加一个Entry,如果定位到了,则更换Entry中的value,并返回旧value\n4. 由于TreeMap需要排序,所以需要一个Comparator为键值进行大小比较.当然也是用Comparator定位的.\n   a. Comparator可以在创建TreeMap时指定\n   b. 如果创建时没有确定,那么就会使用key.compareTo()方法,这就要求key必须实现Comparable接口.\n   c. TreeMap是使用Tree数据结构实现的,所以使用compare接口就可以完成定位了.\n\n\n注意：\n1、Collection没有get()方法来取得某个元素。只能通过iterator()遍历元素。\n2、Set和Collection拥有一模一样的接口。\n3、List，可以通过get()方法来一次取出一个元素。使用数字来选择一堆对象中的一个，get(0)...。(add/get)\n4、一般使用ArrayList。用LinkedList构造堆栈stack、队列queue。\n5、Map用 put(k,v) / get(k)，还可以使用containsKey()/containsValue()来检查其中是否含有某个key/value。\n      HashMap会利用对象的hashCode来快速找到key。\n hashing\n      哈希码就是将对象的信息经过一些转变形成一个独一无二的int值，这个值存储在一个array中。\n      我们都知道所有存储结构中，array查找速度是最快的。所以，可以加速查找。\n 发生碰撞时，让array指向多个values。即，数组每个位置上又生成一个梿表。\n6、Map中元素，可以将key序列、value序列单独抽取出来。\n使用keySet()抽取key序列，将map中的所有keys生成一个Set。\n使用values()抽取value序列，将map中的所有values生成一个Collection。\n为什么一个生成Set，一个生成Collection？那是因为，key总是独一无二的，value允许重复。\n\n来源:[http://blog.csdn.net/fg2006/article/details/6411200](http://blog.csdn.net/fg2006/article/details/6411200)","source":"_posts/java基础/HashMap-LinkHashMap-TreeMap的区别.md","raw":"---\ntitle: HashMap,LinkHashMap,TreeMap的区别\ndate: 2017-03-17 10:35:47\ncategory: java基础\ntags: [HashMap,LinkHashMap,TreeMap]\n---\nMap主要用于存储健值对，根据键得到值，因此不允许键重复(重复了覆盖了),但允许值重复。\nHashmap 是一个最常用的Map,它根据键的HashCode 值存储数据,根据键可以直接获取它的值，具有很快的访问速度，遍历时，取得数据的顺序是完全随机的。HashMap最多只允许一条记录的键为Null;允许多条记录的值为 Null;HashMap不支持线程的同步，即任一时刻可以有多个线程同时写HashMap;可能会导致数据的不一致。如果需要同步，可以用 Collections的synchronizedMap方法使HashMap具有同步的能力，或者使用ConcurrentHashMap。\nHashtable与 HashMap类似,它继承自Dictionary类，不同的是:它不允许记录的键或者值为空;它支持线程的同步，即任一时刻只有一个线程能写Hashtable,因此也导致了 Hashtable在写入时会比较慢。\nLinkedHashMap保存了记录的插入顺序，在用Iterator遍历LinkedHashMap时，先得到的记录肯定是先插入的.也可以在构造时用带参数，按照应用次数排序。在遍历的时候会比HashMap慢，不过有种情况例外，当HashMap容量很大，实际数据较少时，遍历起来可能会比LinkedHashMap慢，因为LinkedHashMap的遍历速度只和实际数据有关，和容量无关，而HashMap的遍历速度和他的容量有关。\nTreeMap实现SortMap接口，能够把它保存的记录根据键排序,默认是按键值的升序排序，也可以指定排序的比较器，当用Iterator 遍历TreeMap时，得到的记录是排过序的。\n<!--more-->\n一般情况下，我们用的最多的是HashMap,HashMap里面存入的键值对在取出的时候是随机的,它根据键的HashCode值存储数据,根据键可以直接获取它的值，具有很快的访问速度。在Map 中插入、删除和定位元素，HashMap 是最好的选择。\nTreeMap取出来的是排序后的键值对。但如果您要按自然顺序或自定义顺序遍历键，那么TreeMap会更好。\nLinkedHashMap 是HashMap的一个子类，如果需要输出的顺序和输入的相同,那么用LinkedHashMap可以实现,它还可以按读取顺序来排列，像连接池中可以应用。\n\n1. HashSet是通过HashMap实现的,TreeSet是通过TreeMap实现的,只不过Set用的只是Map的key\n2. Map的key和Set都有一个共同的特性就是集合的唯一性.TreeMap更是多了一个排序的功能.\n3. hashCode和equal()是HashMap用的, 因为无需排序所以只需要关注定位和唯一性即可.\n   a. hashCode是用来计算hash值的,hash值是用来确定hash表索引的.\n   b. hash表中的一个索引处存放的是一张链表, 所以还要通过equal方法循环比较链上的每一个对象\n       才可以真正定位到键值对应的Entry.\n   c. put时,如果hash表中没定位到,就在链表前加一个Entry,如果定位到了,则更换Entry中的value,并返回旧value\n4. 由于TreeMap需要排序,所以需要一个Comparator为键值进行大小比较.当然也是用Comparator定位的.\n   a. Comparator可以在创建TreeMap时指定\n   b. 如果创建时没有确定,那么就会使用key.compareTo()方法,这就要求key必须实现Comparable接口.\n   c. TreeMap是使用Tree数据结构实现的,所以使用compare接口就可以完成定位了.\n\n\n注意：\n1、Collection没有get()方法来取得某个元素。只能通过iterator()遍历元素。\n2、Set和Collection拥有一模一样的接口。\n3、List，可以通过get()方法来一次取出一个元素。使用数字来选择一堆对象中的一个，get(0)...。(add/get)\n4、一般使用ArrayList。用LinkedList构造堆栈stack、队列queue。\n5、Map用 put(k,v) / get(k)，还可以使用containsKey()/containsValue()来检查其中是否含有某个key/value。\n      HashMap会利用对象的hashCode来快速找到key。\n hashing\n      哈希码就是将对象的信息经过一些转变形成一个独一无二的int值，这个值存储在一个array中。\n      我们都知道所有存储结构中，array查找速度是最快的。所以，可以加速查找。\n 发生碰撞时，让array指向多个values。即，数组每个位置上又生成一个梿表。\n6、Map中元素，可以将key序列、value序列单独抽取出来。\n使用keySet()抽取key序列，将map中的所有keys生成一个Set。\n使用values()抽取value序列，将map中的所有values生成一个Collection。\n为什么一个生成Set，一个生成Collection？那是因为，key总是独一无二的，value允许重复。\n\n来源:[http://blog.csdn.net/fg2006/article/details/6411200](http://blog.csdn.net/fg2006/article/details/6411200)","slug":"java基础/HashMap-LinkHashMap-TreeMap的区别","published":1,"updated":"2017-03-17T03:08:06.490Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taady001tr8syely3pnol","content":"<p>Map主要用于存储健值对，根据键得到值，因此不允许键重复(重复了覆盖了),但允许值重复。<br>Hashmap 是一个最常用的Map,它根据键的HashCode 值存储数据,根据键可以直接获取它的值，具有很快的访问速度，遍历时，取得数据的顺序是完全随机的。HashMap最多只允许一条记录的键为Null;允许多条记录的值为 Null;HashMap不支持线程的同步，即任一时刻可以有多个线程同时写HashMap;可能会导致数据的不一致。如果需要同步，可以用 Collections的synchronizedMap方法使HashMap具有同步的能力，或者使用ConcurrentHashMap。<br>Hashtable与 HashMap类似,它继承自Dictionary类，不同的是:它不允许记录的键或者值为空;它支持线程的同步，即任一时刻只有一个线程能写Hashtable,因此也导致了 Hashtable在写入时会比较慢。<br>LinkedHashMap保存了记录的插入顺序，在用Iterator遍历LinkedHashMap时，先得到的记录肯定是先插入的.也可以在构造时用带参数，按照应用次数排序。在遍历的时候会比HashMap慢，不过有种情况例外，当HashMap容量很大，实际数据较少时，遍历起来可能会比LinkedHashMap慢，因为LinkedHashMap的遍历速度只和实际数据有关，和容量无关，而HashMap的遍历速度和他的容量有关。<br>TreeMap实现SortMap接口，能够把它保存的记录根据键排序,默认是按键值的升序排序，也可以指定排序的比较器，当用Iterator 遍历TreeMap时，得到的记录是排过序的。<br><a id=\"more\"></a><br>一般情况下，我们用的最多的是HashMap,HashMap里面存入的键值对在取出的时候是随机的,它根据键的HashCode值存储数据,根据键可以直接获取它的值，具有很快的访问速度。在Map 中插入、删除和定位元素，HashMap 是最好的选择。<br>TreeMap取出来的是排序后的键值对。但如果您要按自然顺序或自定义顺序遍历键，那么TreeMap会更好。<br>LinkedHashMap 是HashMap的一个子类，如果需要输出的顺序和输入的相同,那么用LinkedHashMap可以实现,它还可以按读取顺序来排列，像连接池中可以应用。</p>\n<ol>\n<li>HashSet是通过HashMap实现的,TreeSet是通过TreeMap实现的,只不过Set用的只是Map的key</li>\n<li>Map的key和Set都有一个共同的特性就是集合的唯一性.TreeMap更是多了一个排序的功能.</li>\n<li>hashCode和equal()是HashMap用的, 因为无需排序所以只需要关注定位和唯一性即可.<br>a. hashCode是用来计算hash值的,hash值是用来确定hash表索引的.<br>b. hash表中的一个索引处存放的是一张链表, 所以还要通过equal方法循环比较链上的每一个对象<pre><code>才可以真正定位到键值对应的Entry.\n</code></pre>c. put时,如果hash表中没定位到,就在链表前加一个Entry,如果定位到了,则更换Entry中的value,并返回旧value</li>\n<li>由于TreeMap需要排序,所以需要一个Comparator为键值进行大小比较.当然也是用Comparator定位的.<br>a. Comparator可以在创建TreeMap时指定<br>b. 如果创建时没有确定,那么就会使用key.compareTo()方法,这就要求key必须实现Comparable接口.<br>c. TreeMap是使用Tree数据结构实现的,所以使用compare接口就可以完成定位了.</li>\n</ol>\n<p>注意：<br>1、Collection没有get()方法来取得某个元素。只能通过iterator()遍历元素。<br>2、Set和Collection拥有一模一样的接口。<br>3、List，可以通过get()方法来一次取出一个元素。使用数字来选择一堆对象中的一个，get(0)…。(add/get)<br>4、一般使用ArrayList。用LinkedList构造堆栈stack、队列queue。<br>5、Map用 put(k,v) / get(k)，还可以使用containsKey()/containsValue()来检查其中是否含有某个key/value。<br>      HashMap会利用对象的hashCode来快速找到key。<br> hashing<br>      哈希码就是将对象的信息经过一些转变形成一个独一无二的int值，这个值存储在一个array中。<br>      我们都知道所有存储结构中，array查找速度是最快的。所以，可以加速查找。<br> 发生碰撞时，让array指向多个values。即，数组每个位置上又生成一个梿表。<br>6、Map中元素，可以将key序列、value序列单独抽取出来。<br>使用keySet()抽取key序列，将map中的所有keys生成一个Set。<br>使用values()抽取value序列，将map中的所有values生成一个Collection。<br>为什么一个生成Set，一个生成Collection？那是因为，key总是独一无二的，value允许重复。</p>\n<p>来源:<a href=\"http://blog.csdn.net/fg2006/article/details/6411200\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/fg2006/article/details/6411200</a></p>\n","excerpt":"<p>Map主要用于存储健值对，根据键得到值，因此不允许键重复(重复了覆盖了),但允许值重复。<br>Hashmap 是一个最常用的Map,它根据键的HashCode 值存储数据,根据键可以直接获取它的值，具有很快的访问速度，遍历时，取得数据的顺序是完全随机的。HashMap最多只允许一条记录的键为Null;允许多条记录的值为 Null;HashMap不支持线程的同步，即任一时刻可以有多个线程同时写HashMap;可能会导致数据的不一致。如果需要同步，可以用 Collections的synchronizedMap方法使HashMap具有同步的能力，或者使用ConcurrentHashMap。<br>Hashtable与 HashMap类似,它继承自Dictionary类，不同的是:它不允许记录的键或者值为空;它支持线程的同步，即任一时刻只有一个线程能写Hashtable,因此也导致了 Hashtable在写入时会比较慢。<br>LinkedHashMap保存了记录的插入顺序，在用Iterator遍历LinkedHashMap时，先得到的记录肯定是先插入的.也可以在构造时用带参数，按照应用次数排序。在遍历的时候会比HashMap慢，不过有种情况例外，当HashMap容量很大，实际数据较少时，遍历起来可能会比LinkedHashMap慢，因为LinkedHashMap的遍历速度只和实际数据有关，和容量无关，而HashMap的遍历速度和他的容量有关。<br>TreeMap实现SortMap接口，能够把它保存的记录根据键排序,默认是按键值的升序排序，也可以指定排序的比较器，当用Iterator 遍历TreeMap时，得到的记录是排过序的。<br></p>","more":"<br>一般情况下，我们用的最多的是HashMap,HashMap里面存入的键值对在取出的时候是随机的,它根据键的HashCode值存储数据,根据键可以直接获取它的值，具有很快的访问速度。在Map 中插入、删除和定位元素，HashMap 是最好的选择。<br>TreeMap取出来的是排序后的键值对。但如果您要按自然顺序或自定义顺序遍历键，那么TreeMap会更好。<br>LinkedHashMap 是HashMap的一个子类，如果需要输出的顺序和输入的相同,那么用LinkedHashMap可以实现,它还可以按读取顺序来排列，像连接池中可以应用。<p></p>\n<ol>\n<li>HashSet是通过HashMap实现的,TreeSet是通过TreeMap实现的,只不过Set用的只是Map的key</li>\n<li>Map的key和Set都有一个共同的特性就是集合的唯一性.TreeMap更是多了一个排序的功能.</li>\n<li>hashCode和equal()是HashMap用的, 因为无需排序所以只需要关注定位和唯一性即可.<br>a. hashCode是用来计算hash值的,hash值是用来确定hash表索引的.<br>b. hash表中的一个索引处存放的是一张链表, 所以还要通过equal方法循环比较链上的每一个对象<pre><code>才可以真正定位到键值对应的Entry.\n</code></pre>c. put时,如果hash表中没定位到,就在链表前加一个Entry,如果定位到了,则更换Entry中的value,并返回旧value</li>\n<li>由于TreeMap需要排序,所以需要一个Comparator为键值进行大小比较.当然也是用Comparator定位的.<br>a. Comparator可以在创建TreeMap时指定<br>b. 如果创建时没有确定,那么就会使用key.compareTo()方法,这就要求key必须实现Comparable接口.<br>c. TreeMap是使用Tree数据结构实现的,所以使用compare接口就可以完成定位了.</li>\n</ol>\n<p>注意：<br>1、Collection没有get()方法来取得某个元素。只能通过iterator()遍历元素。<br>2、Set和Collection拥有一模一样的接口。<br>3、List，可以通过get()方法来一次取出一个元素。使用数字来选择一堆对象中的一个，get(0)…。(add/get)<br>4、一般使用ArrayList。用LinkedList构造堆栈stack、队列queue。<br>5、Map用 put(k,v) / get(k)，还可以使用containsKey()/containsValue()来检查其中是否含有某个key/value。<br>      HashMap会利用对象的hashCode来快速找到key。<br> hashing<br>      哈希码就是将对象的信息经过一些转变形成一个独一无二的int值，这个值存储在一个array中。<br>      我们都知道所有存储结构中，array查找速度是最快的。所以，可以加速查找。<br> 发生碰撞时，让array指向多个values。即，数组每个位置上又生成一个梿表。<br>6、Map中元素，可以将key序列、value序列单独抽取出来。<br>使用keySet()抽取key序列，将map中的所有keys生成一个Set。<br>使用values()抽取value序列，将map中的所有values生成一个Collection。<br>为什么一个生成Set，一个生成Collection？那是因为，key总是独一无二的，value允许重复。</p>\n<p>来源:<a href=\"http://blog.csdn.net/fg2006/article/details/6411200\">http://blog.csdn.net/fg2006/article/details/6411200</a></p>"},{"title":"ThreadLocal理解","date":"2017-03-19T09:47:47.000Z","_content":"## 1、ThreadLocal是什么\n　　早在JDK 1.2的版本中就提供java.lang.ThreadLocal，ThreadLocal为解决多线程程序的并发问题提供了一种新的思路。使用这个工具类可以很简洁地编写出优美的多线程程序。\n当使用ThreadLocal维护变量时，ThreadLocal为每个使用该变量的线程提供独立的变量副本，所以每一个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本。\n　　从线程的角度看，目标变量就象是线程的本地变量，这也是类名中“Local”所要表达的意思。\n<!--more-->\nThreadLocal的接口方法\nThreadLocal类接口很简单，只有4个方法，我们先来了解一下：\n```java\nvoid set(Object value) //设置当前线程的线程局部变量的值。\npublic Object get() //该方法返回当前线程所对应的线程局部变量。\npublic void remove() //将当前线程局部变量的值删除，目的是为了减少内存的占用，该方法是JDK 5.0新增的方法。\n// 需要指出的是，当线程结束后，对应该线程的局部变量将自动被垃圾回收，\n// 所以显式调用该方法清除线程的局部变量并不是必须的操作，但它可以加快内存回收的速度。\nprotected Object initialValue() //返回该线程局部变量的初始值，该方法是一个protected的方法，显然是为了让子类覆盖而设计的。\n// 这个方法是一个延迟调用方法，在线程第1次调用get()或set(Object)时才执行，并且仅执行1次。ThreadLocal中的缺省实现直接返回一个null。\n```\nThreadLocal是如何做到为每一个线程维护变量的副本的呢？\n　　其实实现的思路很简单：在ThreadLocal类中有一个Map，用于存储每一个线程的变量副本，Map中元素的键为线程对象，而值对应线程的变量副本。\n我们自己就可以提供一个简单的实现版本\n```java\npublic class TestNum {\n\t//1、定义一个 ThreadLocal 并指定初始值\n\tprivate static ThreadLocal<Integer> seqNum = new ThreadLocal<Integer>(){\n\t\t@Override\n\t\tprotected Integer initialValue() {\n\t\t\treturn 0;\n\t\t}\n\t};\n\n\t//2、获得下个序列号\n\tpublic Integer getNextNum(){\n\t\tseqNum.set(seqNum.get()+1);\n\t\treturn seqNum.get();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tTestNum seqNum = new TestNum();\n\t\t//3、三个线程共享seqNum对象，各自维护自己的序列号\n\t\tTestClient ts1 = new TestClient(seqNum);\n\t\tTestClient ts2 = new TestClient(seqNum);\n\t\tTestClient ts3 = new TestClient(seqNum);\n\n\t\tts1.start();\n\t\tts2.start();\n\t\tts3.start();\n\n\t}\n\n\tstatic class TestClient extends Thread{\n\n\t\tTestNum seqNum;\n\t\tpublic TestClient(TestNum seqNum){\n\t\t\tthis.seqNum = seqNum;\n\t\t}\n\n\t\t@Override\n\t\tpublic void run() {\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tSystem.out.println(\"thread[\" + Thread.currentThread().getName() + \"]-- seqNum[\" + seqNum.getNextNum()+\"]\");\n\t\t\t}\n\t\t\tsuper.run();\n\t\t}\n\t}\n}\n```\n三个TestClient线程共享一个TestNum对象， 运行结果如下：\n![logo](cf785e60-9c92-4bfb-977c-4e32a114e809.png)\n考察输出的结果信息，我们发现每个线程所产生的序号虽然都共享同一个TestNum实例，但它们并没有发生相互干扰的情况，而是各自产生独立的序列号，这是因为我们通过ThreadLocal为每一个线程提供了单独的副本。\n\n## Thread同步机制的比较\n　　ThreadLocal和线程同步机制相比有什么优势呢？\n　　ThreadLocal和线程同步机制都是为了解决多线程中相同变量的访问冲突问题。\n　　在同步机制中，通过对象的锁机制保证同一时间只有一个线程访问变量。这时该变量是多个线程共享的，使用同步机制要求程序慎密地分析什么时候对变量进行读写，什么时候需要锁定某个对象，什么时候释放对象锁等繁杂的问题，程序设计和编写难度相对较大。\n而ThreadLocal则从另一个角度来解决多线程的并发访问。ThreadLocal会为每一个线程提供一个独立的变量副本，从而隔离了多个线程对数据的访问冲突。因为每一个线程都拥有自己的变量副本，从而也就没有必要对该变量进行同步了。\nThreadLocal提供了线程安全的共享对象，在编写多线程代码时，可以把不安全的变量封装进ThreadLocal。\n　　由于ThreadLocal中可以持有任何类型的对象，低版本JDK所提供的get()返回的是Object对象，需要强制类型转换。但JDK 5.0通过泛型很好的解决了这个问题，在一定程度地简化ThreadLocal的使用，代码清单 9 2就使用了JDK 5.0新的ThreadLocal<T>版本。\n概括起来说，对于多线程资源共享的问题，同步机制采用了“以时间换空间”的方式，而ThreadLocal采用了“以空间换时间”的方式。前者仅提供一份变量，让不同的线程排队访问，而后者为每一个线程都提供了一份变量，因此可以同时访问而互不影响。\n　　Spring使用ThreadLocal解决线程安全问题我们知道在一般情况下，只有无状态的Bean才可以在多线程环境下共享，在Spring中，绝大部分Bean都可以声明为singleton作用域。就是因为Spring对一些Bean（如RequestContextHolder、TransactionSynchronizationManager、LocaleContextHolder等）中非线程安全状态采用ThreadLocal进行处理，让它们也成为线程安全的状态，因为有状态的Bean就可以在多线程中共享了。\n一般的Web应用划分为展现层、服务层和持久层三个层次，在不同的层中编写对应的逻辑，下层通过接口向上层开放功能调用。在一般情况下，从接收请求到返回响应所经过的所有程序调用都同属于一个线程，如图9‑2所示：\n![logo](6a80dba1-4290-4fbc-8ca2-06be465d886a.png)\n## 通通透透理解ThreadLocal\n　　同一线程贯通三层这样你就可以根据需要，将一些非线程安全的变量以ThreadLocal存放，在同一次请求响应的调用线程中，所有关联的对象引用到的都是同一个变量。\n下面的实例能够体现Spring对有状态Bean的改造思路：\n代码清单3 TestDao：非线程安全\n```java\nimport java.sql.Connection;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\npublic class TestDao {\n    private Connection conn;// ①一个非线程安全的变量\n\n    public void addTopic() throws SQLException {\n        Statement stat = conn.createStatement();// ②引用非线程安全变量\n        // …\n    }\n}\n```\n由于①处的conn是成员变量，因为addTopic()方法是非线程安全的，必须在使用时创建一个新TopicDao实例（非singleton）。下面使用ThreadLocal对conn这个非线程安全的“状态”进行改造：\n代码清单4 TestDao：线程安全\n```java\nimport java.sql.Connection;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\npublic class TestDaoNew {\n    // ①使用ThreadLocal保存Connection变量\n    private static ThreadLocal<Connection> connThreadLocal = new ThreadLocal<Connection>();\n\n    public static Connection getConnection() {\n        // ②如果connThreadLocal没有本线程对应的Connection创建一个新的Connection，\n        // 并将其保存到线程本地变量中。\n        if (connThreadLocal.get() == null) {\n            Connection conn = getConnection();\n            connThreadLocal.set(conn);\n            return conn;\n        } else {\n            return connThreadLocal.get();// ③直接返回线程本地变量\n        }\n    }\n\n    public void addTopic() throws SQLException {\n        // ④从ThreadLocal中获取线程对应的Connection\n        Statement stat = getConnection().createStatement();\n    }\n}\n```\n不同的线程在使用TopicDao时，先判断connThreadLocal.get()是否是null，如果是null，则说明当前线程还没有对应的Connection对象，这时创建一个Connection对象并添加到本地线程变量中；\n如果不为null，则说明当前的线程已经拥有了Connection对象，直接使用就可以了。这样，就保证了不同的线程使用线程相关的Connection，而不会使用其它线程的Connection。因此，这个TopicDao就可以做到singleton共享了。\n当然，这个例子本身很粗糙，将Connection的ThreadLocal直接放在DAO只能做到本DAO的多个方法共享Connection时不发生线程安全问题，但无法和其它DAO共用同一个Connection，要做到同一事务多DAO共享同一Connection，必须在一个共同的外部类使用ThreadLocal保存Connection。\n\nConnectionManager.java\n```java\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\npublic class ConnectionManager {\n\n    private static ThreadLocal<Connection> connectionHolder = new ThreadLocal<Connection>() {\n        @Override\n        protected Connection initialValue() {\n            Connection conn = null;\n            try {\n                conn = DriverManager.getConnection(\n                        \"jdbc:mysql://localhost:3306/test\", \"username\",\n                        \"password\");\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n            return conn;\n        }\n    };\n\n    public static Connection getConnection() {\n        return connectionHolder.get();\n    }\n\n    public static void setConnection(Connection conn) {\n        connectionHolder.set(conn);\n    }\n}\n```\n\njava.lang.ThreadLocal<T>的具体实现\n那么到底ThreadLocal类是如何实现这种“为每个线程提供不同的变量拷贝”的呢？先来看一下ThreadLocal的set()方法的源码是如何实现的：\n```java\n/**\n* Sets the current thread's copy of this thread-local variable\n* to the specified value.  Most subclasses will have no need to\n* override this method, relying solely on the {@link #initialValue}\n* method to set the values of thread-locals.\n*\n* @param value the value to be stored in the current thread's copy of\n*        this thread-local.\n*/\npublic void set(T value) {\n   Thread t = Thread.currentThread();\n   ThreadLocalMap map = getMap(t);\n   if (map != null)\n\t   map.set(this, value);\n   else\n\t   createMap(t, value);\n}\n```\n在这个方法内部我们看到，首先通过getMap(Thread t)方法获取一个和当前线程相关的ThreadLocalMap，然后将变量的值设置到这个ThreadLocalMap对象中，当然如果获取到的ThreadLocalMap对象为空，就通过createMap方法创建。\n线程隔离的秘密，就在于ThreadLocalMap这个类。ThreadLocalMap是ThreadLocal类的一个静态内部类，它实现了键值对的设置和获取（对比Map对象来理解），每个线程中都有一个独立的ThreadLocalMap副本，它所存储的值，只能被当前线程读取和修改。ThreadLocal类通过操作每一个线程特有的ThreadLocalMap副本，从而实现了变量访问在不同线程中的隔离。因为每个线程的变量都是自己特有的，完全不会有并发错误。还有一点就是，ThreadLocalMap存储的键值对中的键是this对象指向的ThreadLocal对象，而值就是你所设置的对象了。\n\n为了加深理解，我们接着看上面代码中出现的getMap和createMap方法的实现：\n```java\n/**\n * Get the map associated with a ThreadLocal. Overridden in\n * InheritableThreadLocal.\n *\n * @param  t the current thread\n * @return the map\n */\nThreadLocalMap getMap(Thread t) {\n    return t.threadLocals;\n}\n\n/**\n * Create the map associated with a ThreadLocal. Overridden in\n * InheritableThreadLocal.\n *\n * @param t the current thread\n * @param firstValue value for the initial entry of the map\n * @param map the map to store.\n */\nvoid createMap(Thread t, T firstValue) {\n    t.threadLocals = new ThreadLocalMap(this, firstValue);\n}\n```\n\n接下来再看一下ThreadLocal类中的get()方法:\n```java\n/**\n * Returns the value in the current thread's copy of this\n * thread-local variable.  If the variable has no value for the\n * current thread, it is first initialized to the value returned\n * by an invocation of the {@link #initialValue} method.\n *\n * @return the current thread's value of this thread-local\n */\npublic T get() {\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    if (map != null) {\n        ThreadLocalMap.Entry e = map.getEntry(this);\n        if (e != null)\n            return (T)e.value;\n    }\n    return setInitialValue();\n}\n```\n再来看setInitialValue()方法：\n```java\n/**\n    * Variant of set() to establish initialValue. Used instead\n    * of set() in case user has overridden the set() method.\n    *\n    * @return the initial value\n    */\n   private T setInitialValue() {\n       T value = initialValue();\n       Thread t = Thread.currentThread();\n       ThreadLocalMap map = getMap(t);\n       if (map != null)\n           map.set(this, value);\n       else\n           createMap(t, value);\n       return value;\n   }\n```\n获取和当前线程绑定的值时，ThreadLocalMap对象是以this指向的ThreadLocal对象为键进行查找的，这当然和前面set()方法的代码是相呼应的。\n　　进一步地，我们可以创建不同的ThreadLocal实例来实现多个变量在不同线程间的访问隔离，为什么可以这么做？因为不同的ThreadLocal对象作为不同键，当然也可以在线程的ThreadLocalMap对象中设置不同的值了。通过ThreadLocal对象，在多线程中共享一个值和多个值的区别，就像你在一个HashMap对象中存储一个键值对和多个键值对一样，仅此而已。\n\n## 小结\n　　ThreadLocal是解决线程安全问题一个很好的思路，它通过为每个线程提供一个独立的变量副本解决了变量并发访问的冲突问题。在很多情况下，ThreadLocal比直接使用synchronized同步机制解决线程安全问题更简单，更方便，且结果程序拥有更高的并发性。\nConnectionManager.java\n```java\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\npublic class ConnectionManager {\n\n    private static ThreadLocal<Connection> connectionHolder = new ThreadLocal<Connection>() {\n        @Override\n        protected Connection initialValue() {\n            Connection conn = null;\n            try {\n                conn = DriverManager.getConnection(\n                        \"jdbc:mysql://localhost:3306/test\", \"username\",\n                        \"password\");\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n            return conn;\n        }\n    };\n\n    public static Connection getConnection() {\n        return connectionHolder.get();\n    }\n\n    public static void setConnection(Connection conn) {\n        connectionHolder.set(conn);\n    }\n}\n```\n来源：[http://blog.csdn.net/lufeng20/article/details/24314381](http://blog.csdn.net/lufeng20/article/details/24314381)\n\n\n\n\n\n\n\n","source":"_posts/java基础/ThreadLocal理解.md","raw":"---\ntitle: ThreadLocal理解\ndate: 2017-03-19 17:47:47\ncategory: java基础\ntags: [ThredLocal]\n---\n## 1、ThreadLocal是什么\n　　早在JDK 1.2的版本中就提供java.lang.ThreadLocal，ThreadLocal为解决多线程程序的并发问题提供了一种新的思路。使用这个工具类可以很简洁地编写出优美的多线程程序。\n当使用ThreadLocal维护变量时，ThreadLocal为每个使用该变量的线程提供独立的变量副本，所以每一个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本。\n　　从线程的角度看，目标变量就象是线程的本地变量，这也是类名中“Local”所要表达的意思。\n<!--more-->\nThreadLocal的接口方法\nThreadLocal类接口很简单，只有4个方法，我们先来了解一下：\n```java\nvoid set(Object value) //设置当前线程的线程局部变量的值。\npublic Object get() //该方法返回当前线程所对应的线程局部变量。\npublic void remove() //将当前线程局部变量的值删除，目的是为了减少内存的占用，该方法是JDK 5.0新增的方法。\n// 需要指出的是，当线程结束后，对应该线程的局部变量将自动被垃圾回收，\n// 所以显式调用该方法清除线程的局部变量并不是必须的操作，但它可以加快内存回收的速度。\nprotected Object initialValue() //返回该线程局部变量的初始值，该方法是一个protected的方法，显然是为了让子类覆盖而设计的。\n// 这个方法是一个延迟调用方法，在线程第1次调用get()或set(Object)时才执行，并且仅执行1次。ThreadLocal中的缺省实现直接返回一个null。\n```\nThreadLocal是如何做到为每一个线程维护变量的副本的呢？\n　　其实实现的思路很简单：在ThreadLocal类中有一个Map，用于存储每一个线程的变量副本，Map中元素的键为线程对象，而值对应线程的变量副本。\n我们自己就可以提供一个简单的实现版本\n```java\npublic class TestNum {\n\t//1、定义一个 ThreadLocal 并指定初始值\n\tprivate static ThreadLocal<Integer> seqNum = new ThreadLocal<Integer>(){\n\t\t@Override\n\t\tprotected Integer initialValue() {\n\t\t\treturn 0;\n\t\t}\n\t};\n\n\t//2、获得下个序列号\n\tpublic Integer getNextNum(){\n\t\tseqNum.set(seqNum.get()+1);\n\t\treturn seqNum.get();\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tTestNum seqNum = new TestNum();\n\t\t//3、三个线程共享seqNum对象，各自维护自己的序列号\n\t\tTestClient ts1 = new TestClient(seqNum);\n\t\tTestClient ts2 = new TestClient(seqNum);\n\t\tTestClient ts3 = new TestClient(seqNum);\n\n\t\tts1.start();\n\t\tts2.start();\n\t\tts3.start();\n\n\t}\n\n\tstatic class TestClient extends Thread{\n\n\t\tTestNum seqNum;\n\t\tpublic TestClient(TestNum seqNum){\n\t\t\tthis.seqNum = seqNum;\n\t\t}\n\n\t\t@Override\n\t\tpublic void run() {\n\t\t\tfor(int i=0;i<3;i++){\n\t\t\t\tSystem.out.println(\"thread[\" + Thread.currentThread().getName() + \"]-- seqNum[\" + seqNum.getNextNum()+\"]\");\n\t\t\t}\n\t\t\tsuper.run();\n\t\t}\n\t}\n}\n```\n三个TestClient线程共享一个TestNum对象， 运行结果如下：\n![logo](cf785e60-9c92-4bfb-977c-4e32a114e809.png)\n考察输出的结果信息，我们发现每个线程所产生的序号虽然都共享同一个TestNum实例，但它们并没有发生相互干扰的情况，而是各自产生独立的序列号，这是因为我们通过ThreadLocal为每一个线程提供了单独的副本。\n\n## Thread同步机制的比较\n　　ThreadLocal和线程同步机制相比有什么优势呢？\n　　ThreadLocal和线程同步机制都是为了解决多线程中相同变量的访问冲突问题。\n　　在同步机制中，通过对象的锁机制保证同一时间只有一个线程访问变量。这时该变量是多个线程共享的，使用同步机制要求程序慎密地分析什么时候对变量进行读写，什么时候需要锁定某个对象，什么时候释放对象锁等繁杂的问题，程序设计和编写难度相对较大。\n而ThreadLocal则从另一个角度来解决多线程的并发访问。ThreadLocal会为每一个线程提供一个独立的变量副本，从而隔离了多个线程对数据的访问冲突。因为每一个线程都拥有自己的变量副本，从而也就没有必要对该变量进行同步了。\nThreadLocal提供了线程安全的共享对象，在编写多线程代码时，可以把不安全的变量封装进ThreadLocal。\n　　由于ThreadLocal中可以持有任何类型的对象，低版本JDK所提供的get()返回的是Object对象，需要强制类型转换。但JDK 5.0通过泛型很好的解决了这个问题，在一定程度地简化ThreadLocal的使用，代码清单 9 2就使用了JDK 5.0新的ThreadLocal<T>版本。\n概括起来说，对于多线程资源共享的问题，同步机制采用了“以时间换空间”的方式，而ThreadLocal采用了“以空间换时间”的方式。前者仅提供一份变量，让不同的线程排队访问，而后者为每一个线程都提供了一份变量，因此可以同时访问而互不影响。\n　　Spring使用ThreadLocal解决线程安全问题我们知道在一般情况下，只有无状态的Bean才可以在多线程环境下共享，在Spring中，绝大部分Bean都可以声明为singleton作用域。就是因为Spring对一些Bean（如RequestContextHolder、TransactionSynchronizationManager、LocaleContextHolder等）中非线程安全状态采用ThreadLocal进行处理，让它们也成为线程安全的状态，因为有状态的Bean就可以在多线程中共享了。\n一般的Web应用划分为展现层、服务层和持久层三个层次，在不同的层中编写对应的逻辑，下层通过接口向上层开放功能调用。在一般情况下，从接收请求到返回响应所经过的所有程序调用都同属于一个线程，如图9‑2所示：\n![logo](6a80dba1-4290-4fbc-8ca2-06be465d886a.png)\n## 通通透透理解ThreadLocal\n　　同一线程贯通三层这样你就可以根据需要，将一些非线程安全的变量以ThreadLocal存放，在同一次请求响应的调用线程中，所有关联的对象引用到的都是同一个变量。\n下面的实例能够体现Spring对有状态Bean的改造思路：\n代码清单3 TestDao：非线程安全\n```java\nimport java.sql.Connection;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\npublic class TestDao {\n    private Connection conn;// ①一个非线程安全的变量\n\n    public void addTopic() throws SQLException {\n        Statement stat = conn.createStatement();// ②引用非线程安全变量\n        // …\n    }\n}\n```\n由于①处的conn是成员变量，因为addTopic()方法是非线程安全的，必须在使用时创建一个新TopicDao实例（非singleton）。下面使用ThreadLocal对conn这个非线程安全的“状态”进行改造：\n代码清单4 TestDao：线程安全\n```java\nimport java.sql.Connection;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\npublic class TestDaoNew {\n    // ①使用ThreadLocal保存Connection变量\n    private static ThreadLocal<Connection> connThreadLocal = new ThreadLocal<Connection>();\n\n    public static Connection getConnection() {\n        // ②如果connThreadLocal没有本线程对应的Connection创建一个新的Connection，\n        // 并将其保存到线程本地变量中。\n        if (connThreadLocal.get() == null) {\n            Connection conn = getConnection();\n            connThreadLocal.set(conn);\n            return conn;\n        } else {\n            return connThreadLocal.get();// ③直接返回线程本地变量\n        }\n    }\n\n    public void addTopic() throws SQLException {\n        // ④从ThreadLocal中获取线程对应的Connection\n        Statement stat = getConnection().createStatement();\n    }\n}\n```\n不同的线程在使用TopicDao时，先判断connThreadLocal.get()是否是null，如果是null，则说明当前线程还没有对应的Connection对象，这时创建一个Connection对象并添加到本地线程变量中；\n如果不为null，则说明当前的线程已经拥有了Connection对象，直接使用就可以了。这样，就保证了不同的线程使用线程相关的Connection，而不会使用其它线程的Connection。因此，这个TopicDao就可以做到singleton共享了。\n当然，这个例子本身很粗糙，将Connection的ThreadLocal直接放在DAO只能做到本DAO的多个方法共享Connection时不发生线程安全问题，但无法和其它DAO共用同一个Connection，要做到同一事务多DAO共享同一Connection，必须在一个共同的外部类使用ThreadLocal保存Connection。\n\nConnectionManager.java\n```java\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\npublic class ConnectionManager {\n\n    private static ThreadLocal<Connection> connectionHolder = new ThreadLocal<Connection>() {\n        @Override\n        protected Connection initialValue() {\n            Connection conn = null;\n            try {\n                conn = DriverManager.getConnection(\n                        \"jdbc:mysql://localhost:3306/test\", \"username\",\n                        \"password\");\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n            return conn;\n        }\n    };\n\n    public static Connection getConnection() {\n        return connectionHolder.get();\n    }\n\n    public static void setConnection(Connection conn) {\n        connectionHolder.set(conn);\n    }\n}\n```\n\njava.lang.ThreadLocal<T>的具体实现\n那么到底ThreadLocal类是如何实现这种“为每个线程提供不同的变量拷贝”的呢？先来看一下ThreadLocal的set()方法的源码是如何实现的：\n```java\n/**\n* Sets the current thread's copy of this thread-local variable\n* to the specified value.  Most subclasses will have no need to\n* override this method, relying solely on the {@link #initialValue}\n* method to set the values of thread-locals.\n*\n* @param value the value to be stored in the current thread's copy of\n*        this thread-local.\n*/\npublic void set(T value) {\n   Thread t = Thread.currentThread();\n   ThreadLocalMap map = getMap(t);\n   if (map != null)\n\t   map.set(this, value);\n   else\n\t   createMap(t, value);\n}\n```\n在这个方法内部我们看到，首先通过getMap(Thread t)方法获取一个和当前线程相关的ThreadLocalMap，然后将变量的值设置到这个ThreadLocalMap对象中，当然如果获取到的ThreadLocalMap对象为空，就通过createMap方法创建。\n线程隔离的秘密，就在于ThreadLocalMap这个类。ThreadLocalMap是ThreadLocal类的一个静态内部类，它实现了键值对的设置和获取（对比Map对象来理解），每个线程中都有一个独立的ThreadLocalMap副本，它所存储的值，只能被当前线程读取和修改。ThreadLocal类通过操作每一个线程特有的ThreadLocalMap副本，从而实现了变量访问在不同线程中的隔离。因为每个线程的变量都是自己特有的，完全不会有并发错误。还有一点就是，ThreadLocalMap存储的键值对中的键是this对象指向的ThreadLocal对象，而值就是你所设置的对象了。\n\n为了加深理解，我们接着看上面代码中出现的getMap和createMap方法的实现：\n```java\n/**\n * Get the map associated with a ThreadLocal. Overridden in\n * InheritableThreadLocal.\n *\n * @param  t the current thread\n * @return the map\n */\nThreadLocalMap getMap(Thread t) {\n    return t.threadLocals;\n}\n\n/**\n * Create the map associated with a ThreadLocal. Overridden in\n * InheritableThreadLocal.\n *\n * @param t the current thread\n * @param firstValue value for the initial entry of the map\n * @param map the map to store.\n */\nvoid createMap(Thread t, T firstValue) {\n    t.threadLocals = new ThreadLocalMap(this, firstValue);\n}\n```\n\n接下来再看一下ThreadLocal类中的get()方法:\n```java\n/**\n * Returns the value in the current thread's copy of this\n * thread-local variable.  If the variable has no value for the\n * current thread, it is first initialized to the value returned\n * by an invocation of the {@link #initialValue} method.\n *\n * @return the current thread's value of this thread-local\n */\npublic T get() {\n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    if (map != null) {\n        ThreadLocalMap.Entry e = map.getEntry(this);\n        if (e != null)\n            return (T)e.value;\n    }\n    return setInitialValue();\n}\n```\n再来看setInitialValue()方法：\n```java\n/**\n    * Variant of set() to establish initialValue. Used instead\n    * of set() in case user has overridden the set() method.\n    *\n    * @return the initial value\n    */\n   private T setInitialValue() {\n       T value = initialValue();\n       Thread t = Thread.currentThread();\n       ThreadLocalMap map = getMap(t);\n       if (map != null)\n           map.set(this, value);\n       else\n           createMap(t, value);\n       return value;\n   }\n```\n获取和当前线程绑定的值时，ThreadLocalMap对象是以this指向的ThreadLocal对象为键进行查找的，这当然和前面set()方法的代码是相呼应的。\n　　进一步地，我们可以创建不同的ThreadLocal实例来实现多个变量在不同线程间的访问隔离，为什么可以这么做？因为不同的ThreadLocal对象作为不同键，当然也可以在线程的ThreadLocalMap对象中设置不同的值了。通过ThreadLocal对象，在多线程中共享一个值和多个值的区别，就像你在一个HashMap对象中存储一个键值对和多个键值对一样，仅此而已。\n\n## 小结\n　　ThreadLocal是解决线程安全问题一个很好的思路，它通过为每个线程提供一个独立的变量副本解决了变量并发访问的冲突问题。在很多情况下，ThreadLocal比直接使用synchronized同步机制解决线程安全问题更简单，更方便，且结果程序拥有更高的并发性。\nConnectionManager.java\n```java\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\n\npublic class ConnectionManager {\n\n    private static ThreadLocal<Connection> connectionHolder = new ThreadLocal<Connection>() {\n        @Override\n        protected Connection initialValue() {\n            Connection conn = null;\n            try {\n                conn = DriverManager.getConnection(\n                        \"jdbc:mysql://localhost:3306/test\", \"username\",\n                        \"password\");\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n            return conn;\n        }\n    };\n\n    public static Connection getConnection() {\n        return connectionHolder.get();\n    }\n\n    public static void setConnection(Connection conn) {\n        connectionHolder.set(conn);\n    }\n}\n```\n来源：[http://blog.csdn.net/lufeng20/article/details/24314381](http://blog.csdn.net/lufeng20/article/details/24314381)\n\n\n\n\n\n\n\n","slug":"java基础/ThreadLocal理解","published":1,"updated":"2017-03-19T13:20:49.161Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taae2001wr8syx9t8vhqh","content":"<h2 id=\"1、ThreadLocal是什么\"><a href=\"#1、ThreadLocal是什么\" class=\"headerlink\" title=\"1、ThreadLocal是什么\"></a>1、ThreadLocal是什么</h2><p>　　早在JDK 1.2的版本中就提供java.lang.ThreadLocal，ThreadLocal为解决多线程程序的并发问题提供了一种新的思路。使用这个工具类可以很简洁地编写出优美的多线程程序。<br>当使用ThreadLocal维护变量时，ThreadLocal为每个使用该变量的线程提供独立的变量副本，所以每一个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本。<br>　　从线程的角度看，目标变量就象是线程的本地变量，这也是类名中“Local”所要表达的意思。<br><a id=\"more\"></a><br>ThreadLocal的接口方法<br>ThreadLocal类接口很简单，只有4个方法，我们先来了解一下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(Object value)</span> <span class=\"comment\">//设置当前线程的线程局部变量的值。</span></span></div><div class=\"line\"><span class=\"keyword\">public</span> Object <span class=\"title\">get</span><span class=\"params\">()</span> <span class=\"comment\">//该方法返回当前线程所对应的线程局部变量。</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">()</span> <span class=\"comment\">//将当前线程局部变量的值删除，目的是为了减少内存的占用，该方法是JDK 5.0新增的方法。</span></div><div class=\"line\"><span class=\"comment\">// 需要指出的是，当线程结束后，对应该线程的局部变量将自动被垃圾回收，</span></div><div class=\"line\"><span class=\"comment\">// 所以显式调用该方法清除线程的局部变量并不是必须的操作，但它可以加快内存回收的速度。</span></div><div class=\"line\"><span class=\"keyword\">protected</span> Object <span class=\"title\">initialValue</span><span class=\"params\">()</span> <span class=\"comment\">//返回该线程局部变量的初始值，该方法是一个protected的方法，显然是为了让子类覆盖而设计的。</span></div><div class=\"line\"><span class=\"comment\">// 这个方法是一个延迟调用方法，在线程第1次调用get()或set(Object)时才执行，并且仅执行1次。ThreadLocal中的缺省实现直接返回一个null。</span></div></pre></td></tr></table></figure></p>\n<p>ThreadLocal是如何做到为每一个线程维护变量的副本的呢？<br>　　其实实现的思路很简单：在ThreadLocal类中有一个Map，用于存储每一个线程的变量副本，Map中元素的键为线程对象，而值对应线程的变量副本。<br>我们自己就可以提供一个简单的实现版本<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestNum</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//1、定义一个 ThreadLocal 并指定初始值</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;Integer&gt; seqNum = <span class=\"keyword\">new</span> ThreadLocal&lt;Integer&gt;()&#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">protected</span> Integer <span class=\"title\">initialValue</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//2、获得下个序列号</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getNextNum</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\tseqNum.set(seqNum.get()+<span class=\"number\">1</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> seqNum.get();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tTestNum seqNum = <span class=\"keyword\">new</span> TestNum();</div><div class=\"line\">\t\t<span class=\"comment\">//3、三个线程共享seqNum对象，各自维护自己的序列号</span></div><div class=\"line\">\t\tTestClient ts1 = <span class=\"keyword\">new</span> TestClient(seqNum);</div><div class=\"line\">\t\tTestClient ts2 = <span class=\"keyword\">new</span> TestClient(seqNum);</div><div class=\"line\">\t\tTestClient ts3 = <span class=\"keyword\">new</span> TestClient(seqNum);</div><div class=\"line\"></div><div class=\"line\">\t\tts1.start();</div><div class=\"line\">\t\tts2.start();</div><div class=\"line\">\t\tts3.start();</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t\tTestNum seqNum;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestClient</span><span class=\"params\">(TestNum seqNum)</span></span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">this</span>.seqNum = seqNum;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;</div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"thread[\"</span> + Thread.currentThread().getName() + <span class=\"string\">\"]-- seqNum[\"</span> + seqNum.getNextNum()+<span class=\"string\">\"]\"</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">super</span>.run();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>三个TestClient线程共享一个TestNum对象， 运行结果如下：<br><img src=\"/2017/03/19/java基础/ThreadLocal理解/cf785e60-9c92-4bfb-977c-4e32a114e809.png\" alt=\"logo\"><br>考察输出的结果信息，我们发现每个线程所产生的序号虽然都共享同一个TestNum实例，但它们并没有发生相互干扰的情况，而是各自产生独立的序列号，这是因为我们通过ThreadLocal为每一个线程提供了单独的副本。</p>\n<h2 id=\"Thread同步机制的比较\"><a href=\"#Thread同步机制的比较\" class=\"headerlink\" title=\"Thread同步机制的比较\"></a>Thread同步机制的比较</h2><p>　　ThreadLocal和线程同步机制相比有什么优势呢？<br>　　ThreadLocal和线程同步机制都是为了解决多线程中相同变量的访问冲突问题。<br>　　在同步机制中，通过对象的锁机制保证同一时间只有一个线程访问变量。这时该变量是多个线程共享的，使用同步机制要求程序慎密地分析什么时候对变量进行读写，什么时候需要锁定某个对象，什么时候释放对象锁等繁杂的问题，程序设计和编写难度相对较大。<br>而ThreadLocal则从另一个角度来解决多线程的并发访问。ThreadLocal会为每一个线程提供一个独立的变量副本，从而隔离了多个线程对数据的访问冲突。因为每一个线程都拥有自己的变量副本，从而也就没有必要对该变量进行同步了。<br>ThreadLocal提供了线程安全的共享对象，在编写多线程代码时，可以把不安全的变量封装进ThreadLocal。<br>　　由于ThreadLocal中可以持有任何类型的对象，低版本JDK所提供的get()返回的是Object对象，需要强制类型转换。但JDK 5.0通过泛型很好的解决了这个问题，在一定程度地简化ThreadLocal的使用，代码清单 9 2就使用了JDK 5.0新的ThreadLocal<t>版本。<br>概括起来说，对于多线程资源共享的问题，同步机制采用了“以时间换空间”的方式，而ThreadLocal采用了“以空间换时间”的方式。前者仅提供一份变量，让不同的线程排队访问，而后者为每一个线程都提供了一份变量，因此可以同时访问而互不影响。<br>　　Spring使用ThreadLocal解决线程安全问题我们知道在一般情况下，只有无状态的Bean才可以在多线程环境下共享，在Spring中，绝大部分Bean都可以声明为singleton作用域。就是因为Spring对一些Bean（如RequestContextHolder、TransactionSynchronizationManager、LocaleContextHolder等）中非线程安全状态采用ThreadLocal进行处理，让它们也成为线程安全的状态，因为有状态的Bean就可以在多线程中共享了。<br>一般的Web应用划分为展现层、服务层和持久层三个层次，在不同的层中编写对应的逻辑，下层通过接口向上层开放功能调用。在一般情况下，从接收请求到返回响应所经过的所有程序调用都同属于一个线程，如图9‑2所示：<br><img src=\"/2017/03/19/java基础/ThreadLocal理解/6a80dba1-4290-4fbc-8ca2-06be465d886a.png\" alt=\"logo\"></t></p>\n<h2 id=\"通通透透理解ThreadLocal\"><a href=\"#通通透透理解ThreadLocal\" class=\"headerlink\" title=\"通通透透理解ThreadLocal\"></a>通通透透理解ThreadLocal</h2><p>　　同一线程贯通三层这样你就可以根据需要，将一些非线程安全的变量以ThreadLocal存放，在同一次请求响应的调用线程中，所有关联的对象引用到的都是同一个变量。<br>下面的实例能够体现Spring对有状态Bean的改造思路：<br>代码清单3 TestDao：非线程安全<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Statement;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestDao</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Connection conn;<span class=\"comment\">// ①一个非线程安全的变量</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addTopic</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">        Statement stat = conn.createStatement();<span class=\"comment\">// ②引用非线程安全变量</span></div><div class=\"line\">        <span class=\"comment\">// …</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>由于①处的conn是成员变量，因为addTopic()方法是非线程安全的，必须在使用时创建一个新TopicDao实例（非singleton）。下面使用ThreadLocal对conn这个非线程安全的“状态”进行改造：<br>代码清单4 TestDao：线程安全<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Statement;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestDaoNew</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// ①使用ThreadLocal保存Connection变量</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;Connection&gt; connThreadLocal = <span class=\"keyword\">new</span> ThreadLocal&lt;Connection&gt;();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// ②如果connThreadLocal没有本线程对应的Connection创建一个新的Connection，</span></div><div class=\"line\">        <span class=\"comment\">// 并将其保存到线程本地变量中。</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (connThreadLocal.get() == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            Connection conn = getConnection();</div><div class=\"line\">            connThreadLocal.set(conn);</div><div class=\"line\">            <span class=\"keyword\">return</span> conn;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> connThreadLocal.get();<span class=\"comment\">// ③直接返回线程本地变量</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addTopic</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// ④从ThreadLocal中获取线程对应的Connection</span></div><div class=\"line\">        Statement stat = getConnection().createStatement();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>不同的线程在使用TopicDao时，先判断connThreadLocal.get()是否是null，如果是null，则说明当前线程还没有对应的Connection对象，这时创建一个Connection对象并添加到本地线程变量中；<br>如果不为null，则说明当前的线程已经拥有了Connection对象，直接使用就可以了。这样，就保证了不同的线程使用线程相关的Connection，而不会使用其它线程的Connection。因此，这个TopicDao就可以做到singleton共享了。<br>当然，这个例子本身很粗糙，将Connection的ThreadLocal直接放在DAO只能做到本DAO的多个方法共享Connection时不发生线程安全问题，但无法和其它DAO共用同一个Connection，要做到同一事务多DAO共享同一Connection，必须在一个共同的外部类使用ThreadLocal保存Connection。</p>\n<p>ConnectionManager.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConnectionManager</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;Connection&gt; connectionHolder = <span class=\"keyword\">new</span> ThreadLocal&lt;Connection&gt;() &#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> Connection <span class=\"title\">initialValue</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            Connection conn = <span class=\"keyword\">null</span>;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                conn = DriverManager.getConnection(</div><div class=\"line\">                        <span class=\"string\">\"jdbc:mysql://localhost:3306/test\"</span>, <span class=\"string\">\"username\"</span>,</div><div class=\"line\">                        <span class=\"string\">\"password\"</span>);</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> conn;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> connectionHolder.get();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setConnection</span><span class=\"params\">(Connection conn)</span> </span>&#123;</div><div class=\"line\">        connectionHolder.set(conn);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>java.lang.ThreadLocal<t>的具体实现<br>那么到底ThreadLocal类是如何实现这种“为每个线程提供不同的变量拷贝”的呢？先来看一下ThreadLocal的set()方法的源码是如何实现的：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\">* Sets the current thread's copy of this thread-local variable</div><div class=\"line\">* to the specified value.  Most subclasses will have no need to</div><div class=\"line\">* override this method, relying solely on the &#123;<span class=\"doctag\">@link</span> #initialValue&#125;</div><div class=\"line\">* method to set the values of thread-locals.</div><div class=\"line\">*</div><div class=\"line\">* <span class=\"doctag\">@param</span> value the value to be stored in the current thread's copy of</div><div class=\"line\">*        this thread-local.</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(T value)</span> </span>&#123;</div><div class=\"line\">   Thread t = Thread.currentThread();</div><div class=\"line\">   ThreadLocalMap map = getMap(t);</div><div class=\"line\">   <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>)</div><div class=\"line\">\t   map.set(<span class=\"keyword\">this</span>, value);</div><div class=\"line\">   <span class=\"keyword\">else</span></div><div class=\"line\">\t   createMap(t, value);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></t></p>\n<p>在这个方法内部我们看到，首先通过getMap(Thread t)方法获取一个和当前线程相关的ThreadLocalMap，然后将变量的值设置到这个ThreadLocalMap对象中，当然如果获取到的ThreadLocalMap对象为空，就通过createMap方法创建。<br>线程隔离的秘密，就在于ThreadLocalMap这个类。ThreadLocalMap是ThreadLocal类的一个静态内部类，它实现了键值对的设置和获取（对比Map对象来理解），每个线程中都有一个独立的ThreadLocalMap副本，它所存储的值，只能被当前线程读取和修改。ThreadLocal类通过操作每一个线程特有的ThreadLocalMap副本，从而实现了变量访问在不同线程中的隔离。因为每个线程的变量都是自己特有的，完全不会有并发错误。还有一点就是，ThreadLocalMap存储的键值对中的键是this对象指向的ThreadLocal对象，而值就是你所设置的对象了。</p>\n<p>为了加深理解，我们接着看上面代码中出现的getMap和createMap方法的实现：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Get the map associated with a ThreadLocal. Overridden in</div><div class=\"line\"> * InheritableThreadLocal.</div><div class=\"line\"> *</div><div class=\"line\"> * <span class=\"doctag\">@param</span>  t the current thread</div><div class=\"line\"> * <span class=\"doctag\">@return</span> the map</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\">ThreadLocalMap <span class=\"title\">getMap</span><span class=\"params\">(Thread t)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> t.threadLocals;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Create the map associated with a ThreadLocal. Overridden in</div><div class=\"line\"> * InheritableThreadLocal.</div><div class=\"line\"> *</div><div class=\"line\"> * <span class=\"doctag\">@param</span> t the current thread</div><div class=\"line\"> * <span class=\"doctag\">@param</span> firstValue value for the initial entry of the map</div><div class=\"line\"> * <span class=\"doctag\">@param</span> map the map to store.</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createMap</span><span class=\"params\">(Thread t, T firstValue)</span> </span>&#123;</div><div class=\"line\">    t.threadLocals = <span class=\"keyword\">new</span> ThreadLocalMap(<span class=\"keyword\">this</span>, firstValue);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>接下来再看一下ThreadLocal类中的get()方法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Returns the value in the current thread's copy of this</div><div class=\"line\"> * thread-local variable.  If the variable has no value for the</div><div class=\"line\"> * current thread, it is first initialized to the value returned</div><div class=\"line\"> * by an invocation of the &#123;<span class=\"doctag\">@link</span> #initialValue&#125; method.</div><div class=\"line\"> *</div><div class=\"line\"> * <span class=\"doctag\">@return</span> the current thread's value of this thread-local</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    Thread t = Thread.currentThread();</div><div class=\"line\">    ThreadLocalMap map = getMap(t);</div><div class=\"line\">    <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        ThreadLocalMap.Entry e = map.getEntry(<span class=\"keyword\">this</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (e != <span class=\"keyword\">null</span>)</div><div class=\"line\">            <span class=\"keyword\">return</span> (T)e.value;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> setInitialValue();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>再来看setInitialValue()方法：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\">    * Variant of set() to establish initialValue. Used instead</div><div class=\"line\">    * of set() in case user has overridden the set() method.</div><div class=\"line\">    *</div><div class=\"line\">    * <span class=\"doctag\">@return</span> the initial value</div><div class=\"line\">    */</div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">private</span> T <span class=\"title\">setInitialValue</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">       T value = initialValue();</div><div class=\"line\">       Thread t = Thread.currentThread();</div><div class=\"line\">       ThreadLocalMap map = getMap(t);</div><div class=\"line\">       <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>)</div><div class=\"line\">           map.set(<span class=\"keyword\">this</span>, value);</div><div class=\"line\">       <span class=\"keyword\">else</span></div><div class=\"line\">           createMap(t, value);</div><div class=\"line\">       <span class=\"keyword\">return</span> value;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure></p>\n<p>获取和当前线程绑定的值时，ThreadLocalMap对象是以this指向的ThreadLocal对象为键进行查找的，这当然和前面set()方法的代码是相呼应的。<br>　　进一步地，我们可以创建不同的ThreadLocal实例来实现多个变量在不同线程间的访问隔离，为什么可以这么做？因为不同的ThreadLocal对象作为不同键，当然也可以在线程的ThreadLocalMap对象中设置不同的值了。通过ThreadLocal对象，在多线程中共享一个值和多个值的区别，就像你在一个HashMap对象中存储一个键值对和多个键值对一样，仅此而已。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>　　ThreadLocal是解决线程安全问题一个很好的思路，它通过为每个线程提供一个独立的变量副本解决了变量并发访问的冲突问题。在很多情况下，ThreadLocal比直接使用synchronized同步机制解决线程安全问题更简单，更方便，且结果程序拥有更高的并发性。<br>ConnectionManager.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConnectionManager</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;Connection&gt; connectionHolder = <span class=\"keyword\">new</span> ThreadLocal&lt;Connection&gt;() &#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> Connection <span class=\"title\">initialValue</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            Connection conn = <span class=\"keyword\">null</span>;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                conn = DriverManager.getConnection(</div><div class=\"line\">                        <span class=\"string\">\"jdbc:mysql://localhost:3306/test\"</span>, <span class=\"string\">\"username\"</span>,</div><div class=\"line\">                        <span class=\"string\">\"password\"</span>);</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> conn;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> connectionHolder.get();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setConnection</span><span class=\"params\">(Connection conn)</span> </span>&#123;</div><div class=\"line\">        connectionHolder.set(conn);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>来源：<a href=\"http://blog.csdn.net/lufeng20/article/details/24314381\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/lufeng20/article/details/24314381</a></p>\n","excerpt":"<h2 id=\"1、ThreadLocal是什么\"><a href=\"#1、ThreadLocal是什么\" class=\"headerlink\" title=\"1、ThreadLocal是什么\"></a>1、ThreadLocal是什么</h2><p>　　早在JDK 1.2的版本中就提供java.lang.ThreadLocal，ThreadLocal为解决多线程程序的并发问题提供了一种新的思路。使用这个工具类可以很简洁地编写出优美的多线程程序。<br>当使用ThreadLocal维护变量时，ThreadLocal为每个使用该变量的线程提供独立的变量副本，所以每一个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本。<br>　　从线程的角度看，目标变量就象是线程的本地变量，这也是类名中“Local”所要表达的意思。<br></p>","more":"<br>ThreadLocal的接口方法<br>ThreadLocal类接口很简单，只有4个方法，我们先来了解一下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(Object value)</span> <span class=\"comment\">//设置当前线程的线程局部变量的值。</span></span></div><div class=\"line\"><span class=\"keyword\">public</span> Object <span class=\"title\">get</span><span class=\"params\">()</span> <span class=\"comment\">//该方法返回当前线程所对应的线程局部变量。</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">()</span> <span class=\"comment\">//将当前线程局部变量的值删除，目的是为了减少内存的占用，该方法是JDK 5.0新增的方法。</span></div><div class=\"line\"><span class=\"comment\">// 需要指出的是，当线程结束后，对应该线程的局部变量将自动被垃圾回收，</span></div><div class=\"line\"><span class=\"comment\">// 所以显式调用该方法清除线程的局部变量并不是必须的操作，但它可以加快内存回收的速度。</span></div><div class=\"line\"><span class=\"keyword\">protected</span> Object <span class=\"title\">initialValue</span><span class=\"params\">()</span> <span class=\"comment\">//返回该线程局部变量的初始值，该方法是一个protected的方法，显然是为了让子类覆盖而设计的。</span></div><div class=\"line\"><span class=\"comment\">// 这个方法是一个延迟调用方法，在线程第1次调用get()或set(Object)时才执行，并且仅执行1次。ThreadLocal中的缺省实现直接返回一个null。</span></div></pre></td></tr></table></figure><p></p>\n<p>ThreadLocal是如何做到为每一个线程维护变量的副本的呢？<br>　　其实实现的思路很简单：在ThreadLocal类中有一个Map，用于存储每一个线程的变量副本，Map中元素的键为线程对象，而值对应线程的变量副本。<br>我们自己就可以提供一个简单的实现版本<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestNum</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//1、定义一个 ThreadLocal 并指定初始值</span></div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;Integer&gt; seqNum = <span class=\"keyword\">new</span> ThreadLocal&lt;Integer&gt;()&#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">protected</span> Integer <span class=\"title\">initialValue</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//2、获得下个序列号</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getNextNum</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t\tseqNum.set(seqNum.get()+<span class=\"number\">1</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> seqNum.get();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\tTestNum seqNum = <span class=\"keyword\">new</span> TestNum();</div><div class=\"line\">\t\t<span class=\"comment\">//3、三个线程共享seqNum对象，各自维护自己的序列号</span></div><div class=\"line\">\t\tTestClient ts1 = <span class=\"keyword\">new</span> TestClient(seqNum);</div><div class=\"line\">\t\tTestClient ts2 = <span class=\"keyword\">new</span> TestClient(seqNum);</div><div class=\"line\">\t\tTestClient ts3 = <span class=\"keyword\">new</span> TestClient(seqNum);</div><div class=\"line\"></div><div class=\"line\">\t\tts1.start();</div><div class=\"line\">\t\tts2.start();</div><div class=\"line\">\t\tts3.start();</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestClient</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t\tTestNum seqNum;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestClient</span><span class=\"params\">(TestNum seqNum)</span></span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">this</span>.seqNum = seqNum;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">3</span>;i++)&#123;</div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"thread[\"</span> + Thread.currentThread().getName() + <span class=\"string\">\"]-- seqNum[\"</span> + seqNum.getNextNum()+<span class=\"string\">\"]\"</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">super</span>.run();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>三个TestClient线程共享一个TestNum对象， 运行结果如下：<br><img src=\"/2017/03/19/java基础/ThreadLocal理解/cf785e60-9c92-4bfb-977c-4e32a114e809.png\" alt=\"logo\"><br>考察输出的结果信息，我们发现每个线程所产生的序号虽然都共享同一个TestNum实例，但它们并没有发生相互干扰的情况，而是各自产生独立的序列号，这是因为我们通过ThreadLocal为每一个线程提供了单独的副本。</p>\n<h2 id=\"Thread同步机制的比较\"><a href=\"#Thread同步机制的比较\" class=\"headerlink\" title=\"Thread同步机制的比较\"></a>Thread同步机制的比较</h2><p>　　ThreadLocal和线程同步机制相比有什么优势呢？<br>　　ThreadLocal和线程同步机制都是为了解决多线程中相同变量的访问冲突问题。<br>　　在同步机制中，通过对象的锁机制保证同一时间只有一个线程访问变量。这时该变量是多个线程共享的，使用同步机制要求程序慎密地分析什么时候对变量进行读写，什么时候需要锁定某个对象，什么时候释放对象锁等繁杂的问题，程序设计和编写难度相对较大。<br>而ThreadLocal则从另一个角度来解决多线程的并发访问。ThreadLocal会为每一个线程提供一个独立的变量副本，从而隔离了多个线程对数据的访问冲突。因为每一个线程都拥有自己的变量副本，从而也就没有必要对该变量进行同步了。<br>ThreadLocal提供了线程安全的共享对象，在编写多线程代码时，可以把不安全的变量封装进ThreadLocal。<br>　　由于ThreadLocal中可以持有任何类型的对象，低版本JDK所提供的get()返回的是Object对象，需要强制类型转换。但JDK 5.0通过泛型很好的解决了这个问题，在一定程度地简化ThreadLocal的使用，代码清单 9 2就使用了JDK 5.0新的ThreadLocal<T>版本。<br>概括起来说，对于多线程资源共享的问题，同步机制采用了“以时间换空间”的方式，而ThreadLocal采用了“以空间换时间”的方式。前者仅提供一份变量，让不同的线程排队访问，而后者为每一个线程都提供了一份变量，因此可以同时访问而互不影响。<br>　　Spring使用ThreadLocal解决线程安全问题我们知道在一般情况下，只有无状态的Bean才可以在多线程环境下共享，在Spring中，绝大部分Bean都可以声明为singleton作用域。就是因为Spring对一些Bean（如RequestContextHolder、TransactionSynchronizationManager、LocaleContextHolder等）中非线程安全状态采用ThreadLocal进行处理，让它们也成为线程安全的状态，因为有状态的Bean就可以在多线程中共享了。<br>一般的Web应用划分为展现层、服务层和持久层三个层次，在不同的层中编写对应的逻辑，下层通过接口向上层开放功能调用。在一般情况下，从接收请求到返回响应所经过的所有程序调用都同属于一个线程，如图9‑2所示：<br><img src=\"/2017/03/19/java基础/ThreadLocal理解/6a80dba1-4290-4fbc-8ca2-06be465d886a.png\" alt=\"logo\"></T></p>\n<h2 id=\"通通透透理解ThreadLocal\"><a href=\"#通通透透理解ThreadLocal\" class=\"headerlink\" title=\"通通透透理解ThreadLocal\"></a>通通透透理解ThreadLocal</h2><p>　　同一线程贯通三层这样你就可以根据需要，将一些非线程安全的变量以ThreadLocal存放，在同一次请求响应的调用线程中，所有关联的对象引用到的都是同一个变量。<br>下面的实例能够体现Spring对有状态Bean的改造思路：<br>代码清单3 TestDao：非线程安全<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Statement;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestDao</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> Connection conn;<span class=\"comment\">// ①一个非线程安全的变量</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addTopic</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">        Statement stat = conn.createStatement();<span class=\"comment\">// ②引用非线程安全变量</span></div><div class=\"line\">        <span class=\"comment\">// …</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>由于①处的conn是成员变量，因为addTopic()方法是非线程安全的，必须在使用时创建一个新TopicDao实例（非singleton）。下面使用ThreadLocal对conn这个非线程安全的“状态”进行改造：<br>代码清单4 TestDao：线程安全<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Statement;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestDaoNew</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// ①使用ThreadLocal保存Connection变量</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;Connection&gt; connThreadLocal = <span class=\"keyword\">new</span> ThreadLocal&lt;Connection&gt;();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// ②如果connThreadLocal没有本线程对应的Connection创建一个新的Connection，</span></div><div class=\"line\">        <span class=\"comment\">// 并将其保存到线程本地变量中。</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (connThreadLocal.get() == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            Connection conn = getConnection();</div><div class=\"line\">            connThreadLocal.set(conn);</div><div class=\"line\">            <span class=\"keyword\">return</span> conn;</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> connThreadLocal.get();<span class=\"comment\">// ③直接返回线程本地变量</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addTopic</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// ④从ThreadLocal中获取线程对应的Connection</span></div><div class=\"line\">        Statement stat = getConnection().createStatement();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>不同的线程在使用TopicDao时，先判断connThreadLocal.get()是否是null，如果是null，则说明当前线程还没有对应的Connection对象，这时创建一个Connection对象并添加到本地线程变量中；<br>如果不为null，则说明当前的线程已经拥有了Connection对象，直接使用就可以了。这样，就保证了不同的线程使用线程相关的Connection，而不会使用其它线程的Connection。因此，这个TopicDao就可以做到singleton共享了。<br>当然，这个例子本身很粗糙，将Connection的ThreadLocal直接放在DAO只能做到本DAO的多个方法共享Connection时不发生线程安全问题，但无法和其它DAO共用同一个Connection，要做到同一事务多DAO共享同一Connection，必须在一个共同的外部类使用ThreadLocal保存Connection。</p>\n<p>ConnectionManager.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConnectionManager</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;Connection&gt; connectionHolder = <span class=\"keyword\">new</span> ThreadLocal&lt;Connection&gt;() &#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> Connection <span class=\"title\">initialValue</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            Connection conn = <span class=\"keyword\">null</span>;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                conn = DriverManager.getConnection(</div><div class=\"line\">                        <span class=\"string\">\"jdbc:mysql://localhost:3306/test\"</span>, <span class=\"string\">\"username\"</span>,</div><div class=\"line\">                        <span class=\"string\">\"password\"</span>);</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> conn;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> connectionHolder.get();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setConnection</span><span class=\"params\">(Connection conn)</span> </span>&#123;</div><div class=\"line\">        connectionHolder.set(conn);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>java.lang.ThreadLocal<T>的具体实现<br>那么到底ThreadLocal类是如何实现这种“为每个线程提供不同的变量拷贝”的呢？先来看一下ThreadLocal的set()方法的源码是如何实现的：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\">* Sets the current thread's copy of this thread-local variable</div><div class=\"line\">* to the specified value.  Most subclasses will have no need to</div><div class=\"line\">* override this method, relying solely on the &#123;<span class=\"doctag\">@link</span> #initialValue&#125;</div><div class=\"line\">* method to set the values of thread-locals.</div><div class=\"line\">*</div><div class=\"line\">* <span class=\"doctag\">@param</span> value the value to be stored in the current thread's copy of</div><div class=\"line\">*        this thread-local.</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">set</span><span class=\"params\">(T value)</span> </span>&#123;</div><div class=\"line\">   Thread t = Thread.currentThread();</div><div class=\"line\">   ThreadLocalMap map = getMap(t);</div><div class=\"line\">   <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>)</div><div class=\"line\">\t   map.set(<span class=\"keyword\">this</span>, value);</div><div class=\"line\">   <span class=\"keyword\">else</span></div><div class=\"line\">\t   createMap(t, value);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></T></p>\n<p>在这个方法内部我们看到，首先通过getMap(Thread t)方法获取一个和当前线程相关的ThreadLocalMap，然后将变量的值设置到这个ThreadLocalMap对象中，当然如果获取到的ThreadLocalMap对象为空，就通过createMap方法创建。<br>线程隔离的秘密，就在于ThreadLocalMap这个类。ThreadLocalMap是ThreadLocal类的一个静态内部类，它实现了键值对的设置和获取（对比Map对象来理解），每个线程中都有一个独立的ThreadLocalMap副本，它所存储的值，只能被当前线程读取和修改。ThreadLocal类通过操作每一个线程特有的ThreadLocalMap副本，从而实现了变量访问在不同线程中的隔离。因为每个线程的变量都是自己特有的，完全不会有并发错误。还有一点就是，ThreadLocalMap存储的键值对中的键是this对象指向的ThreadLocal对象，而值就是你所设置的对象了。</p>\n<p>为了加深理解，我们接着看上面代码中出现的getMap和createMap方法的实现：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Get the map associated with a ThreadLocal. Overridden in</div><div class=\"line\"> * InheritableThreadLocal.</div><div class=\"line\"> *</div><div class=\"line\"> * <span class=\"doctag\">@param</span>  t the current thread</div><div class=\"line\"> * <span class=\"doctag\">@return</span> the map</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\">ThreadLocalMap <span class=\"title\">getMap</span><span class=\"params\">(Thread t)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> t.threadLocals;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Create the map associated with a ThreadLocal. Overridden in</div><div class=\"line\"> * InheritableThreadLocal.</div><div class=\"line\"> *</div><div class=\"line\"> * <span class=\"doctag\">@param</span> t the current thread</div><div class=\"line\"> * <span class=\"doctag\">@param</span> firstValue value for the initial entry of the map</div><div class=\"line\"> * <span class=\"doctag\">@param</span> map the map to store.</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">createMap</span><span class=\"params\">(Thread t, T firstValue)</span> </span>&#123;</div><div class=\"line\">    t.threadLocals = <span class=\"keyword\">new</span> ThreadLocalMap(<span class=\"keyword\">this</span>, firstValue);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>接下来再看一下ThreadLocal类中的get()方法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Returns the value in the current thread's copy of this</div><div class=\"line\"> * thread-local variable.  If the variable has no value for the</div><div class=\"line\"> * current thread, it is first initialized to the value returned</div><div class=\"line\"> * by an invocation of the &#123;<span class=\"doctag\">@link</span> #initialValue&#125; method.</div><div class=\"line\"> *</div><div class=\"line\"> * <span class=\"doctag\">@return</span> the current thread's value of this thread-local</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">get</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    Thread t = Thread.currentThread();</div><div class=\"line\">    ThreadLocalMap map = getMap(t);</div><div class=\"line\">    <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        ThreadLocalMap.Entry e = map.getEntry(<span class=\"keyword\">this</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (e != <span class=\"keyword\">null</span>)</div><div class=\"line\">            <span class=\"keyword\">return</span> (T)e.value;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> setInitialValue();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>再来看setInitialValue()方法：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\">    * Variant of set() to establish initialValue. Used instead</div><div class=\"line\">    * of set() in case user has overridden the set() method.</div><div class=\"line\">    *</div><div class=\"line\">    * <span class=\"doctag\">@return</span> the initial value</div><div class=\"line\">    */</div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">private</span> T <span class=\"title\">setInitialValue</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">       T value = initialValue();</div><div class=\"line\">       Thread t = Thread.currentThread();</div><div class=\"line\">       ThreadLocalMap map = getMap(t);</div><div class=\"line\">       <span class=\"keyword\">if</span> (map != <span class=\"keyword\">null</span>)</div><div class=\"line\">           map.set(<span class=\"keyword\">this</span>, value);</div><div class=\"line\">       <span class=\"keyword\">else</span></div><div class=\"line\">           createMap(t, value);</div><div class=\"line\">       <span class=\"keyword\">return</span> value;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure></p>\n<p>获取和当前线程绑定的值时，ThreadLocalMap对象是以this指向的ThreadLocal对象为键进行查找的，这当然和前面set()方法的代码是相呼应的。<br>　　进一步地，我们可以创建不同的ThreadLocal实例来实现多个变量在不同线程间的访问隔离，为什么可以这么做？因为不同的ThreadLocal对象作为不同键，当然也可以在线程的ThreadLocalMap对象中设置不同的值了。通过ThreadLocal对象，在多线程中共享一个值和多个值的区别，就像你在一个HashMap对象中存储一个键值对和多个键值对一样，仅此而已。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>　　ThreadLocal是解决线程安全问题一个很好的思路，它通过为每个线程提供一个独立的变量副本解决了变量并发访问的冲突问题。在很多情况下，ThreadLocal比直接使用synchronized同步机制解决线程安全问题更简单，更方便，且结果程序拥有更高的并发性。<br>ConnectionManager.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConnectionManager</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ThreadLocal&lt;Connection&gt; connectionHolder = <span class=\"keyword\">new</span> ThreadLocal&lt;Connection&gt;() &#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> Connection <span class=\"title\">initialValue</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            Connection conn = <span class=\"keyword\">null</span>;</div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                conn = DriverManager.getConnection(</div><div class=\"line\">                        <span class=\"string\">\"jdbc:mysql://localhost:3306/test\"</span>, <span class=\"string\">\"username\"</span>,</div><div class=\"line\">                        <span class=\"string\">\"password\"</span>);</div><div class=\"line\">            &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">                e.printStackTrace();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> conn;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> connectionHolder.get();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">setConnection</span><span class=\"params\">(Connection conn)</span> </span>&#123;</div><div class=\"line\">        connectionHolder.set(conn);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>来源：<a href=\"http://blog.csdn.net/lufeng20/article/details/24314381\">http://blog.csdn.net/lufeng20/article/details/24314381</a></p>"},{"title":"HttpServletRequest常用获取URL的方法","date":"2017-03-19T13:21:51.000Z","_content":"　　HttpServletRequest常用获取URL的方法\n1. 获取的方法\n<!--more-->\n```java\nString requestURL = request.getRequestURL().toString(); //返回的是完整的url，包括Http协议，端口号，servlet名字和映射路径，但它不包含请求参数。\nString requestURI = request.getRequestURI();    //得到的是request URL的部分值，并且web容器没有decode过的\nString contextPath = request.getContextPath();    //返回 the context of the request.\nString servletPath = request.getServletPath();    //返回调用servlet的部分url.\nString queryString = request.getQueryString();    //返回url路径后面的查询字符串\n\nlog.info(\"requestURL:\" + requestURL);\nlog.info(\"requestURI:\" + requestURI);\nlog.info(\"contextPath:\" + contextPath);\nlog.info(\"servletPath:\" + servletPath);\nlog.info(\"queryString:\" + queryString);\n```\n2. 上面的例子打印如下\n![7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png](7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png)\n\n\n","source":"_posts/jee/HttpServletRequest常用获取URL的方法.md","raw":"---\ntitle: HttpServletRequest常用获取URL的方法\ndate: 2017-03-19 21:21:51\ncategory: jee\ntags: [HttpServletRequest,URL]\n---\n　　HttpServletRequest常用获取URL的方法\n1. 获取的方法\n<!--more-->\n```java\nString requestURL = request.getRequestURL().toString(); //返回的是完整的url，包括Http协议，端口号，servlet名字和映射路径，但它不包含请求参数。\nString requestURI = request.getRequestURI();    //得到的是request URL的部分值，并且web容器没有decode过的\nString contextPath = request.getContextPath();    //返回 the context of the request.\nString servletPath = request.getServletPath();    //返回调用servlet的部分url.\nString queryString = request.getQueryString();    //返回url路径后面的查询字符串\n\nlog.info(\"requestURL:\" + requestURL);\nlog.info(\"requestURI:\" + requestURI);\nlog.info(\"contextPath:\" + contextPath);\nlog.info(\"servletPath:\" + servletPath);\nlog.info(\"queryString:\" + queryString);\n```\n2. 上面的例子打印如下\n![7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png](7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png)\n\n\n","slug":"jee/HttpServletRequest常用获取URL的方法","published":1,"updated":"2017-03-19T13:28:39.842Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taae5001zr8sye0po3ywp","content":"<p>　　HttpServletRequest常用获取URL的方法</p>\n<ol>\n<li><p>获取的方法</p>\n<a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">String requestURL = request.getRequestURL().toString(); <span class=\"comment\">//返回的是完整的url，包括Http协议，端口号，servlet名字和映射路径，但它不包含请求参数。</span></div><div class=\"line\">String requestURI = request.getRequestURI();    <span class=\"comment\">//得到的是request URL的部分值，并且web容器没有decode过的</span></div><div class=\"line\">String contextPath = request.getContextPath();    <span class=\"comment\">//返回 the context of the request.</span></div><div class=\"line\">String servletPath = request.getServletPath();    <span class=\"comment\">//返回调用servlet的部分url.</span></div><div class=\"line\">String queryString = request.getQueryString();    <span class=\"comment\">//返回url路径后面的查询字符串</span></div><div class=\"line\"></div><div class=\"line\">log.info(<span class=\"string\">\"requestURL:\"</span> + requestURL);</div><div class=\"line\">log.info(<span class=\"string\">\"requestURI:\"</span> + requestURI);</div><div class=\"line\">log.info(<span class=\"string\">\"contextPath:\"</span> + contextPath);</div><div class=\"line\">log.info(<span class=\"string\">\"servletPath:\"</span> + servletPath);</div><div class=\"line\">log.info(<span class=\"string\">\"queryString:\"</span> + queryString);</div></pre></td></tr></table></figure>\n</li>\n<li><p>上面的例子打印如下<br><img src=\"/2017/03/19/jee/HttpServletRequest常用获取URL的方法/7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png\" alt=\"7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png\"></p>\n</li>\n</ol>\n","excerpt":"<p>　　HttpServletRequest常用获取URL的方法</p>\n<ol>\n<li><p>获取的方法</p></li></ol>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">String requestURL = request.getRequestURL().toString(); <span class=\"comment\">//返回的是完整的url，包括Http协议，端口号，servlet名字和映射路径，但它不包含请求参数。</span></div><div class=\"line\">String requestURI = request.getRequestURI();    <span class=\"comment\">//得到的是request URL的部分值，并且web容器没有decode过的</span></div><div class=\"line\">String contextPath = request.getContextPath();    <span class=\"comment\">//返回 the context of the request.</span></div><div class=\"line\">String servletPath = request.getServletPath();    <span class=\"comment\">//返回调用servlet的部分url.</span></div><div class=\"line\">String queryString = request.getQueryString();    <span class=\"comment\">//返回url路径后面的查询字符串</span></div><div class=\"line\"></div><div class=\"line\">log.info(<span class=\"string\">\"requestURL:\"</span> + requestURL);</div><div class=\"line\">log.info(<span class=\"string\">\"requestURI:\"</span> + requestURI);</div><div class=\"line\">log.info(<span class=\"string\">\"contextPath:\"</span> + contextPath);</div><div class=\"line\">log.info(<span class=\"string\">\"servletPath:\"</span> + servletPath);</div><div class=\"line\">log.info(<span class=\"string\">\"queryString:\"</span> + queryString);</div></pre></td></tr></table></figure>\n\n<li><p>上面的例子打印如下<br><img src=\"/2017/03/19/jee/HttpServletRequest常用获取URL的方法/7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png\" alt=\"7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png\"></p>\n</li>\n"},{"title":"decorator（HTML装饰器）","date":"2017-03-20T09:48:35.000Z","_content":"1. 首先这个Decorator解释一下这个单词：“装饰器”，我觉得其实可以这样理解，他就像我们用到的Frame，他把每个页面都有的东东提炼了出来，也可能我们也会用各种各样的include标签，将我们的常用页面给包括进来：比如说页面的top,bottom这些每个页面几乎都有，而且都一样，如果我们在每个页面都include,可以发现我们的程序是多吗的冗余，重复。相比之下装饰器给我们提供了一个较好的选择，他在你要显示的页面根本看不出任何include信息，可以说完全解耦。\n<!--more-->\n2. decorator的原理：\nsitemesh应用Decorator模式，用filter截取request和response,把页面组件head,content,banner、bottom结合为一个完整的视图。通常我们都是用include标签在每个jsp页面中来不断的包含各种header, stylesheet, scripts and footer.\n3. decorator的实现\n- 下载 jar包:  sitemesh-2.4.jar\n- 在我们的web.xml中配置如下信息：\n```xml\n<filter>\n  <filter-name>sitemesh</filter-name>\n     <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>\n  </filter>\n  <filter-mapping>\n     <filter-name>sitemesh</filter-name>\n     <url-pattern>/*</url-pattern>\n </filter-mapping>\n```\n- 在WEB-INF目录下新建一个decorators.xml文件（/decorator是你的包装jsp根路径在这里main.jsp和panel.jsp都是包装jsp,a.jsp，b,jsp是被包装jsp）\ndefaultdir: 包含装饰器页面的目录\npage : 页面文件名\nname : 别名\nrole : 角色，用于安全\nwebapp : 可以另外指定此文件存放目录\nPatterns : 匹配的路径，可以用*,那些被访问的页面需要被装饰。\n```xml\n <decorators defaultdir=\"/decorator\">\n    <decorator name=\"main\" page=\"main.jsp\">\n      <pattern>/page/a.jsp</pattern>\n      <pattern>/page/b.jsp</pattern>\n </decorator>\n <decorator name=\"panel\" page=\"panel.jsp\"></decorator>\n </decorators>\n```\n\n- 建立我们的包装jsp在WEBROOT->decorator下面：这里有两个分别是main.jsp和panel.jsp\n    panel.jsp\n    ```xml\n    <decorator:head />\n    ```\n    插入原始页面(被包装页面)的head标签中的内容(不包括head标签本身)。\n    ```xml\n    <decorator:body />\n    ```\n    插入原始页面(被包装页面)的body标签中的内容。\n    ```xml\n    <decorator:title [ default=\"...\" ] />\n    ```\n    插入原始页面(被包装页面)的title标签中的内容，还可以添加一个缺省值。\n\n- 下面介绍一下<page:applyDecorator name=\"  \" page=\" \">\n其实这里是一样的name指的是我们要用的包装器名字也就是在decorator.xml中定义好的，page指的是被包装页面。\n还有就是<decorator:getProperty property=\"\" [default=\"\"][writeEntireProperty=\"\"]/>\n插入原始页面的property属性指定的值同名的属性。\nproperty:指定那个属性将要被插入\ndefault:如果没有发现指定的属性，则插入此值\nwriteEntireProperty:表示是否将（空格 属性名=“属性值”）整个插入，允许时的值是true或yes或1\n\n\n\n\n\n\n\n","source":"_posts/jee/decorator（HTML装饰器）.md","raw":"---\ntitle: decorator（HTML装饰器）\ndate: 2017-03-20 17:48:35\ncategory: jee\ntags: [decorator]\n---\n1. 首先这个Decorator解释一下这个单词：“装饰器”，我觉得其实可以这样理解，他就像我们用到的Frame，他把每个页面都有的东东提炼了出来，也可能我们也会用各种各样的include标签，将我们的常用页面给包括进来：比如说页面的top,bottom这些每个页面几乎都有，而且都一样，如果我们在每个页面都include,可以发现我们的程序是多吗的冗余，重复。相比之下装饰器给我们提供了一个较好的选择，他在你要显示的页面根本看不出任何include信息，可以说完全解耦。\n<!--more-->\n2. decorator的原理：\nsitemesh应用Decorator模式，用filter截取request和response,把页面组件head,content,banner、bottom结合为一个完整的视图。通常我们都是用include标签在每个jsp页面中来不断的包含各种header, stylesheet, scripts and footer.\n3. decorator的实现\n- 下载 jar包:  sitemesh-2.4.jar\n- 在我们的web.xml中配置如下信息：\n```xml\n<filter>\n  <filter-name>sitemesh</filter-name>\n     <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>\n  </filter>\n  <filter-mapping>\n     <filter-name>sitemesh</filter-name>\n     <url-pattern>/*</url-pattern>\n </filter-mapping>\n```\n- 在WEB-INF目录下新建一个decorators.xml文件（/decorator是你的包装jsp根路径在这里main.jsp和panel.jsp都是包装jsp,a.jsp，b,jsp是被包装jsp）\ndefaultdir: 包含装饰器页面的目录\npage : 页面文件名\nname : 别名\nrole : 角色，用于安全\nwebapp : 可以另外指定此文件存放目录\nPatterns : 匹配的路径，可以用*,那些被访问的页面需要被装饰。\n```xml\n <decorators defaultdir=\"/decorator\">\n    <decorator name=\"main\" page=\"main.jsp\">\n      <pattern>/page/a.jsp</pattern>\n      <pattern>/page/b.jsp</pattern>\n </decorator>\n <decorator name=\"panel\" page=\"panel.jsp\"></decorator>\n </decorators>\n```\n\n- 建立我们的包装jsp在WEBROOT->decorator下面：这里有两个分别是main.jsp和panel.jsp\n    panel.jsp\n    ```xml\n    <decorator:head />\n    ```\n    插入原始页面(被包装页面)的head标签中的内容(不包括head标签本身)。\n    ```xml\n    <decorator:body />\n    ```\n    插入原始页面(被包装页面)的body标签中的内容。\n    ```xml\n    <decorator:title [ default=\"...\" ] />\n    ```\n    插入原始页面(被包装页面)的title标签中的内容，还可以添加一个缺省值。\n\n- 下面介绍一下<page:applyDecorator name=\"  \" page=\" \">\n其实这里是一样的name指的是我们要用的包装器名字也就是在decorator.xml中定义好的，page指的是被包装页面。\n还有就是<decorator:getProperty property=\"\" [default=\"\"][writeEntireProperty=\"\"]/>\n插入原始页面的property属性指定的值同名的属性。\nproperty:指定那个属性将要被插入\ndefault:如果没有发现指定的属性，则插入此值\nwriteEntireProperty:表示是否将（空格 属性名=“属性值”）整个插入，允许时的值是true或yes或1\n\n\n\n\n\n\n\n","slug":"jee/decorator（HTML装饰器）","published":1,"updated":"2017-03-20T09:55:23.228Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taae60022r8sy7f6ylovq","content":"<ol>\n<li>首先这个Decorator解释一下这个单词：“装饰器”，我觉得其实可以这样理解，他就像我们用到的Frame，他把每个页面都有的东东提炼了出来，也可能我们也会用各种各样的include标签，将我们的常用页面给包括进来：比如说页面的top,bottom这些每个页面几乎都有，而且都一样，如果我们在每个页面都include,可以发现我们的程序是多吗的冗余，重复。相比之下装饰器给我们提供了一个较好的选择，他在你要显示的页面根本看不出任何include信息，可以说完全解耦。<a id=\"more\"></a></li>\n<li>decorator的原理：<br>sitemesh应用Decorator模式，用filter截取request和response,把页面组件head,content,banner、bottom结合为一个完整的视图。通常我们都是用include标签在每个jsp页面中来不断的包含各种header, stylesheet, scripts and footer.</li>\n<li>decorator的实现</li>\n</ol>\n<ul>\n<li>下载 jar包:  sitemesh-2.4.jar</li>\n<li><p>在我们的web.xml中配置如下信息：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>sitemesh<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>com.opensymphony.module.sitemesh.filter.PageFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>sitemesh<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>在WEB-INF目录下新建一个decorators.xml文件（/decorator是你的包装jsp根路径在这里main.jsp和panel.jsp都是包装jsp,a.jsp，b,jsp是被包装jsp）<br>defaultdir: 包含装饰器页面的目录<br>page : 页面文件名<br>name : 别名<br>role : 角色，用于安全<br>webapp : 可以另外指定此文件存放目录<br>Patterns : 匹配的路径，可以用*,那些被访问的页面需要被装饰。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">decorators</span> <span class=\"attr\">defaultdir</span>=<span class=\"string\">\"/decorator\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">decorator</span> <span class=\"attr\">name</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">page</span>=<span class=\"string\">\"main.jsp\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>/page/a.jsp<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>/page/b.jsp<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">decorator</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">decorator</span> <span class=\"attr\">name</span>=<span class=\"string\">\"panel\"</span> <span class=\"attr\">page</span>=<span class=\"string\">\"panel.jsp\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">decorator</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">decorators</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>建立我们的包装jsp在WEBROOT-&gt;decorator下面：这里有两个分别是main.jsp和panel.jsp<br>  panel.jsp</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">decorator:head</span> /&gt;</span></div></pre></td></tr></table></figure>\n<p>  插入原始页面(被包装页面)的head标签中的内容(不包括head标签本身)。</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">decorator:body</span> /&gt;</span></div></pre></td></tr></table></figure>\n<p>  插入原始页面(被包装页面)的body标签中的内容。</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">decorator:title</span> [ <span class=\"attr\">default</span>=<span class=\"string\">\"...\"</span> ] /&gt;</span></div></pre></td></tr></table></figure>\n<p>  插入原始页面(被包装页面)的title标签中的内容，还可以添加一个缺省值。</p>\n</li>\n<li><p>下面介绍一下<page:applydecorator name=\"  \" page=\" \"><br>其实这里是一样的name指的是我们要用的包装器名字也就是在decorator.xml中定义好的，page指的是被包装页面。<br>还有就是<decorator:getproperty property=\"\" [default=\"\" ][writeentireproperty=\"\" ]=\"\"><br>插入原始页面的property属性指定的值同名的属性。<br>property:指定那个属性将要被插入<br>default:如果没有发现指定的属性，则插入此值<br>writeEntireProperty:表示是否将（空格 属性名=“属性值”）整个插入，允许时的值是true或yes或1</decorator:getproperty></page:applydecorator></p>\n</li>\n</ul>\n","excerpt":"<ol>\n<li>首先这个Decorator解释一下这个单词：“装饰器”，我觉得其实可以这样理解，他就像我们用到的Frame，他把每个页面都有的东东提炼了出来，也可能我们也会用各种各样的include标签，将我们的常用页面给包括进来：比如说页面的top,bottom这些每个页面几乎都有，而且都一样，如果我们在每个页面都include,可以发现我们的程序是多吗的冗余，重复。相比之下装饰器给我们提供了一个较好的选择，他在你要显示的页面根本看不出任何include信息，可以说完全解耦。</li></ol>","more":"\n<li>decorator的原理：<br>sitemesh应用Decorator模式，用filter截取request和response,把页面组件head,content,banner、bottom结合为一个完整的视图。通常我们都是用include标签在每个jsp页面中来不断的包含各种header, stylesheet, scripts and footer.</li>\n<li>decorator的实现</li>\n\n<ul>\n<li>下载 jar包:  sitemesh-2.4.jar</li>\n<li><p>在我们的web.xml中配置如下信息：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>sitemesh<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>com.opensymphony.module.sitemesh.filter.PageFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>sitemesh<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>在WEB-INF目录下新建一个decorators.xml文件（/decorator是你的包装jsp根路径在这里main.jsp和panel.jsp都是包装jsp,a.jsp，b,jsp是被包装jsp）<br>defaultdir: 包含装饰器页面的目录<br>page : 页面文件名<br>name : 别名<br>role : 角色，用于安全<br>webapp : 可以另外指定此文件存放目录<br>Patterns : 匹配的路径，可以用*,那些被访问的页面需要被装饰。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">decorators</span> <span class=\"attr\">defaultdir</span>=<span class=\"string\">\"/decorator\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">decorator</span> <span class=\"attr\">name</span>=<span class=\"string\">\"main\"</span> <span class=\"attr\">page</span>=<span class=\"string\">\"main.jsp\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>/page/a.jsp<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>/page/b.jsp<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">decorator</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">decorator</span> <span class=\"attr\">name</span>=<span class=\"string\">\"panel\"</span> <span class=\"attr\">page</span>=<span class=\"string\">\"panel.jsp\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">decorator</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">decorators</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>建立我们的包装jsp在WEBROOT-&gt;decorator下面：这里有两个分别是main.jsp和panel.jsp<br>  panel.jsp</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">decorator:head</span> /&gt;</span></div></pre></td></tr></table></figure>\n<p>  插入原始页面(被包装页面)的head标签中的内容(不包括head标签本身)。</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">decorator:body</span> /&gt;</span></div></pre></td></tr></table></figure>\n<p>  插入原始页面(被包装页面)的body标签中的内容。</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">decorator:title</span> [ <span class=\"attr\">default</span>=<span class=\"string\">\"...\"</span> ] /&gt;</span></div></pre></td></tr></table></figure>\n<p>  插入原始页面(被包装页面)的title标签中的内容，还可以添加一个缺省值。</p>\n</li>\n<li><p>下面介绍一下<page:applyDecorator name=\"  \" page=\" \"><br>其实这里是一样的name指的是我们要用的包装器名字也就是在decorator.xml中定义好的，page指的是被包装页面。<br>还有就是<decorator:getProperty property=\"\" [default=\"\" ][writeentireproperty=\"\" ]=\"\"><br>插入原始页面的property属性指定的值同名的属性。<br>property:指定那个属性将要被插入<br>default:如果没有发现指定的属性，则插入此值<br>writeEntireProperty:表示是否将（空格 属性名=“属性值”）整个插入，允许时的值是true或yes或1</decorator:getProperty></page:applyDecorator></p>\n</li>\n</ul>"},{"title":"java订单号（时间加流水号）","date":"2017-03-20T08:15:26.000Z","_content":"```java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.text.DecimalFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\nimport java.util.concurrent.TimeUnit;\npublic class test1 {\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) throws InterruptedException {\n        SerialNumber serial = new FileEveryDaySerialNumber(5, \"EveryDaySerialNumber.dat\");\n        while(true) {\n            System.out.println(serial.getSerialNumber());\n            TimeUnit.SECONDS.sleep(60);\n        }\n    }\n}\nabstract class SerialNumber {\n    public synchronized String getSerialNumber() {\n        return process();\n    }\n    protected abstract String process();\n}\nabstract class EveryDaySerialNumber extends SerialNumber {\n\n    protected final static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMdd\");\n    protected DecimalFormat df = null;\n\n    public EveryDaySerialNumber(int width) {\n        if(width < 1) {\n            throw new IllegalArgumentException(\"Parameter length must be great than 1!\");\n        }\n        char[] chs = new char[width];\n        for(int i = 0; i < width; i++) {\n            chs[i] = '0';\n        }\n        df = new DecimalFormat(new String(chs));\n    }\n\n    protected String process() {\n        Date date = new Date();\n        int n = getOrUpdateNumber(date, 1);\n        return format(date) + format(n);\n    }\n\n    protected String format(Date date) {\n        return sdf.format(date);\n    }\n    protected String format(int num) {\n        return df.format(num);\n    }\n\n\n    protected abstract int getOrUpdateNumber(Date current, int start);\n}\nclass FileEveryDaySerialNumber extends EveryDaySerialNumber {\n\n    private File file = null;\n\n\n    private final static String FIELD_SEPARATOR = \",\";\n    public FileEveryDaySerialNumber(int width, String filename) {\n        super(width);\n        file = new File(filename);\n    }\n    @Override\n    protected int getOrUpdateNumber(Date current, int start) {\n        String date = format(current);\n        int num = start;\n        if(file.exists()) {\n            List<String> list = FileUtil.readList(file);\n            String[] data = list.get(0).split(FIELD_SEPARATOR);\n            if(date.equals(data[0])) {\n                num = Integer.parseInt(data[1]);\n            }\n        }\n        FileUtil.rewrite(file, date + FIELD_SEPARATOR + (num + 1));\n        return num;\n    }\n}\nclass FileUtil {\n    public static void rewrite(File file, String data) {\n        BufferedWriter bw = null;\n        try {\n            bw = new BufferedWriter(new FileWriter(file));\n            bw.write(data);\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if(bw != null) {\n               try {\n                   bw.close();\n               } catch(IOException e) {\n                   e.printStackTrace();\n               }\n            }\n        }\n    }\n\n    public static List<String> readList(File file) {\n        BufferedReader br = null;\n        List<String> data = new ArrayList<String>();\n        try {\n            br = new BufferedReader(new FileReader(file));\n            for(String str = null; (str = br.readLine()) != null; ) {\n                data.add(str);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if(br != null) {\n               try {\n                   br.close();\n               } catch(IOException e) {\n                   e.printStackTrace();\n               }\n            }\n        }\n        return data;\n    }\n}\n```","source":"_posts/jee/java订单号（时间加流水号）.md","raw":"---\ntitle: java订单号（时间加流水号）\ndate: 2017-03-20 16:15:26\ncategory: jee\ntags: [订单号]\n---\n```java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.text.DecimalFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\nimport java.util.concurrent.TimeUnit;\npublic class test1 {\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) throws InterruptedException {\n        SerialNumber serial = new FileEveryDaySerialNumber(5, \"EveryDaySerialNumber.dat\");\n        while(true) {\n            System.out.println(serial.getSerialNumber());\n            TimeUnit.SECONDS.sleep(60);\n        }\n    }\n}\nabstract class SerialNumber {\n    public synchronized String getSerialNumber() {\n        return process();\n    }\n    protected abstract String process();\n}\nabstract class EveryDaySerialNumber extends SerialNumber {\n\n    protected final static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMdd\");\n    protected DecimalFormat df = null;\n\n    public EveryDaySerialNumber(int width) {\n        if(width < 1) {\n            throw new IllegalArgumentException(\"Parameter length must be great than 1!\");\n        }\n        char[] chs = new char[width];\n        for(int i = 0; i < width; i++) {\n            chs[i] = '0';\n        }\n        df = new DecimalFormat(new String(chs));\n    }\n\n    protected String process() {\n        Date date = new Date();\n        int n = getOrUpdateNumber(date, 1);\n        return format(date) + format(n);\n    }\n\n    protected String format(Date date) {\n        return sdf.format(date);\n    }\n    protected String format(int num) {\n        return df.format(num);\n    }\n\n\n    protected abstract int getOrUpdateNumber(Date current, int start);\n}\nclass FileEveryDaySerialNumber extends EveryDaySerialNumber {\n\n    private File file = null;\n\n\n    private final static String FIELD_SEPARATOR = \",\";\n    public FileEveryDaySerialNumber(int width, String filename) {\n        super(width);\n        file = new File(filename);\n    }\n    @Override\n    protected int getOrUpdateNumber(Date current, int start) {\n        String date = format(current);\n        int num = start;\n        if(file.exists()) {\n            List<String> list = FileUtil.readList(file);\n            String[] data = list.get(0).split(FIELD_SEPARATOR);\n            if(date.equals(data[0])) {\n                num = Integer.parseInt(data[1]);\n            }\n        }\n        FileUtil.rewrite(file, date + FIELD_SEPARATOR + (num + 1));\n        return num;\n    }\n}\nclass FileUtil {\n    public static void rewrite(File file, String data) {\n        BufferedWriter bw = null;\n        try {\n            bw = new BufferedWriter(new FileWriter(file));\n            bw.write(data);\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if(bw != null) {\n               try {\n                   bw.close();\n               } catch(IOException e) {\n                   e.printStackTrace();\n               }\n            }\n        }\n    }\n\n    public static List<String> readList(File file) {\n        BufferedReader br = null;\n        List<String> data = new ArrayList<String>();\n        try {\n            br = new BufferedReader(new FileReader(file));\n            for(String str = null; (str = br.readLine()) != null; ) {\n                data.add(str);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            if(br != null) {\n               try {\n                   br.close();\n               } catch(IOException e) {\n                   e.printStackTrace();\n               }\n            }\n        }\n        return data;\n    }\n}\n```","slug":"jee/java订单号（时间加流水号）","published":1,"updated":"2017-03-20T08:16:54.083Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taae80026r8syrtiyyogc","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileWriter;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.DecimalFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test1</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * <span class=\"doctag\">@param</span> args</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</div><div class=\"line\">        SerialNumber serial = <span class=\"keyword\">new</span> FileEveryDaySerialNumber(<span class=\"number\">5</span>, <span class=\"string\">\"EveryDaySerialNumber.dat\"</span>);</div><div class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            System.out.println(serial.getSerialNumber());</div><div class=\"line\">            TimeUnit.SECONDS.sleep(<span class=\"number\">60</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SerialNumber</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> String <span class=\"title\">getSerialNumber</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> process();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> String <span class=\"title\">process</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EveryDaySerialNumber</span> <span class=\"keyword\">extends</span> <span class=\"title\">SerialNumber</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> SimpleDateFormat sdf = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyyMMdd\"</span>);</div><div class=\"line\">    <span class=\"keyword\">protected</span> DecimalFormat df = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">EveryDaySerialNumber</span><span class=\"params\">(<span class=\"keyword\">int</span> width)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(width &lt; <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">\"Parameter length must be great than 1!\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">char</span>[] chs = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[width];</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; width; i++) &#123;</div><div class=\"line\">            chs[i] = <span class=\"string\">'0'</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        df = <span class=\"keyword\">new</span> DecimalFormat(<span class=\"keyword\">new</span> String(chs));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">process</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        Date date = <span class=\"keyword\">new</span> Date();</div><div class=\"line\">        <span class=\"keyword\">int</span> n = getOrUpdateNumber(date, <span class=\"number\">1</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> format(date) + format(n);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">format</span><span class=\"params\">(Date date)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> sdf.format(date);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">format</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> df.format(num);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrUpdateNumber</span><span class=\"params\">(Date current, <span class=\"keyword\">int</span> start)</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileEveryDaySerialNumber</span> <span class=\"keyword\">extends</span> <span class=\"title\">EveryDaySerialNumber</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> File file = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String FIELD_SEPARATOR = <span class=\"string\">\",\"</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FileEveryDaySerialNumber</span><span class=\"params\">(<span class=\"keyword\">int</span> width, String filename)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(width);</div><div class=\"line\">        file = <span class=\"keyword\">new</span> File(filename);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrUpdateNumber</span><span class=\"params\">(Date current, <span class=\"keyword\">int</span> start)</span> </span>&#123;</div><div class=\"line\">        String date = format(current);</div><div class=\"line\">        <span class=\"keyword\">int</span> num = start;</div><div class=\"line\">        <span class=\"keyword\">if</span>(file.exists()) &#123;</div><div class=\"line\">            List&lt;String&gt; list = FileUtil.readList(file);</div><div class=\"line\">            String[] data = list.get(<span class=\"number\">0</span>).split(FIELD_SEPARATOR);</div><div class=\"line\">            <span class=\"keyword\">if</span>(date.equals(data[<span class=\"number\">0</span>])) &#123;</div><div class=\"line\">                num = Integer.parseInt(data[<span class=\"number\">1</span>]);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        FileUtil.rewrite(file, date + FIELD_SEPARATOR + (num + <span class=\"number\">1</span>));</div><div class=\"line\">        <span class=\"keyword\">return</span> num;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileUtil</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">rewrite</span><span class=\"params\">(File file, String data)</span> </span>&#123;</div><div class=\"line\">        BufferedWriter bw = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            bw = <span class=\"keyword\">new</span> BufferedWriter(<span class=\"keyword\">new</span> FileWriter(file));</div><div class=\"line\">            bw.write(data);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(bw != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">               <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                   bw.close();</div><div class=\"line\">               &#125; <span class=\"keyword\">catch</span>(IOException e) &#123;</div><div class=\"line\">                   e.printStackTrace();</div><div class=\"line\">               &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List&lt;String&gt; <span class=\"title\">readList</span><span class=\"params\">(File file)</span> </span>&#123;</div><div class=\"line\">        BufferedReader br = <span class=\"keyword\">null</span>;</div><div class=\"line\">        List&lt;String&gt; data = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> FileReader(file));</div><div class=\"line\">            <span class=\"keyword\">for</span>(String str = <span class=\"keyword\">null</span>; (str = br.readLine()) != <span class=\"keyword\">null</span>; ) &#123;</div><div class=\"line\">                data.add(str);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(br != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">               <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                   br.close();</div><div class=\"line\">               &#125; <span class=\"keyword\">catch</span>(IOException e) &#123;</div><div class=\"line\">                   e.printStackTrace();</div><div class=\"line\">               &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> data;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedWriter;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileReader;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileWriter;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.DecimalFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.List;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test1</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * <span class=\"doctag\">@param</span> args</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</div><div class=\"line\">        SerialNumber serial = <span class=\"keyword\">new</span> FileEveryDaySerialNumber(<span class=\"number\">5</span>, <span class=\"string\">\"EveryDaySerialNumber.dat\"</span>);</div><div class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            System.out.println(serial.getSerialNumber());</div><div class=\"line\">            TimeUnit.SECONDS.sleep(<span class=\"number\">60</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SerialNumber</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">synchronized</span> String <span class=\"title\">getSerialNumber</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> process();</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> String <span class=\"title\">process</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EveryDaySerialNumber</span> <span class=\"keyword\">extends</span> <span class=\"title\">SerialNumber</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> SimpleDateFormat sdf = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyyMMdd\"</span>);</div><div class=\"line\">    <span class=\"keyword\">protected</span> DecimalFormat df = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">EveryDaySerialNumber</span><span class=\"params\">(<span class=\"keyword\">int</span> width)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(width &lt; <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">\"Parameter length must be great than 1!\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">char</span>[] chs = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[width];</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; width; i++) &#123;</div><div class=\"line\">            chs[i] = <span class=\"string\">'0'</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        df = <span class=\"keyword\">new</span> DecimalFormat(<span class=\"keyword\">new</span> String(chs));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">process</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        Date date = <span class=\"keyword\">new</span> Date();</div><div class=\"line\">        <span class=\"keyword\">int</span> n = getOrUpdateNumber(date, <span class=\"number\">1</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> format(date) + format(n);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">format</span><span class=\"params\">(Date date)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> sdf.format(date);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> String <span class=\"title\">format</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> df.format(num);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrUpdateNumber</span><span class=\"params\">(Date current, <span class=\"keyword\">int</span> start)</span></span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileEveryDaySerialNumber</span> <span class=\"keyword\">extends</span> <span class=\"title\">EveryDaySerialNumber</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> File file = <span class=\"keyword\">null</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String FIELD_SEPARATOR = <span class=\"string\">\",\"</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FileEveryDaySerialNumber</span><span class=\"params\">(<span class=\"keyword\">int</span> width, String filename)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(width);</div><div class=\"line\">        file = <span class=\"keyword\">new</span> File(filename);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrUpdateNumber</span><span class=\"params\">(Date current, <span class=\"keyword\">int</span> start)</span> </span>&#123;</div><div class=\"line\">        String date = format(current);</div><div class=\"line\">        <span class=\"keyword\">int</span> num = start;</div><div class=\"line\">        <span class=\"keyword\">if</span>(file.exists()) &#123;</div><div class=\"line\">            List&lt;String&gt; list = FileUtil.readList(file);</div><div class=\"line\">            String[] data = list.get(<span class=\"number\">0</span>).split(FIELD_SEPARATOR);</div><div class=\"line\">            <span class=\"keyword\">if</span>(date.equals(data[<span class=\"number\">0</span>])) &#123;</div><div class=\"line\">                num = Integer.parseInt(data[<span class=\"number\">1</span>]);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        FileUtil.rewrite(file, date + FIELD_SEPARATOR + (num + <span class=\"number\">1</span>));</div><div class=\"line\">        <span class=\"keyword\">return</span> num;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileUtil</span> </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">rewrite</span><span class=\"params\">(File file, String data)</span> </span>&#123;</div><div class=\"line\">        BufferedWriter bw = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            bw = <span class=\"keyword\">new</span> BufferedWriter(<span class=\"keyword\">new</span> FileWriter(file));</div><div class=\"line\">            bw.write(data);</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(bw != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">               <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                   bw.close();</div><div class=\"line\">               &#125; <span class=\"keyword\">catch</span>(IOException e) &#123;</div><div class=\"line\">                   e.printStackTrace();</div><div class=\"line\">               &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List&lt;String&gt; <span class=\"title\">readList</span><span class=\"params\">(File file)</span> </span>&#123;</div><div class=\"line\">        BufferedReader br = <span class=\"keyword\">null</span>;</div><div class=\"line\">        List&lt;String&gt; data = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> FileReader(file));</div><div class=\"line\">            <span class=\"keyword\">for</span>(String str = <span class=\"keyword\">null</span>; (str = br.readLine()) != <span class=\"keyword\">null</span>; ) &#123;</div><div class=\"line\">                data.add(str);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(br != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">               <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">                   br.close();</div><div class=\"line\">               &#125; <span class=\"keyword\">catch</span>(IOException e) &#123;</div><div class=\"line\">                   e.printStackTrace();</div><div class=\"line\">               &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> data;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"jsp页面格式化显示double数据","date":"2017-03-20T08:48:10.000Z","_content":"```jsp\n<fmt:formatNumber>\n    此标签会根据区域定制的方式将数字格式化成数字，货币，百分比。\n    此标签的属性：\n    value:要格式化的数字\n    type：按照什么类型格式化\n    pattern：自定义格式化样式\n    currencyCode:ISO-4721货币代码，只适用于按照货币格式化的数字\n    currencySymbol： 货币符号,如￥,只适用于按照货币格式化的数字\n    groupingUsed： 是否包含分隔符\n    maxIntegerDigits： 整数部分最多显示多少位\n    mixIntegerDigits： 整数部分最少显示多少位\n    maxFractionDigits： 小数部分最多显示多位位\n    minFractionDigits： 小数部分最少显示多位位\n    var:存储格式化后的结果\n    scope: 存储的范围\n```\npattern 符号意义:\n\n|符号     |             意义|\n|:---------:|:---------------:|\n|0          |            一个数位|\n|#          |           一个数位，前导零和追尾零不显示|\n|.          |             小数点分割位置|\n|，         |             组分隔符的位置|\n|-          |            负数前缀|\n|%          |          用100乘，并显示百分号|\n|其他任何符号|    在输出字符串中包括指定符号|\n\n\n","source":"_posts/jee/jsp页面格式化显示double数据.md","raw":"---\ntitle: jsp页面格式化显示double数据\ndate: 2017-03-20 16:48:10\ncategory: jee\ntags: [jee,double]\n---\n```jsp\n<fmt:formatNumber>\n    此标签会根据区域定制的方式将数字格式化成数字，货币，百分比。\n    此标签的属性：\n    value:要格式化的数字\n    type：按照什么类型格式化\n    pattern：自定义格式化样式\n    currencyCode:ISO-4721货币代码，只适用于按照货币格式化的数字\n    currencySymbol： 货币符号,如￥,只适用于按照货币格式化的数字\n    groupingUsed： 是否包含分隔符\n    maxIntegerDigits： 整数部分最多显示多少位\n    mixIntegerDigits： 整数部分最少显示多少位\n    maxFractionDigits： 小数部分最多显示多位位\n    minFractionDigits： 小数部分最少显示多位位\n    var:存储格式化后的结果\n    scope: 存储的范围\n```\npattern 符号意义:\n\n|符号     |             意义|\n|:---------:|:---------------:|\n|0          |            一个数位|\n|#          |           一个数位，前导零和追尾零不显示|\n|.          |             小数点分割位置|\n|，         |             组分隔符的位置|\n|-          |            负数前缀|\n|%          |          用100乘，并显示百分号|\n|其他任何符号|    在输出字符串中包括指定符号|\n\n\n","slug":"jee/jsp页面格式化显示double数据","published":1,"updated":"2017-03-20T08:59:40.528Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaeb002ar8sy6d8d95ha","content":"<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;fmt:formatNumber&gt;</div><div class=\"line\">    此标签会根据区域定制的方式将数字格式化成数字，货币，百分比。</div><div class=\"line\">    此标签的属性：</div><div class=\"line\">    value:要格式化的数字</div><div class=\"line\">    type：按照什么类型格式化</div><div class=\"line\">    pattern：自定义格式化样式</div><div class=\"line\">    currencyCode:ISO-<span class=\"number\">4721</span>货币代码，只适用于按照货币格式化的数字</div><div class=\"line\">    currencySymbol： 货币符号,如￥,只适用于按照货币格式化的数字</div><div class=\"line\">    groupingUsed： 是否包含分隔符</div><div class=\"line\">    maxIntegerDigits： 整数部分最多显示多少位</div><div class=\"line\">    mixIntegerDigits： 整数部分最少显示多少位</div><div class=\"line\">    maxFractionDigits： 小数部分最多显示多位位</div><div class=\"line\">    minFractionDigits： 小数部分最少显示多位位</div><div class=\"line\">    var:存储格式化后的结果</div><div class=\"line\">    scope: 存储的范围</div></pre></td></tr></table></figure>\n<p>pattern 符号意义:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">一个数位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">#</td>\n<td style=\"text-align:center\">一个数位，前导零和追尾零不显示</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\">小数点分割位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">，</td>\n<td style=\"text-align:center\">组分隔符的位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">负数前缀</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%</td>\n<td style=\"text-align:center\">用100乘，并显示百分号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">其他任何符号</td>\n<td style=\"text-align:center\">在输出字符串中包括指定符号</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;fmt:formatNumber&gt;</div><div class=\"line\">    此标签会根据区域定制的方式将数字格式化成数字，货币，百分比。</div><div class=\"line\">    此标签的属性：</div><div class=\"line\">    value:要格式化的数字</div><div class=\"line\">    type：按照什么类型格式化</div><div class=\"line\">    pattern：自定义格式化样式</div><div class=\"line\">    currencyCode:ISO-<span class=\"number\">4721</span>货币代码，只适用于按照货币格式化的数字</div><div class=\"line\">    currencySymbol： 货币符号,如￥,只适用于按照货币格式化的数字</div><div class=\"line\">    groupingUsed： 是否包含分隔符</div><div class=\"line\">    maxIntegerDigits： 整数部分最多显示多少位</div><div class=\"line\">    mixIntegerDigits： 整数部分最少显示多少位</div><div class=\"line\">    maxFractionDigits： 小数部分最多显示多位位</div><div class=\"line\">    minFractionDigits： 小数部分最少显示多位位</div><div class=\"line\">    var:存储格式化后的结果</div><div class=\"line\">    scope: 存储的范围</div></pre></td></tr></table></figure>\n<p>pattern 符号意义:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">一个数位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">#</td>\n<td style=\"text-align:center\">一个数位，前导零和追尾零不显示</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\">小数点分割位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">，</td>\n<td style=\"text-align:center\">组分隔符的位置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">负数前缀</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%</td>\n<td style=\"text-align:center\">用100乘，并显示百分号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">其他任何符号</td>\n<td style=\"text-align:center\">在输出字符串中包括指定符号</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"mybatis在xml文件中处理大于号小于号的方法","date":"2017-03-17T07:19:12.000Z","_content":"mybatis在xml文件中处理大于号小于号的方法\n<!--more-->\n## 第一种方法：\n用了转义字符把>和<替换掉，然后就没有问题了。\n附：XML转义字符\n\n| 转义符  | 符号    | 说明  |\n| :-----: |:------:| :-----:|\n|&lt;    | <       |小于号  |\n|&gt;    | >       |大于号  |\n|&amp;   | &       |和     |\n|&apos;  |’       | 单引号 |\n|&quot;  |\"        |双引号  |\n\n## 第二种方法：\n因为这个是xml格式的，所以不允许出现类似“>”这样的字符，但是都可以使用<![CDATA[ ]]>符号进行说明，将此类符号不进行解析\n你的可以写成这个：\nmapper文件示例代码\n```xml\n<![CDATA[ when min(starttime)<='12:00' and max(endtime)<='12:00' ]]>\n```\n","source":"_posts/mybatis/mybatis在xml文件中处理大于号小于号的方法.md","raw":"---\ntitle: mybatis在xml文件中处理大于号小于号的方法\ndate: 2017-03-17 15:19:12\ncategory: mybatis\ntags: [mybatis]\n---\nmybatis在xml文件中处理大于号小于号的方法\n<!--more-->\n## 第一种方法：\n用了转义字符把>和<替换掉，然后就没有问题了。\n附：XML转义字符\n\n| 转义符  | 符号    | 说明  |\n| :-----: |:------:| :-----:|\n|&lt;    | <       |小于号  |\n|&gt;    | >       |大于号  |\n|&amp;   | &       |和     |\n|&apos;  |’       | 单引号 |\n|&quot;  |\"        |双引号  |\n\n## 第二种方法：\n因为这个是xml格式的，所以不允许出现类似“>”这样的字符，但是都可以使用<![CDATA[ ]]>符号进行说明，将此类符号不进行解析\n你的可以写成这个：\nmapper文件示例代码\n```xml\n<![CDATA[ when min(starttime)<='12:00' and max(endtime)<='12:00' ]]>\n```\n","slug":"mybatis/mybatis在xml文件中处理大于号小于号的方法","published":1,"updated":"2017-03-17T07:44:53.520Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaed002dr8sy1w0l6r3c","content":"<p>mybatis在xml文件中处理大于号小于号的方法<br><a id=\"more\"></a></p>\n<h2 id=\"第一种方法：\"><a href=\"#第一种方法：\" class=\"headerlink\" title=\"第一种方法：\"></a>第一种方法：</h2><p>用了转义字符把&gt;和&lt;替换掉，然后就没有问题了。<br>附：XML转义字符</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">转义符</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">小于号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">大于号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">和</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&apos;</td>\n<td style=\"text-align:center\">’</td>\n<td style=\"text-align:center\">单引号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&quot;</td>\n<td style=\"text-align:center\">“</td>\n<td style=\"text-align:center\">双引号</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"第二种方法：\"><a href=\"#第二种方法：\" class=\"headerlink\" title=\"第二种方法：\"></a>第二种方法：</h2><p>因为这个是xml格式的，所以不允许出现类似“&gt;”这样的字符，但是都可以使用&lt;![CDATA[ ]]&gt;符号进行说明，将此类符号不进行解析<br>你的可以写成这个：<br>mapper文件示例代码<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;![CDATA[ when min(starttime)&lt;='12:00' and max(endtime)&lt;='12:00' ]]&gt;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>mybatis在xml文件中处理大于号小于号的方法<br></p>","more":"<p></p>\n<h2 id=\"第一种方法：\"><a href=\"#第一种方法：\" class=\"headerlink\" title=\"第一种方法：\"></a>第一种方法：</h2><p>用了转义字符把&gt;和&lt;替换掉，然后就没有问题了。<br>附：XML转义字符</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">转义符</th>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">小于号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">大于号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">和</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&apos;</td>\n<td style=\"text-align:center\">’</td>\n<td style=\"text-align:center\">单引号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&quot;</td>\n<td style=\"text-align:center\">“</td>\n<td style=\"text-align:center\">双引号</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"第二种方法：\"><a href=\"#第二种方法：\" class=\"headerlink\" title=\"第二种方法：\"></a>第二种方法：</h2><p>因为这个是xml格式的，所以不允许出现类似“&gt;”这样的字符，但是都可以使用&lt;![CDATA[ ]]&gt;符号进行说明，将此类符号不进行解析<br>你的可以写成这个：<br>mapper文件示例代码<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;![CDATA[ when min(starttime)&lt;='12:00' and max(endtime)&lt;='12:00' ]]&gt;</div></pre></td></tr></table></figure></p>"},{"title":"idea新建多模块maven项目（树结构和水平结构）","date":"2017-03-17T03:34:40.000Z","_content":"## Maven可以创建两种结构的多模块项目，一个是树形结构，一个是水平结构，下面看图了解它们的区别：\n<!--more-->\n![logo](82811fb4-084a-471a-a470-12957c376cd4.png)\n 水平结构和树形结构，就创建过程来说，没有什么区别，就是module的路径修改一下就可以互相转化了。\n\n## 具体步骤\n### 新建一个父工程\n      File->new-->project，选择Maven，建立一个最普通的maven项目\n### 右键创建好的tree父项目-->new-->module-->maven，这里的创建过程就和上面的类似了\n（备注：如果是水平项目则在同个目录下）\n树形结构的项目结构:\n/tree\n/tree/tree-dao\n/tree/tree-service\n\n水平结构的项目结构:\n/horizon\n/horizon-dao\n/horizon-service\n\n","source":"_posts/maven/idea新建多模块maven项目（树结构和水平结构）.md","raw":"---\ntitle: idea新建多模块maven项目（树结构和水平结构）\ndate: 2017-03-17 11:34:40\ncategory: maven\ntags: [maven]\n---\n## Maven可以创建两种结构的多模块项目，一个是树形结构，一个是水平结构，下面看图了解它们的区别：\n<!--more-->\n![logo](82811fb4-084a-471a-a470-12957c376cd4.png)\n 水平结构和树形结构，就创建过程来说，没有什么区别，就是module的路径修改一下就可以互相转化了。\n\n## 具体步骤\n### 新建一个父工程\n      File->new-->project，选择Maven，建立一个最普通的maven项目\n### 右键创建好的tree父项目-->new-->module-->maven，这里的创建过程就和上面的类似了\n（备注：如果是水平项目则在同个目录下）\n树形结构的项目结构:\n/tree\n/tree/tree-dao\n/tree/tree-service\n\n水平结构的项目结构:\n/horizon\n/horizon-dao\n/horizon-service\n\n","slug":"maven/idea新建多模块maven项目（树结构和水平结构）","published":1,"updated":"2017-03-17T03:38:05.719Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaef002fr8syl2ww91hc","content":"<h2 id=\"Maven可以创建两种结构的多模块项目，一个是树形结构，一个是水平结构，下面看图了解它们的区别：\"><a href=\"#Maven可以创建两种结构的多模块项目，一个是树形结构，一个是水平结构，下面看图了解它们的区别：\" class=\"headerlink\" title=\"Maven可以创建两种结构的多模块项目，一个是树形结构，一个是水平结构，下面看图了解它们的区别：\"></a>Maven可以创建两种结构的多模块项目，一个是树形结构，一个是水平结构，下面看图了解它们的区别：</h2><a id=\"more\"></a>\n<p><img src=\"/2017/03/17/maven/idea新建多模块maven项目（树结构和水平结构）/82811fb4-084a-471a-a470-12957c376cd4.png\" alt=\"logo\"><br> 水平结构和树形结构，就创建过程来说，没有什么区别，就是module的路径修改一下就可以互相转化了。</p>\n<h2 id=\"具体步骤\"><a href=\"#具体步骤\" class=\"headerlink\" title=\"具体步骤\"></a>具体步骤</h2><h3 id=\"新建一个父工程\"><a href=\"#新建一个父工程\" class=\"headerlink\" title=\"新建一个父工程\"></a>新建一个父工程</h3><pre><code>File-&gt;new--&gt;project，选择Maven，建立一个最普通的maven项目\n</code></pre><h3 id=\"右键创建好的tree父项目–-gt-new–-gt-module–-gt-maven，这里的创建过程就和上面的类似了\"><a href=\"#右键创建好的tree父项目–-gt-new–-gt-module–-gt-maven，这里的创建过程就和上面的类似了\" class=\"headerlink\" title=\"右键创建好的tree父项目–&gt;new–&gt;module–&gt;maven，这里的创建过程就和上面的类似了\"></a>右键创建好的tree父项目–&gt;new–&gt;module–&gt;maven，这里的创建过程就和上面的类似了</h3><p>（备注：如果是水平项目则在同个目录下）<br>树形结构的项目结构:<br>/tree<br>/tree/tree-dao<br>/tree/tree-service</p>\n<p>水平结构的项目结构:<br>/horizon<br>/horizon-dao<br>/horizon-service</p>\n","excerpt":"<h2 id=\"Maven可以创建两种结构的多模块项目，一个是树形结构，一个是水平结构，下面看图了解它们的区别：\"><a href=\"#Maven可以创建两种结构的多模块项目，一个是树形结构，一个是水平结构，下面看图了解它们的区别：\" class=\"headerlink\" title=\"Maven可以创建两种结构的多模块项目，一个是树形结构，一个是水平结构，下面看图了解它们的区别：\"></a>Maven可以创建两种结构的多模块项目，一个是树形结构，一个是水平结构，下面看图了解它们的区别：</h2>","more":"<p><img src=\"/2017/03/17/maven/idea新建多模块maven项目（树结构和水平结构）/82811fb4-084a-471a-a470-12957c376cd4.png\" alt=\"logo\"><br> 水平结构和树形结构，就创建过程来说，没有什么区别，就是module的路径修改一下就可以互相转化了。</p>\n<h2 id=\"具体步骤\"><a href=\"#具体步骤\" class=\"headerlink\" title=\"具体步骤\"></a>具体步骤</h2><h3 id=\"新建一个父工程\"><a href=\"#新建一个父工程\" class=\"headerlink\" title=\"新建一个父工程\"></a>新建一个父工程</h3><pre><code>File-&gt;new--&gt;project，选择Maven，建立一个最普通的maven项目\n</code></pre><h3 id=\"右键创建好的tree父项目–-gt-new–-gt-module–-gt-maven，这里的创建过程就和上面的类似了\"><a href=\"#右键创建好的tree父项目–-gt-new–-gt-module–-gt-maven，这里的创建过程就和上面的类似了\" class=\"headerlink\" title=\"右键创建好的tree父项目–&gt;new–&gt;module–&gt;maven，这里的创建过程就和上面的类似了\"></a>右键创建好的tree父项目–&gt;new–&gt;module–&gt;maven，这里的创建过程就和上面的类似了</h3><p>（备注：如果是水平项目则在同个目录下）<br>树形结构的项目结构:<br>/tree<br>/tree/tree-dao<br>/tree/tree-service</p>\n<p>水平结构的项目结构:<br>/horizon<br>/horizon-dao<br>/horizon-service</p>"},{"title":"maven创建普通web项目","date":"2017-03-17T03:21:40.000Z","_content":"## 进入命令行，执行：\n``` shell\nmvn archetype:generate -DgroupId=com.jjs.app -DartifactId=my-web-app -DarchetypeArtifactId=maven-archetype-webapp -DinteractivMode=false -DarchetypeCatalog=internal\n```\n<!--more-->\n出现一些版本号确认等直接回车就行，构建成功出现下面的提示。\n![logo](e4dd0c75-7d51-4b91-a4c0-7a401477c461.png)\n当然，这只是一个简单的web项目\n## 运行\n用jetty运行\n在pom文件集成jetty插件\n```shell\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.jjs.app</groupId>\n  <artifactId>my-web-app</artifactId>\n  <packaging>war</packaging>\n  <version>1.0-SNAPSHOT</version>\n  <name>my-web-app Maven Webapp</name>\n  <url>http://maven.apache.org</url>\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>3.8.1</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  <build>\n    <finalName>my-web-app</finalName>\n    <pluginManagement>\n        <!--配置Jetty-->\n          <plugins>\n            <plugin>\n             <groupId>org.mortbay.jetty</groupId>\n             <artifactId>maven-jetty-plugin</artifactId>\n            </plugin>\n          </plugins>\n    </pluginManagement>\n  </build>\n</project>\n```\n然后执行：mvn jetty:run 就可以在8080端口上访问应用了。\nhttp://127.0.0.1:8080/my-web-app/index.jsp\n\n","source":"_posts/maven/maven创建普通web项目.md","raw":"---\ntitle: maven创建普通web项目\ndate: 2017-03-17 11:21:40\ncategory: maven\ntags: [maven]\n---\n## 进入命令行，执行：\n``` shell\nmvn archetype:generate -DgroupId=com.jjs.app -DartifactId=my-web-app -DarchetypeArtifactId=maven-archetype-webapp -DinteractivMode=false -DarchetypeCatalog=internal\n```\n<!--more-->\n出现一些版本号确认等直接回车就行，构建成功出现下面的提示。\n![logo](e4dd0c75-7d51-4b91-a4c0-7a401477c461.png)\n当然，这只是一个简单的web项目\n## 运行\n用jetty运行\n在pom文件集成jetty插件\n```shell\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.jjs.app</groupId>\n  <artifactId>my-web-app</artifactId>\n  <packaging>war</packaging>\n  <version>1.0-SNAPSHOT</version>\n  <name>my-web-app Maven Webapp</name>\n  <url>http://maven.apache.org</url>\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>3.8.1</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  <build>\n    <finalName>my-web-app</finalName>\n    <pluginManagement>\n        <!--配置Jetty-->\n          <plugins>\n            <plugin>\n             <groupId>org.mortbay.jetty</groupId>\n             <artifactId>maven-jetty-plugin</artifactId>\n            </plugin>\n          </plugins>\n    </pluginManagement>\n  </build>\n</project>\n```\n然后执行：mvn jetty:run 就可以在8080端口上访问应用了。\nhttp://127.0.0.1:8080/my-web-app/index.jsp\n\n","slug":"maven/maven创建普通web项目","published":1,"updated":"2017-03-17T03:31:09.453Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaeh002jr8syo74v5i4v","content":"<h2 id=\"进入命令行，执行：\"><a href=\"#进入命令行，执行：\" class=\"headerlink\" title=\"进入命令行，执行：\"></a>进入命令行，执行：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn archetype:generate -DgroupId=com.jjs.app -DartifactId=my-web-app -DarchetypeArtifactId=maven-archetype-webapp -DinteractivMode=false -DarchetypeCatalog=internal</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>出现一些版本号确认等直接回车就行，构建成功出现下面的提示。<br><img src=\"/2017/03/17/maven/maven创建普通web项目/e4dd0c75-7d51-4b91-a4c0-7a401477c461.png\" alt=\"logo\"><br>当然，这只是一个简单的web项目</p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>用jetty运行<br>在pom文件集成jetty插件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</div><div class=\"line\">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class=\"line\">  &lt;groupId&gt;com.jjs.app&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;my-web-app&lt;/artifactId&gt;</div><div class=\"line\">  &lt;packaging&gt;war&lt;/packaging&gt;</div><div class=\"line\">  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class=\"line\">  &lt;name&gt;my-web-app Maven Webapp&lt;/name&gt;</div><div class=\"line\">  &lt;url&gt;http://maven.apache.org&lt;/url&gt;</div><div class=\"line\">  &lt;dependencies&gt;</div><div class=\"line\">    &lt;dependency&gt;</div><div class=\"line\">      &lt;groupId&gt;junit&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;3.8.1&lt;/version&gt;</div><div class=\"line\">      &lt;scope&gt;test&lt;/scope&gt;</div><div class=\"line\">    &lt;/dependency&gt;</div><div class=\"line\">  &lt;/dependencies&gt;</div><div class=\"line\">  &lt;build&gt;</div><div class=\"line\">    &lt;finalName&gt;my-web-app&lt;/finalName&gt;</div><div class=\"line\">    &lt;pluginManagement&gt;</div><div class=\"line\">        &lt;!--配置Jetty--&gt;</div><div class=\"line\">          &lt;plugins&gt;</div><div class=\"line\">            &lt;plugin&gt;</div><div class=\"line\">             &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;</div><div class=\"line\">             &lt;artifactId&gt;maven-jetty-plugin&lt;/artifactId&gt;</div><div class=\"line\">            &lt;/plugin&gt;</div><div class=\"line\">          &lt;/plugins&gt;</div><div class=\"line\">    &lt;/pluginManagement&gt;</div><div class=\"line\">  &lt;/build&gt;</div><div class=\"line\">&lt;/project&gt;</div></pre></td></tr></table></figure></p>\n<p>然后执行：mvn jetty:run 就可以在8080端口上访问应用了。<br><a href=\"http://127.0.0.1:8080/my-web-app/index.jsp\" target=\"_blank\" rel=\"external\">http://127.0.0.1:8080/my-web-app/index.jsp</a></p>\n","excerpt":"<h2 id=\"进入命令行，执行：\"><a href=\"#进入命令行，执行：\" class=\"headerlink\" title=\"进入命令行，执行：\"></a>进入命令行，执行：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn archetype:generate -DgroupId=com.jjs.app -DartifactId=my-web-app -DarchetypeArtifactId=maven-archetype-webapp -DinteractivMode=false -DarchetypeCatalog=internal</div></pre></td></tr></table></figure>","more":"<p>出现一些版本号确认等直接回车就行，构建成功出现下面的提示。<br><img src=\"/2017/03/17/maven/maven创建普通web项目/e4dd0c75-7d51-4b91-a4c0-7a401477c461.png\" alt=\"logo\"><br>当然，这只是一个简单的web项目</p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>用jetty运行<br>在pom文件集成jetty插件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</div><div class=\"line\">  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class=\"line\">  &lt;groupId&gt;com.jjs.app&lt;/groupId&gt;</div><div class=\"line\">  &lt;artifactId&gt;my-web-app&lt;/artifactId&gt;</div><div class=\"line\">  &lt;packaging&gt;war&lt;/packaging&gt;</div><div class=\"line\">  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class=\"line\">  &lt;name&gt;my-web-app Maven Webapp&lt;/name&gt;</div><div class=\"line\">  &lt;url&gt;http://maven.apache.org&lt;/url&gt;</div><div class=\"line\">  &lt;dependencies&gt;</div><div class=\"line\">    &lt;dependency&gt;</div><div class=\"line\">      &lt;groupId&gt;junit&lt;/groupId&gt;</div><div class=\"line\">      &lt;artifactId&gt;junit&lt;/artifactId&gt;</div><div class=\"line\">      &lt;version&gt;3.8.1&lt;/version&gt;</div><div class=\"line\">      &lt;scope&gt;test&lt;/scope&gt;</div><div class=\"line\">    &lt;/dependency&gt;</div><div class=\"line\">  &lt;/dependencies&gt;</div><div class=\"line\">  &lt;build&gt;</div><div class=\"line\">    &lt;finalName&gt;my-web-app&lt;/finalName&gt;</div><div class=\"line\">    &lt;pluginManagement&gt;</div><div class=\"line\">        &lt;!--配置Jetty--&gt;</div><div class=\"line\">          &lt;plugins&gt;</div><div class=\"line\">            &lt;plugin&gt;</div><div class=\"line\">             &lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;</div><div class=\"line\">             &lt;artifactId&gt;maven-jetty-plugin&lt;/artifactId&gt;</div><div class=\"line\">            &lt;/plugin&gt;</div><div class=\"line\">          &lt;/plugins&gt;</div><div class=\"line\">    &lt;/pluginManagement&gt;</div><div class=\"line\">  &lt;/build&gt;</div><div class=\"line\">&lt;/project&gt;</div></pre></td></tr></table></figure></p>\n<p>然后执行：mvn jetty:run 就可以在8080端口上访问应用了。<br><a href=\"http://127.0.0.1:8080/my-web-app/index.jsp\">http://127.0.0.1:8080/my-web-app/index.jsp</a></p>"},{"title":"创建普通maven项目","date":"2017-03-15T12:27:39.000Z","_content":"Maven项目中有一些约定：在项目的根目录中放置pom.xml，在src/main/Java目录中放置项目的主代码，在src/test/java目录中放置项目的测试代码。我们称这些基本的目录结构和pom.xml文件内容为项目的骨架。我们可以手工创建项目骨架，也可以使用Maven提供的Archetype快速勾勒出项目骨架。\n<!-- more -->\n下面使用Archetype创建项目骨架。\n在D盘建一个maven工作空间 D:\\demo\\spring\\maven>\n打开命令行窗口，进入maven工作空间，执行命令 >mvn archetype:generate -DgroupId=com.jjs.app -Dartifact=my-app -DarchetypeCatalog=internal\n``` shell\nmvn archetype:generate -DgroupId=com.jjs.app -Dartifact=my-app -DarchetypeCatalog=internal\n```\n如果是第一次创建项目，会从远程仓库下载依赖包到本地仓库。\n备注：\n``` shell\nmvn archetype:generate　 必须的格式（3.0以上用generate，用create会出错Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:2……）\n　　-DgroupId　　　　　　　　 包名\n　　-DartifactId　　　　　　　　项目名\n　　-DarchetypeArtifactId　　 类型maven-archetype-quickstart，创建一个Java Project；maven-archetype-webapp，创建一个Web Project\n　　-DinteractiveMode　　　　　　是否使用交互模式，如果为false，输入上面命令后直接创建好，否则会有控制台提示输入操作；\n-DarchetypeCatalog=internal 让它不要从远程服务器上取目录。\n```\n创建的项目结构如下\n![logo](516becd9-201b-4bbb-a49a-45dacec4195f.png)\n在项目根目录下生成了一个pom.xml文件，这是maven的核心文件：\n![logo](aafa98fb-2088-4af2-bcfb-804d391c81ba.png)\n文件内容如下：\n``` xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.jjs.app</groupId>\n  <artifactId>my-app</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <packaging>jar</packaging>\n  <name>my-app</name>\n  <url>http://maven.apache.org</url>\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>3.8.1</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n</project>\n```\n有三个非常重要的元素：groupId、artifactId和version，这三个元素定义了一个项目的基本坐标，其他项目通过这三个元素可以定位到这个项目。\n另一个重要的元素就是dependencies，该元素下可以包含多个dependency元素以声明项目的依赖。\n打开源文件App.java：\n``` java\npackage com.jjs.app;\n/**\n * Hello world!\n *\n */\npublic class App\n{\n    public static void main( String[] args )\n    {\n        System.out.println( \"Hello World!\" );\n    }\n}\n```\n进入my-app目录，编译：\n``` shell\nmvn compile\n```\n在项目根目录下生成了target文件夹，里面存放了class文件。\n运行：\n``` shell\nmvn exec:java -Dexec.mainClass=\"com.jjs.app.App\"\n```\n结果：\n![logo](a1d9cddc-205b-4b3f-8bfc-5ff884c30df9.png)\n运行成功！\n普通的默认的生命周期阶段：\nvalidate：验证工程是否正确，所有需要的资源是否可用。\ncompile：编译项目的源代码。\ntest：使用合适的单元测试框架来测试已编译的源代码。这些测试不需要已打包和布署。\nPackage：把已编译的代码打包成可发布的格式，比如jar。\nintegration-test：如有需要，将包处理和发布到一个能够进行集成测试的环境。\nverify：运行所有检查，验证包是否有效且达到质量标准。\ninstall：把包安装在本地的repository中，可以被其他工程作为依赖来使用。\nDeploy：在集成或者发布环境下执行，将最终版本的包拷贝到远程的repository，使得其他的开发者或者工程可以共享。\nclean：清除先前构建的artifacts（在maven中，把由项目生成的包都叫作artifact），该命令会删除target文件夹。\nsite：为项目生成文档站点。\n\n来源： [http://blog.csdn.net/zhangzeyuaaa/article/details/39698479](http://blog.csdn.net/zhangzeyuaaa/article/details/39698479)\n      [http://blog.csdn.net/edward0830ly/article/details/8748986](http://blog.csdn.net/edward0830ly/article/details/8748986)\n\n","source":"_posts/maven/创建普通maven项目.md","raw":"---\ntitle: 创建普通maven项目\ndate: 2017-03-15 20:27:39\ncategories: maven\ntags: [maven]\n---\nMaven项目中有一些约定：在项目的根目录中放置pom.xml，在src/main/Java目录中放置项目的主代码，在src/test/java目录中放置项目的测试代码。我们称这些基本的目录结构和pom.xml文件内容为项目的骨架。我们可以手工创建项目骨架，也可以使用Maven提供的Archetype快速勾勒出项目骨架。\n<!-- more -->\n下面使用Archetype创建项目骨架。\n在D盘建一个maven工作空间 D:\\demo\\spring\\maven>\n打开命令行窗口，进入maven工作空间，执行命令 >mvn archetype:generate -DgroupId=com.jjs.app -Dartifact=my-app -DarchetypeCatalog=internal\n``` shell\nmvn archetype:generate -DgroupId=com.jjs.app -Dartifact=my-app -DarchetypeCatalog=internal\n```\n如果是第一次创建项目，会从远程仓库下载依赖包到本地仓库。\n备注：\n``` shell\nmvn archetype:generate　 必须的格式（3.0以上用generate，用create会出错Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:2……）\n　　-DgroupId　　　　　　　　 包名\n　　-DartifactId　　　　　　　　项目名\n　　-DarchetypeArtifactId　　 类型maven-archetype-quickstart，创建一个Java Project；maven-archetype-webapp，创建一个Web Project\n　　-DinteractiveMode　　　　　　是否使用交互模式，如果为false，输入上面命令后直接创建好，否则会有控制台提示输入操作；\n-DarchetypeCatalog=internal 让它不要从远程服务器上取目录。\n```\n创建的项目结构如下\n![logo](516becd9-201b-4bbb-a49a-45dacec4195f.png)\n在项目根目录下生成了一个pom.xml文件，这是maven的核心文件：\n![logo](aafa98fb-2088-4af2-bcfb-804d391c81ba.png)\n文件内容如下：\n``` xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.jjs.app</groupId>\n  <artifactId>my-app</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <packaging>jar</packaging>\n  <name>my-app</name>\n  <url>http://maven.apache.org</url>\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>3.8.1</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n</project>\n```\n有三个非常重要的元素：groupId、artifactId和version，这三个元素定义了一个项目的基本坐标，其他项目通过这三个元素可以定位到这个项目。\n另一个重要的元素就是dependencies，该元素下可以包含多个dependency元素以声明项目的依赖。\n打开源文件App.java：\n``` java\npackage com.jjs.app;\n/**\n * Hello world!\n *\n */\npublic class App\n{\n    public static void main( String[] args )\n    {\n        System.out.println( \"Hello World!\" );\n    }\n}\n```\n进入my-app目录，编译：\n``` shell\nmvn compile\n```\n在项目根目录下生成了target文件夹，里面存放了class文件。\n运行：\n``` shell\nmvn exec:java -Dexec.mainClass=\"com.jjs.app.App\"\n```\n结果：\n![logo](a1d9cddc-205b-4b3f-8bfc-5ff884c30df9.png)\n运行成功！\n普通的默认的生命周期阶段：\nvalidate：验证工程是否正确，所有需要的资源是否可用。\ncompile：编译项目的源代码。\ntest：使用合适的单元测试框架来测试已编译的源代码。这些测试不需要已打包和布署。\nPackage：把已编译的代码打包成可发布的格式，比如jar。\nintegration-test：如有需要，将包处理和发布到一个能够进行集成测试的环境。\nverify：运行所有检查，验证包是否有效且达到质量标准。\ninstall：把包安装在本地的repository中，可以被其他工程作为依赖来使用。\nDeploy：在集成或者发布环境下执行，将最终版本的包拷贝到远程的repository，使得其他的开发者或者工程可以共享。\nclean：清除先前构建的artifacts（在maven中，把由项目生成的包都叫作artifact），该命令会删除target文件夹。\nsite：为项目生成文档站点。\n\n来源： [http://blog.csdn.net/zhangzeyuaaa/article/details/39698479](http://blog.csdn.net/zhangzeyuaaa/article/details/39698479)\n      [http://blog.csdn.net/edward0830ly/article/details/8748986](http://blog.csdn.net/edward0830ly/article/details/8748986)\n\n","slug":"maven/创建普通maven项目","published":1,"updated":"2017-03-15T12:44:06.295Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaej002mr8sypzdzopp4","content":"<p>Maven项目中有一些约定：在项目的根目录中放置pom.xml，在src/main/Java目录中放置项目的主代码，在src/test/java目录中放置项目的测试代码。我们称这些基本的目录结构和pom.xml文件内容为项目的骨架。我们可以手工创建项目骨架，也可以使用Maven提供的Archetype快速勾勒出项目骨架。<br><a id=\"more\"></a><br>下面使用Archetype创建项目骨架。<br>在D盘建一个maven工作空间 D:\\demo\\spring\\maven&gt;<br>打开命令行窗口，进入maven工作空间，执行命令 &gt;mvn archetype:generate -DgroupId=com.jjs.app -Dartifact=my-app -DarchetypeCatalog=internal<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn archetype:generate -DgroupId=com.jjs.app -Dartifact=my-app -DarchetypeCatalog=internal</div></pre></td></tr></table></figure></p>\n<p>如果是第一次创建项目，会从远程仓库下载依赖包到本地仓库。<br>备注：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn archetype:generate　 必须的格式（3.0以上用generate，用create会出错Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:2……）</div><div class=\"line\">　　-DgroupId　　　　　　　　 包名</div><div class=\"line\">　　-DartifactId　　　　　　　　项目名</div><div class=\"line\">　　-DarchetypeArtifactId　　 类型maven-archetype-quickstart，创建一个Java Project；maven-archetype-webapp，创建一个Web Project</div><div class=\"line\">　　-DinteractiveMode　　　　　　是否使用交互模式，如果为false，输入上面命令后直接创建好，否则会有控制台提示输入操作；</div><div class=\"line\">-DarchetypeCatalog=internal 让它不要从远程服务器上取目录。</div></pre></td></tr></table></figure></p>\n<p>创建的项目结构如下<br><img src=\"/2017/03/15/maven/创建普通maven项目/516becd9-201b-4bbb-a49a-45dacec4195f.png\" alt=\"logo\"><br>在项目根目录下生成了一个pom.xml文件，这是maven的核心文件：<br><img src=\"/2017/03/15/maven/创建普通maven项目/aafa98fb-2088-4af2-bcfb-804d391c81ba.png\" alt=\"logo\"><br>文件内容如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></div><div class=\"line\">  <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.jjs.app<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>my-app<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>my-app<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.apache.org<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.8.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>有三个非常重要的元素：groupId、artifactId和version，这三个元素定义了一个项目的基本坐标，其他项目通过这三个元素可以定位到这个项目。<br>另一个重要的元素就是dependencies，该元素下可以包含多个dependency元素以声明项目的依赖。<br>打开源文件App.java：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.jjs.app;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Hello world!</div><div class=\"line\"> *</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">( String[] args )</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        System.out.println( <span class=\"string\">\"Hello World!\"</span> );</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>进入my-app目录，编译：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn compile</div></pre></td></tr></table></figure></p>\n<p>在项目根目录下生成了target文件夹，里面存放了class文件。<br>运行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn exec:java -Dexec.mainClass=&quot;com.jjs.app.App&quot;</div></pre></td></tr></table></figure></p>\n<p>结果：<br><img src=\"/2017/03/15/maven/创建普通maven项目/a1d9cddc-205b-4b3f-8bfc-5ff884c30df9.png\" alt=\"logo\"><br>运行成功！<br>普通的默认的生命周期阶段：<br>validate：验证工程是否正确，所有需要的资源是否可用。<br>compile：编译项目的源代码。<br>test：使用合适的单元测试框架来测试已编译的源代码。这些测试不需要已打包和布署。<br>Package：把已编译的代码打包成可发布的格式，比如jar。<br>integration-test：如有需要，将包处理和发布到一个能够进行集成测试的环境。<br>verify：运行所有检查，验证包是否有效且达到质量标准。<br>install：把包安装在本地的repository中，可以被其他工程作为依赖来使用。<br>Deploy：在集成或者发布环境下执行，将最终版本的包拷贝到远程的repository，使得其他的开发者或者工程可以共享。<br>clean：清除先前构建的artifacts（在maven中，把由项目生成的包都叫作artifact），该命令会删除target文件夹。<br>site：为项目生成文档站点。</p>\n<p>来源： <a href=\"http://blog.csdn.net/zhangzeyuaaa/article/details/39698479\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/zhangzeyuaaa/article/details/39698479</a><br>      <a href=\"http://blog.csdn.net/edward0830ly/article/details/8748986\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/edward0830ly/article/details/8748986</a></p>\n","excerpt":"<p>Maven项目中有一些约定：在项目的根目录中放置pom.xml，在src/main/Java目录中放置项目的主代码，在src/test/java目录中放置项目的测试代码。我们称这些基本的目录结构和pom.xml文件内容为项目的骨架。我们可以手工创建项目骨架，也可以使用Maven提供的Archetype快速勾勒出项目骨架。<br></p>","more":"<br>下面使用Archetype创建项目骨架。<br>在D盘建一个maven工作空间 D:\\demo\\spring\\maven&gt;<br>打开命令行窗口，进入maven工作空间，执行命令 &gt;mvn archetype:generate -DgroupId=com.jjs.app -Dartifact=my-app -DarchetypeCatalog=internal<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn archetype:generate -DgroupId=com.jjs.app -Dartifact=my-app -DarchetypeCatalog=internal</div></pre></td></tr></table></figure><p></p>\n<p>如果是第一次创建项目，会从远程仓库下载依赖包到本地仓库。<br>备注：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn archetype:generate　 必须的格式（3.0以上用generate，用create会出错Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:2……）</div><div class=\"line\">　　-DgroupId　　　　　　　　 包名</div><div class=\"line\">　　-DartifactId　　　　　　　　项目名</div><div class=\"line\">　　-DarchetypeArtifactId　　 类型maven-archetype-quickstart，创建一个Java Project；maven-archetype-webapp，创建一个Web Project</div><div class=\"line\">　　-DinteractiveMode　　　　　　是否使用交互模式，如果为false，输入上面命令后直接创建好，否则会有控制台提示输入操作；</div><div class=\"line\">-DarchetypeCatalog=internal 让它不要从远程服务器上取目录。</div></pre></td></tr></table></figure></p>\n<p>创建的项目结构如下<br><img src=\"/2017/03/15/maven/创建普通maven项目/516becd9-201b-4bbb-a49a-45dacec4195f.png\" alt=\"logo\"><br>在项目根目录下生成了一个pom.xml文件，这是maven的核心文件：<br><img src=\"/2017/03/15/maven/创建普通maven项目/aafa98fb-2088-4af2-bcfb-804d391c81ba.png\" alt=\"logo\"><br>文件内容如下：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></div><div class=\"line\">  <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.jjs.app<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>my-app<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>my-app<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.apache.org<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.8.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>有三个非常重要的元素：groupId、artifactId和version，这三个元素定义了一个项目的基本坐标，其他项目通过这三个元素可以定位到这个项目。<br>另一个重要的元素就是dependencies，该元素下可以包含多个dependency元素以声明项目的依赖。<br>打开源文件App.java：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.jjs.app;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Hello world!</div><div class=\"line\"> *</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">( String[] args )</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        System.out.println( <span class=\"string\">\"Hello World!\"</span> );</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>进入my-app目录，编译：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn compile</div></pre></td></tr></table></figure></p>\n<p>在项目根目录下生成了target文件夹，里面存放了class文件。<br>运行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mvn exec:java -Dexec.mainClass=&quot;com.jjs.app.App&quot;</div></pre></td></tr></table></figure></p>\n<p>结果：<br><img src=\"/2017/03/15/maven/创建普通maven项目/a1d9cddc-205b-4b3f-8bfc-5ff884c30df9.png\" alt=\"logo\"><br>运行成功！<br>普通的默认的生命周期阶段：<br>validate：验证工程是否正确，所有需要的资源是否可用。<br>compile：编译项目的源代码。<br>test：使用合适的单元测试框架来测试已编译的源代码。这些测试不需要已打包和布署。<br>Package：把已编译的代码打包成可发布的格式，比如jar。<br>integration-test：如有需要，将包处理和发布到一个能够进行集成测试的环境。<br>verify：运行所有检查，验证包是否有效且达到质量标准。<br>install：把包安装在本地的repository中，可以被其他工程作为依赖来使用。<br>Deploy：在集成或者发布环境下执行，将最终版本的包拷贝到远程的repository，使得其他的开发者或者工程可以共享。<br>clean：清除先前构建的artifacts（在maven中，把由项目生成的包都叫作artifact），该命令会删除target文件夹。<br>site：为项目生成文档站点。</p>\n<p>来源： <a href=\"http://blog.csdn.net/zhangzeyuaaa/article/details/39698479\">http://blog.csdn.net/zhangzeyuaaa/article/details/39698479</a><br>      <a href=\"http://blog.csdn.net/edward0830ly/article/details/8748986\">http://blog.csdn.net/edward0830ly/article/details/8748986</a></p>"},{"layout":"w","title":"调整maven项目编译jdk版本","date":"2017-03-20T09:08:47.000Z","_content":"　　新建maven项目的时候，手动更改JDK版本号，每次update maven项目的时候，项目的JDK版本都会变成1.5版(这个或许是maven的bug吧)，后来发现可以在设置maven全局的jdk编译版本，或者[设置全局maven默认jdk编译版本](http://jjs857012499.github.io/2017/03/19/maven/调整maven编译jdk版本/)\n<!--more-->\n解决方案：\n在pom文件中添加如下代码：\n```xml\n<build>\n    <finalName>demo</finalName>\n       <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.0</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                    <encoding>UTF-8</encoding>\n                    <verbal>true</verbal>\n                </configuration>\n            </plugin>\n        </plugins>\n</build>\n```\n然后update maven项目。OK\n\n","source":"_posts/maven/调整maven项目编译jdk版本.md","raw":"layout: w\ntitle: 调整maven项目编译jdk版本\ndate: 2017-03-20 17:08:47\ncategory: [maven]\ntags: [maven]\n---\n　　新建maven项目的时候，手动更改JDK版本号，每次update maven项目的时候，项目的JDK版本都会变成1.5版(这个或许是maven的bug吧)，后来发现可以在设置maven全局的jdk编译版本，或者[设置全局maven默认jdk编译版本](http://jjs857012499.github.io/2017/03/19/maven/调整maven编译jdk版本/)\n<!--more-->\n解决方案：\n在pom文件中添加如下代码：\n```xml\n<build>\n    <finalName>demo</finalName>\n       <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.0</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                    <encoding>UTF-8</encoding>\n                    <verbal>true</verbal>\n                </configuration>\n            </plugin>\n        </plugins>\n</build>\n```\n然后update maven项目。OK\n\n","slug":"maven/调整maven项目编译jdk版本","published":1,"updated":"2017-03-20T09:30:32.038Z","comments":1,"photos":[],"link":"","_id":"cj43taael002pr8syceul1n2f","content":"<p>　　新建maven项目的时候，手动更改JDK版本号，每次update maven项目的时候，项目的JDK版本都会变成1.5版(这个或许是maven的bug吧)，后来发现可以在设置maven全局的jdk编译版本，或者<a href=\"http://jjs857012499.github.io/2017/03/19/maven/调整maven编译jdk版本/\">设置全局maven默认jdk编译版本</a><br><a id=\"more\"></a><br>解决方案：<br>在pom文件中添加如下代码：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">finalName</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">finalName</span>&gt;</span></div><div class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">encoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">encoding</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">verbal</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">verbal</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>然后update maven项目。OK</p>\n","excerpt":"<p>　　新建maven项目的时候，手动更改JDK版本号，每次update maven项目的时候，项目的JDK版本都会变成1.5版(这个或许是maven的bug吧)，后来发现可以在设置maven全局的jdk编译版本，或者<a href=\"http://jjs857012499.github.io/2017/03/19/maven/调整maven编译jdk版本/\">设置全局maven默认jdk编译版本</a><br></p>","more":"<br>解决方案：<br>在pom文件中添加如下代码：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">finalName</span>&gt;</span>demo<span class=\"tag\">&lt;/<span class=\"name\">finalName</span>&gt;</span></div><div class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">encoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">encoding</span>&gt;</span></div><div class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">verbal</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">verbal</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></div></pre></td></tr></table></figure><p></p>\n<p>然后update maven项目。OK</p>"},{"title":"调整maven编译jdk版本","date":"2017-03-19T09:34:58.000Z","_content":"调整maven编译jdk版本\n<!--more-->\n在maven 的settings.xml文件添加如下节点\n```xml\n<profile>\n    <id>jdk-1.7</id>\n    <activation>\n            <activeByDefault>true</activeByDefault>\n            <jdk>1.7</jdk>\n    </activation>\n    <properties >\n            <maven.compiler.source>1.7</maven.compiler.source>\n            <maven.compiler.target>1.7</maven.compiler.target>\n            <maven.compiler.compilerVersion>1.7</maven.compiler.compilerVersion>\n    </properties>\n</profile>\n```","source":"_posts/maven/调整maven编译jdk版本.md","raw":"---\ntitle: 调整maven编译jdk版本\ndate: 2017-03-19 17:34:58\ncategory: maven\ntags: [maven,jdk]\n---\n调整maven编译jdk版本\n<!--more-->\n在maven 的settings.xml文件添加如下节点\n```xml\n<profile>\n    <id>jdk-1.7</id>\n    <activation>\n            <activeByDefault>true</activeByDefault>\n            <jdk>1.7</jdk>\n    </activation>\n    <properties >\n            <maven.compiler.source>1.7</maven.compiler.source>\n            <maven.compiler.target>1.7</maven.compiler.target>\n            <maven.compiler.compilerVersion>1.7</maven.compiler.compilerVersion>\n    </properties>\n</profile>\n```","slug":"maven/调整maven编译jdk版本","published":1,"updated":"2017-03-19T09:37:09.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaem002rr8syc1hcqf53","content":"<p>调整maven编译jdk版本<br><a id=\"more\"></a><br>在maven 的settings.xml文件添加如下节点<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>jdk-1.7<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">activation</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">activeByDefault</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">jdk</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">jdk</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">activation</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span> &gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","excerpt":"<p>调整maven编译jdk版本<br></p>","more":"<br>在maven 的settings.xml文件添加如下节点<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>jdk-1.7<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">activation</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">activeByDefault</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">jdk</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">jdk</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">activation</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span> &gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span>1.7<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></div></pre></td></tr></table></figure><p></p>"},{"title":"union和union all区别","date":"2017-03-13T02:51:00.000Z","_content":"UNION 操作符用于合并两个或多个 SELECT 语句的结果集。\n请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。\n\n注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。\n\n另外，UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名。\n","source":"_posts/mysql/union和union-all区别.md","raw":"---\ntitle: union和union all区别\ndate: 2017-03-13 10:51:00\ncategories: mysql\ntags: [mysql,union,union all]\n---\nUNION 操作符用于合并两个或多个 SELECT 语句的结果集。\n请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。\n\n注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。\n\n另外，UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名。\n","slug":"mysql/union和union-all区别","published":1,"updated":"2017-03-13T02:56:52.140Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaeo002tr8sy7btzmsfe","content":"<p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。<br>请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。</p>\n<p>注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。</p>\n<p>另外，UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名。</p>\n","excerpt":"","more":"<p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。<br>请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。</p>\n<p>注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。</p>\n<p>另外，UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名。</p>\n"},{"title":"Spring Data JPA 初步了解","date":"2017-03-19T14:40:56.000Z","_content":"Spring Data JPA\nSpring Data是什么\nSpring Data是一个用于简化数据库访问，并支持云服务的开源框架。其主要目标是使得对数据的访问变得方便快捷，并支持map-reduce框架和云计算数据服务。\n<!--more-->\nSpring Data JPA是什么\n由Spring提供的一个用于简化JPA开发的框架\nnSpring Data JPA能干什么\n可以极大的简化JPA的写法，可以在几乎不用写实现的情况下，实现对数据的访问和操作。除了CRUD外，还包括如分页、排序等一些常用的功能。\n\nSpring Data JPA有什么\n主要来看看Spring Data JPA提供的接口，也是Spring Data JPA的核心概念：\n1：Repository：最顶层的接口，是一个空的接口，目的是为了统一所有Repository的类型，且能让组件扫描的时候自动识别。\n2：CrudRepository ：是Repository的子接口，提供CRUD的功能\n3：PagingAndSortingRepository：是CrudRepository的子接口，添加分页和排序的功能\n4：JpaRepository：是PagingAndSortingRepository的子接口，增加了一些实用的功能，比如：批量操作等。\n5：JpaSpecificationExecutor：用来做负责查询的接口\n6：Specification：是Spring Data JPA提供的一个查询规范，要做复杂的查询，只需围绕这个规范来设置查询条件即可\n\n\n来源：[http://sishuok.com/forum/posts/list/7000.html](http://sishuok.com/forum/posts/list/7000.html)\n","source":"_posts/spring/Spring-Data-JPA-初步了解.md","raw":"---\ntitle: Spring Data JPA 初步了解\ndate: 2017-03-19 22:40:56\ncategory: spring\ntags: [spring,spring data jpa]\n---\nSpring Data JPA\nSpring Data是什么\nSpring Data是一个用于简化数据库访问，并支持云服务的开源框架。其主要目标是使得对数据的访问变得方便快捷，并支持map-reduce框架和云计算数据服务。\n<!--more-->\nSpring Data JPA是什么\n由Spring提供的一个用于简化JPA开发的框架\nnSpring Data JPA能干什么\n可以极大的简化JPA的写法，可以在几乎不用写实现的情况下，实现对数据的访问和操作。除了CRUD外，还包括如分页、排序等一些常用的功能。\n\nSpring Data JPA有什么\n主要来看看Spring Data JPA提供的接口，也是Spring Data JPA的核心概念：\n1：Repository：最顶层的接口，是一个空的接口，目的是为了统一所有Repository的类型，且能让组件扫描的时候自动识别。\n2：CrudRepository ：是Repository的子接口，提供CRUD的功能\n3：PagingAndSortingRepository：是CrudRepository的子接口，添加分页和排序的功能\n4：JpaRepository：是PagingAndSortingRepository的子接口，增加了一些实用的功能，比如：批量操作等。\n5：JpaSpecificationExecutor：用来做负责查询的接口\n6：Specification：是Spring Data JPA提供的一个查询规范，要做复杂的查询，只需围绕这个规范来设置查询条件即可\n\n\n来源：[http://sishuok.com/forum/posts/list/7000.html](http://sishuok.com/forum/posts/list/7000.html)\n","slug":"spring/Spring-Data-JPA-初步了解","published":1,"updated":"2017-03-19T14:42:35.450Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaeq002wr8syjqney4ov","content":"<p>Spring Data JPA<br>Spring Data是什么<br>Spring Data是一个用于简化数据库访问，并支持云服务的开源框架。其主要目标是使得对数据的访问变得方便快捷，并支持map-reduce框架和云计算数据服务。<br><a id=\"more\"></a><br>Spring Data JPA是什么<br>由Spring提供的一个用于简化JPA开发的框架<br>nSpring Data JPA能干什么<br>可以极大的简化JPA的写法，可以在几乎不用写实现的情况下，实现对数据的访问和操作。除了CRUD外，还包括如分页、排序等一些常用的功能。</p>\n<p>Spring Data JPA有什么<br>主要来看看Spring Data JPA提供的接口，也是Spring Data JPA的核心概念：<br>1：Repository：最顶层的接口，是一个空的接口，目的是为了统一所有Repository的类型，且能让组件扫描的时候自动识别。<br>2：CrudRepository ：是Repository的子接口，提供CRUD的功能<br>3：PagingAndSortingRepository：是CrudRepository的子接口，添加分页和排序的功能<br>4：JpaRepository：是PagingAndSortingRepository的子接口，增加了一些实用的功能，比如：批量操作等。<br>5：JpaSpecificationExecutor：用来做负责查询的接口<br>6：Specification：是Spring Data JPA提供的一个查询规范，要做复杂的查询，只需围绕这个规范来设置查询条件即可</p>\n<p>来源：<a href=\"http://sishuok.com/forum/posts/list/7000.html\" target=\"_blank\" rel=\"external\">http://sishuok.com/forum/posts/list/7000.html</a></p>\n","excerpt":"<p>Spring Data JPA<br>Spring Data是什么<br>Spring Data是一个用于简化数据库访问，并支持云服务的开源框架。其主要目标是使得对数据的访问变得方便快捷，并支持map-reduce框架和云计算数据服务。<br></p>","more":"<br>Spring Data JPA是什么<br>由Spring提供的一个用于简化JPA开发的框架<br>nSpring Data JPA能干什么<br>可以极大的简化JPA的写法，可以在几乎不用写实现的情况下，实现对数据的访问和操作。除了CRUD外，还包括如分页、排序等一些常用的功能。<p></p>\n<p>Spring Data JPA有什么<br>主要来看看Spring Data JPA提供的接口，也是Spring Data JPA的核心概念：<br>1：Repository：最顶层的接口，是一个空的接口，目的是为了统一所有Repository的类型，且能让组件扫描的时候自动识别。<br>2：CrudRepository ：是Repository的子接口，提供CRUD的功能<br>3：PagingAndSortingRepository：是CrudRepository的子接口，添加分页和排序的功能<br>4：JpaRepository：是PagingAndSortingRepository的子接口，增加了一些实用的功能，比如：批量操作等。<br>5：JpaSpecificationExecutor：用来做负责查询的接口<br>6：Specification：是Spring Data JPA提供的一个查询规范，要做复杂的查询，只需围绕这个规范来设置查询条件即可</p>\n<p>来源：<a href=\"http://sishuok.com/forum/posts/list/7000.html\">http://sishuok.com/forum/posts/list/7000.html</a></p>"},{"title":"Spring MVC 中 HandlerInterceptorAdapter的使用","date":"2017-03-19T14:38:07.000Z","_content":"一般情况下，对来自浏览器的请求的拦截，是利用Filter实现的，这种方式可以实现Bean预处理、后处理。\n <!--more-->\nSpring MVC的拦截器不仅可实现Filter的所有功能，还可以更精确的控制拦截精度。\nSpring为我们提供了org.springframework.web.servlet.handler.HandlerInterceptorAdapter这个适配器，继承此类，可以非常方便的实现自己的拦截器。\n```java\npublic abstract class HandlerInterceptorAdapter implements AsyncHandlerInterceptor {\n\t/**\n\t * This implementation always returns {@code true}.\n\t */\n\t@Override\n\tpublic boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n\t\tthrows Exception {\n\t\treturn true;\n\t}\n\t/**\n\t * This implementation is empty.\n\t */\n\t@Override\n\tpublic void postHandle(\n\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)\n\t\t\tthrows Exception {\n\t}\n\t/**\n\t * This implementation is empty.\n\t */\n\t@Override\n\tpublic void afterCompletion(\n\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)\n\t\t\tthrows Exception {\n\t}\n\t/**\n\t * This implementation is empty.\n\t */\n\t@Override\n\tpublic void afterConcurrentHandlingStarted(\n\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler)\n\t\t\tthrows Exception {\n\t}\n}\n```\n分别实现预处理、后处理（调用了Service并返回ModelAndView，但未进行页面渲染）、返回处理（已经渲染了页面）\n在preHandle中，可以进行编码、安全控制等处理；\n在postHandle中，有机会修改返回结果；\n在afterCompletion中，可以根据ex是否为null判断是否发生了异常，进行日志记录。\n\n下面以一个权限拦截为demo\n1、\n```java\npublic class SecurityInterceptor extends HandlerInterceptorAdapter {\n\tprotected static Logger log = LoggerFactory.getLogger(SecurityInterceptor.class.getName());\n\t@Override\n\tpublic boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n\t\t\tthrows Exception {\n\t\tif (handler instanceof HttpRequestHandler || handler instanceof ResourceHttpRequestHandler) {\n\t\t\treturn true;\n\t\t}\n\t\t// 从切点上获取目标方法\n\t\tHandlerMethod handlerMethod = (HandlerMethod) handler;\n\t\tMethod method = handlerMethod.getMethod();\n\t\t// 若目标方法忽略了安全性检查，则直接调用目标方法\n\t\tif (method.isAnnotationPresent(IgnoreSecurity.class)) {\n\t\t\treturn true;\n\t\t}\n\t\tMap<String, String[]> parameterMap = request.getParameterMap();\n\t\tTreeMap<String, String> data = new TreeMap<>();\n\t\tfor (String key : parameterMap.keySet()) {\n\t\t\tdata.put(key, parameterMap.get(key)[0]);\n\t\t}\n\t\tboolean verferSignData = SignUtil.verferSignData(data, ParamConstant.RSA_PUBLIC_KEY);\n\t\tif (!verferSignData) {\n\t\t\tlog.error(\"参数验签失败！！！\");\n\t\t}\n\t\t// 调用目标方法\n\t\treturn verferSignData;\n\t}\n}\n```\n\n2、配置拦截器\n在spring-mvc.xml添加如下配置\n```xml\n<!-- 拦截器  对请求数据 进去签名校验-->\n\t<mvc:interceptors>\n        <mvc:interceptor>\n            <mvc:mapping path=\"/**\"/>\n            <mvc:exclude-mapping path=\"/static/**\"/>\n            <bean id=\"securityInterceptor\" class=\"com.zfull.pro.wx.api.sercurity.SecurityInterceptor\">\n            </bean>\n        </mvc:interceptor>\n    </mvc:interceptors>\n```\n\n","source":"_posts/spring/Spring-MVC-中-HandlerInterceptorAdapter的使用.md","raw":"---\ntitle: Spring MVC 中 HandlerInterceptorAdapter的使用\ndate: 2017-03-19 22:38:07\ncategory: spring\ntags: [spring,拦截器]\n---\n一般情况下，对来自浏览器的请求的拦截，是利用Filter实现的，这种方式可以实现Bean预处理、后处理。\n <!--more-->\nSpring MVC的拦截器不仅可实现Filter的所有功能，还可以更精确的控制拦截精度。\nSpring为我们提供了org.springframework.web.servlet.handler.HandlerInterceptorAdapter这个适配器，继承此类，可以非常方便的实现自己的拦截器。\n```java\npublic abstract class HandlerInterceptorAdapter implements AsyncHandlerInterceptor {\n\t/**\n\t * This implementation always returns {@code true}.\n\t */\n\t@Override\n\tpublic boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n\t\tthrows Exception {\n\t\treturn true;\n\t}\n\t/**\n\t * This implementation is empty.\n\t */\n\t@Override\n\tpublic void postHandle(\n\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)\n\t\t\tthrows Exception {\n\t}\n\t/**\n\t * This implementation is empty.\n\t */\n\t@Override\n\tpublic void afterCompletion(\n\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)\n\t\t\tthrows Exception {\n\t}\n\t/**\n\t * This implementation is empty.\n\t */\n\t@Override\n\tpublic void afterConcurrentHandlingStarted(\n\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler)\n\t\t\tthrows Exception {\n\t}\n}\n```\n分别实现预处理、后处理（调用了Service并返回ModelAndView，但未进行页面渲染）、返回处理（已经渲染了页面）\n在preHandle中，可以进行编码、安全控制等处理；\n在postHandle中，有机会修改返回结果；\n在afterCompletion中，可以根据ex是否为null判断是否发生了异常，进行日志记录。\n\n下面以一个权限拦截为demo\n1、\n```java\npublic class SecurityInterceptor extends HandlerInterceptorAdapter {\n\tprotected static Logger log = LoggerFactory.getLogger(SecurityInterceptor.class.getName());\n\t@Override\n\tpublic boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n\t\t\tthrows Exception {\n\t\tif (handler instanceof HttpRequestHandler || handler instanceof ResourceHttpRequestHandler) {\n\t\t\treturn true;\n\t\t}\n\t\t// 从切点上获取目标方法\n\t\tHandlerMethod handlerMethod = (HandlerMethod) handler;\n\t\tMethod method = handlerMethod.getMethod();\n\t\t// 若目标方法忽略了安全性检查，则直接调用目标方法\n\t\tif (method.isAnnotationPresent(IgnoreSecurity.class)) {\n\t\t\treturn true;\n\t\t}\n\t\tMap<String, String[]> parameterMap = request.getParameterMap();\n\t\tTreeMap<String, String> data = new TreeMap<>();\n\t\tfor (String key : parameterMap.keySet()) {\n\t\t\tdata.put(key, parameterMap.get(key)[0]);\n\t\t}\n\t\tboolean verferSignData = SignUtil.verferSignData(data, ParamConstant.RSA_PUBLIC_KEY);\n\t\tif (!verferSignData) {\n\t\t\tlog.error(\"参数验签失败！！！\");\n\t\t}\n\t\t// 调用目标方法\n\t\treturn verferSignData;\n\t}\n}\n```\n\n2、配置拦截器\n在spring-mvc.xml添加如下配置\n```xml\n<!-- 拦截器  对请求数据 进去签名校验-->\n\t<mvc:interceptors>\n        <mvc:interceptor>\n            <mvc:mapping path=\"/**\"/>\n            <mvc:exclude-mapping path=\"/static/**\"/>\n            <bean id=\"securityInterceptor\" class=\"com.zfull.pro.wx.api.sercurity.SecurityInterceptor\">\n            </bean>\n        </mvc:interceptor>\n    </mvc:interceptors>\n```\n\n","slug":"spring/Spring-MVC-中-HandlerInterceptorAdapter的使用","published":1,"updated":"2017-03-19T14:40:36.830Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaes002yr8syfnzkij7v","content":"<p>一般情况下，对来自浏览器的请求的拦截，是利用Filter实现的，这种方式可以实现Bean预处理、后处理。<br> <a id=\"more\"></a><br>Spring MVC的拦截器不仅可实现Filter的所有功能，还可以更精确的控制拦截精度。<br>Spring为我们提供了org.springframework.web.servlet.handler.HandlerInterceptorAdapter这个适配器，继承此类，可以非常方便的实现自己的拦截器。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HandlerInterceptorAdapter</span> <span class=\"keyword\">implements</span> <span class=\"title\">AsyncHandlerInterceptor</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * This implementation always returns &#123;<span class=\"doctag\">@code</span> true&#125;.</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">preHandle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span></span></div><div class=\"line\">\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * This implementation is empty.</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postHandle</span><span class=\"params\">(</span></span></div><div class=\"line\">\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * This implementation is empty.</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">afterCompletion</span><span class=\"params\">(</span></span></div><div class=\"line\">\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * This implementation is empty.</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">afterConcurrentHandlingStarted</span><span class=\"params\">(</span></span></div><div class=\"line\">\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler)</div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>分别实现预处理、后处理（调用了Service并返回ModelAndView，但未进行页面渲染）、返回处理（已经渲染了页面）<br>在preHandle中，可以进行编码、安全控制等处理；<br>在postHandle中，有机会修改返回结果；<br>在afterCompletion中，可以根据ex是否为null判断是否发生了异常，进行日志记录。</p>\n<p>下面以一个权限拦截为demo<br>1、<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecurityInterceptor</span> <span class=\"keyword\">extends</span> <span class=\"title\">HandlerInterceptorAdapter</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> Logger log = LoggerFactory.getLogger(SecurityInterceptor.class.getName());</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">preHandle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span></span></div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (handler <span class=\"keyword\">instanceof</span> HttpRequestHandler || handler <span class=\"keyword\">instanceof</span> ResourceHttpRequestHandler) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 从切点上获取目标方法</span></div><div class=\"line\">\t\tHandlerMethod handlerMethod = (HandlerMethod) handler;</div><div class=\"line\">\t\tMethod method = handlerMethod.getMethod();</div><div class=\"line\">\t\t<span class=\"comment\">// 若目标方法忽略了安全性检查，则直接调用目标方法</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (method.isAnnotationPresent(IgnoreSecurity.class)) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tMap&lt;String, String[]&gt; parameterMap = request.getParameterMap();</div><div class=\"line\">\t\tTreeMap&lt;String, String&gt; data = <span class=\"keyword\">new</span> TreeMap&lt;&gt;();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (String key : parameterMap.keySet()) &#123;</div><div class=\"line\">\t\t\tdata.put(key, parameterMap.get(key)[<span class=\"number\">0</span>]);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> verferSignData = SignUtil.verferSignData(data, ParamConstant.RSA_PUBLIC_KEY);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (!verferSignData) &#123;</div><div class=\"line\">\t\t\tlog.error(<span class=\"string\">\"参数验签失败！！！\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 调用目标方法</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> verferSignData;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2、配置拦截器<br>在spring-mvc.xml添加如下配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 拦截器  对请求数据 进去签名校验--&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">mvc:interceptors</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mvc:interceptor</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mvc:mapping</span> <span class=\"attr\">path</span>=<span class=\"string\">\"/**\"</span>/&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mvc:exclude-mapping</span> <span class=\"attr\">path</span>=<span class=\"string\">\"/static/**\"</span>/&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"securityInterceptor\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.zfull.pro.wx.api.sercurity.SecurityInterceptor\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">mvc:interceptor</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mvc:interceptors</span>&gt;</span></div></pre></td></tr></table></figure></p>\n","excerpt":"<p>一般情况下，对来自浏览器的请求的拦截，是利用Filter实现的，这种方式可以实现Bean预处理、后处理。<br></p>","more":"<br>Spring MVC的拦截器不仅可实现Filter的所有功能，还可以更精确的控制拦截精度。<br>Spring为我们提供了org.springframework.web.servlet.handler.HandlerInterceptorAdapter这个适配器，继承此类，可以非常方便的实现自己的拦截器。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HandlerInterceptorAdapter</span> <span class=\"keyword\">implements</span> <span class=\"title\">AsyncHandlerInterceptor</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * This implementation always returns &#123;<span class=\"doctag\">@code</span> true&#125;.</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">preHandle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span></span></div><div class=\"line\">\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * This implementation is empty.</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postHandle</span><span class=\"params\">(</span></span></div><div class=\"line\">\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * This implementation is empty.</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">afterCompletion</span><span class=\"params\">(</span></span></div><div class=\"line\">\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * This implementation is empty.</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">afterConcurrentHandlingStarted</span><span class=\"params\">(</span></span></div><div class=\"line\">\t\t\tHttpServletRequest request, HttpServletResponse response, Object handler)</div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure><p></p>\n<p>分别实现预处理、后处理（调用了Service并返回ModelAndView，但未进行页面渲染）、返回处理（已经渲染了页面）<br>在preHandle中，可以进行编码、安全控制等处理；<br>在postHandle中，有机会修改返回结果；<br>在afterCompletion中，可以根据ex是否为null判断是否发生了异常，进行日志记录。</p>\n<p>下面以一个权限拦截为demo<br>1、<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecurityInterceptor</span> <span class=\"keyword\">extends</span> <span class=\"title\">HandlerInterceptorAdapter</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> Logger log = LoggerFactory.getLogger(SecurityInterceptor.class.getName());</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">preHandle</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, Object handler)</span></span></div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (handler <span class=\"keyword\">instanceof</span> HttpRequestHandler || handler <span class=\"keyword\">instanceof</span> ResourceHttpRequestHandler) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 从切点上获取目标方法</span></div><div class=\"line\">\t\tHandlerMethod handlerMethod = (HandlerMethod) handler;</div><div class=\"line\">\t\tMethod method = handlerMethod.getMethod();</div><div class=\"line\">\t\t<span class=\"comment\">// 若目标方法忽略了安全性检查，则直接调用目标方法</span></div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (method.isAnnotationPresent(IgnoreSecurity.class)) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tMap&lt;String, String[]&gt; parameterMap = request.getParameterMap();</div><div class=\"line\">\t\tTreeMap&lt;String, String&gt; data = <span class=\"keyword\">new</span> TreeMap&lt;&gt;();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (String key : parameterMap.keySet()) &#123;</div><div class=\"line\">\t\t\tdata.put(key, parameterMap.get(key)[<span class=\"number\">0</span>]);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">boolean</span> verferSignData = SignUtil.verferSignData(data, ParamConstant.RSA_PUBLIC_KEY);</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (!verferSignData) &#123;</div><div class=\"line\">\t\t\tlog.error(<span class=\"string\">\"参数验签失败！！！\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">// 调用目标方法</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> verferSignData;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2、配置拦截器<br>在spring-mvc.xml添加如下配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">&lt;!-- 拦截器  对请求数据 进去签名校验--&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">mvc:interceptors</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mvc:interceptor</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mvc:mapping</span> <span class=\"attr\">path</span>=<span class=\"string\">\"/**\"</span>/&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">mvc:exclude-mapping</span> <span class=\"attr\">path</span>=<span class=\"string\">\"/static/**\"</span>/&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"securityInterceptor\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.zfull.pro.wx.api.sercurity.SecurityInterceptor\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">mvc:interceptor</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mvc:interceptors</span>&gt;</span></div></pre></td></tr></table></figure></p>"},{"title":"apache php环境搭建","date":"2017-03-11T03:01:21.000Z","_content":"## 准备工作-下载所需软件\n* Apache  httpd-2.2.22-win32-x86-openssl-0.9.8t.msi\n* PHP       php-5.3.10-Win32-VC9-x86.zip\n<!-- more -->\n## 安装软件\n### 安装Apache:\n双击安装，与安装其他Windows软件没有什么区别，在填Server Infomation时，并没有特殊规定，只要输入的信息符合格式即可。\n安装完成之后，在浏览器输入http://localhost，如果显示It Works!，表示Apache安装成功。\n### 安装PHP:\n将php-5.3.10-Win32-VC9-x86.zip解压到一个目录即可\n## 整合Apache+PHP\n### Apache : 首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd.conf。\n1. 让Apache可以解析php文件，在配置文件中找到\n``` shell\nLoadModule vhost_alias_module modules/mod_vhost_alias.so\n```\n在下一行添加 (文件的位置是根据PHP的所在目录而定的)\n```\n#php5_module start\nLoadModule php5_module \"D:/work/soft/phptools/php-5.4.45/php5apache2_2.dll\"\nPHPIniDir \"D:/work/soft/phptools/php-5.4.45\"\nAddType application/x-httpd-php .php .html .htm\n#php5_module end\n```\n2. 在配置文件中找到\n```\nDirectoryIndex index.html\n```\n 改为\n ```\nDirectoryIndex index.php index.html\n```\n3. 修改Apache站点目录，在配置文件中找到(Apache安装的目录不同，显示的值不一样)\n```\nDocumentRoot \"D:/work/soft/phptools/Apache2.2/htdocs\"\n```\n改为\n```\nDocumentRoot \"D:/work/soft/phptools/www\"　\n```\n再找到\n```\n<Directory \"D:/work/soft/phptools/Apache2.2/htdocs\">\n```\n改为\n```\n<Directory \"D:/work/soft/phptools/www\">　\n```\n### PHP : 把php.ini-development改名为php.ini，作为PHP的配置文件。修改php.ini\n 1. 设置PHP扩展包的具体目录，找到\n```\n; On windows:\n; extension_dir = \"ext\"\n```\n改为 (值是ext文件夹的目录)\n```\n; On windows:\nextension_dir = \"D:\\work\\soft\\phptools\\php-5.4.45\\ext\"\n```\n2. 开启相应的库功能，找到需要开启的库的所在行\n```\n;extension=php_curl.dll\n;extension=php_gd2.dll\n;extension=php_mbstring.dll\n;extension=php_mysql.dll\n;extension=php_xmlrpc.dll\n```\n去掉前面的分号(注释)，即改为\n```\nextension=php_curl.dll\nextension=php_gd2.dll\nextension=php_mbstring.dll\nextension=php_mysql.dll\nextension=php_xmlrpc.dll ;这个配置文件没有，dll文件存在，rpc协议用到\n```\n3. 设置时区，找到\n```\n;date.timezone =\n```\n 改为\n```\ndate.timezone = Asia/Shanghai\n```\n配置完成，检测一下配置是否成功。重启Apache，在站点目录下新建文件index.php，输入内容：\n```\n<?php\nphpinfo();\n?>\n```\n打开浏览器输入http://localhost，测试。\n","source":"_posts/php/apache-php环境搭建.md","raw":"---\ntitle: apache php环境搭建\ndate: 2017-03-11 11:01:21\ncategories: php\ntags:\n - apache\n - php\n - Linux\n---\n## 准备工作-下载所需软件\n* Apache  httpd-2.2.22-win32-x86-openssl-0.9.8t.msi\n* PHP       php-5.3.10-Win32-VC9-x86.zip\n<!-- more -->\n## 安装软件\n### 安装Apache:\n双击安装，与安装其他Windows软件没有什么区别，在填Server Infomation时，并没有特殊规定，只要输入的信息符合格式即可。\n安装完成之后，在浏览器输入http://localhost，如果显示It Works!，表示Apache安装成功。\n### 安装PHP:\n将php-5.3.10-Win32-VC9-x86.zip解压到一个目录即可\n## 整合Apache+PHP\n### Apache : 首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd.conf。\n1. 让Apache可以解析php文件，在配置文件中找到\n``` shell\nLoadModule vhost_alias_module modules/mod_vhost_alias.so\n```\n在下一行添加 (文件的位置是根据PHP的所在目录而定的)\n```\n#php5_module start\nLoadModule php5_module \"D:/work/soft/phptools/php-5.4.45/php5apache2_2.dll\"\nPHPIniDir \"D:/work/soft/phptools/php-5.4.45\"\nAddType application/x-httpd-php .php .html .htm\n#php5_module end\n```\n2. 在配置文件中找到\n```\nDirectoryIndex index.html\n```\n 改为\n ```\nDirectoryIndex index.php index.html\n```\n3. 修改Apache站点目录，在配置文件中找到(Apache安装的目录不同，显示的值不一样)\n```\nDocumentRoot \"D:/work/soft/phptools/Apache2.2/htdocs\"\n```\n改为\n```\nDocumentRoot \"D:/work/soft/phptools/www\"　\n```\n再找到\n```\n<Directory \"D:/work/soft/phptools/Apache2.2/htdocs\">\n```\n改为\n```\n<Directory \"D:/work/soft/phptools/www\">　\n```\n### PHP : 把php.ini-development改名为php.ini，作为PHP的配置文件。修改php.ini\n 1. 设置PHP扩展包的具体目录，找到\n```\n; On windows:\n; extension_dir = \"ext\"\n```\n改为 (值是ext文件夹的目录)\n```\n; On windows:\nextension_dir = \"D:\\work\\soft\\phptools\\php-5.4.45\\ext\"\n```\n2. 开启相应的库功能，找到需要开启的库的所在行\n```\n;extension=php_curl.dll\n;extension=php_gd2.dll\n;extension=php_mbstring.dll\n;extension=php_mysql.dll\n;extension=php_xmlrpc.dll\n```\n去掉前面的分号(注释)，即改为\n```\nextension=php_curl.dll\nextension=php_gd2.dll\nextension=php_mbstring.dll\nextension=php_mysql.dll\nextension=php_xmlrpc.dll ;这个配置文件没有，dll文件存在，rpc协议用到\n```\n3. 设置时区，找到\n```\n;date.timezone =\n```\n 改为\n```\ndate.timezone = Asia/Shanghai\n```\n配置完成，检测一下配置是否成功。重启Apache，在站点目录下新建文件index.php，输入内容：\n```\n<?php\nphpinfo();\n?>\n```\n打开浏览器输入http://localhost，测试。\n","slug":"php/apache-php环境搭建","published":1,"updated":"2017-03-17T02:49:13.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaeu0032r8syfpc4pogv","content":"<h2 id=\"准备工作-下载所需软件\"><a href=\"#准备工作-下载所需软件\" class=\"headerlink\" title=\"准备工作-下载所需软件\"></a>准备工作-下载所需软件</h2><ul>\n<li>Apache  httpd-2.2.22-win32-x86-openssl-0.9.8t.msi</li>\n<li>PHP       php-5.3.10-Win32-VC9-x86.zip<a id=\"more\"></a>\n<h2 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h2><h3 id=\"安装Apache\"><a href=\"#安装Apache\" class=\"headerlink\" title=\"安装Apache:\"></a>安装Apache:</h3>双击安装，与安装其他Windows软件没有什么区别，在填Server Infomation时，并没有特殊规定，只要输入的信息符合格式即可。<br>安装完成之后，在浏览器输入<a href=\"http://localhost，如果显示It\" target=\"_blank\" rel=\"external\">http://localhost，如果显示It</a> Works!，表示Apache安装成功。<h3 id=\"安装PHP\"><a href=\"#安装PHP\" class=\"headerlink\" title=\"安装PHP:\"></a>安装PHP:</h3>将php-5.3.10-Win32-VC9-x86.zip解压到一个目录即可<h2 id=\"整合Apache-PHP\"><a href=\"#整合Apache-PHP\" class=\"headerlink\" title=\"整合Apache+PHP\"></a>整合Apache+PHP</h2><h3 id=\"Apache-首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd-conf。\"><a href=\"#Apache-首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd-conf。\" class=\"headerlink\" title=\"Apache : 首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd.conf。\"></a>Apache : 首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd.conf。</h3></li>\n</ul>\n<ol>\n<li>让Apache可以解析php文件，在配置文件中找到<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">LoadModule vhost_alias_module modules/mod_vhost_alias.so</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在下一行添加 (文件的位置是根据PHP的所在目录而定的)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#php5_module start</div><div class=\"line\">LoadModule php5_module &quot;D:/work/soft/phptools/php-5.4.45/php5apache2_2.dll&quot;</div><div class=\"line\">PHPIniDir &quot;D:/work/soft/phptools/php-5.4.45&quot;</div><div class=\"line\">AddType application/x-httpd-php .php .html .htm</div><div class=\"line\">#php5_module end</div></pre></td></tr></table></figure></p>\n<ol>\n<li><p>在配置文件中找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DirectoryIndex index.html</div></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DirectoryIndex index.php index.html</div></pre></td></tr></table></figure>\n</li>\n<li><p>修改Apache站点目录，在配置文件中找到(Apache安装的目录不同，显示的值不一样)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DocumentRoot &quot;D:/work/soft/phptools/Apache2.2/htdocs&quot;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>改为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DocumentRoot &quot;D:/work/soft/phptools/www&quot;</div></pre></td></tr></table></figure></p>\n<p>再找到<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Directory &quot;D:/work/soft/phptools/Apache2.2/htdocs&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>改为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Directory &quot;D:/work/soft/phptools/www&quot;&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"PHP-把php-ini-development改名为php-ini，作为PHP的配置文件。修改php-ini\"><a href=\"#PHP-把php-ini-development改名为php-ini，作为PHP的配置文件。修改php-ini\" class=\"headerlink\" title=\"PHP : 把php.ini-development改名为php.ini，作为PHP的配置文件。修改php.ini\"></a>PHP : 把php.ini-development改名为php.ini，作为PHP的配置文件。修改php.ini</h3><ol>\n<li>设置PHP扩展包的具体目录，找到<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">; On windows:</div><div class=\"line\">; extension_dir = &quot;ext&quot;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>改为 (值是ext文件夹的目录)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">; On windows:</div><div class=\"line\">extension_dir = &quot;D:\\work\\soft\\phptools\\php-5.4.45\\ext&quot;</div></pre></td></tr></table></figure></p>\n<ol>\n<li>开启相应的库功能，找到需要开启的库的所在行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">;extension=php_curl.dll</div><div class=\"line\">;extension=php_gd2.dll</div><div class=\"line\">;extension=php_mbstring.dll</div><div class=\"line\">;extension=php_mysql.dll</div><div class=\"line\">;extension=php_xmlrpc.dll</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>去掉前面的分号(注释)，即改为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">extension=php_curl.dll</div><div class=\"line\">extension=php_gd2.dll</div><div class=\"line\">extension=php_mbstring.dll</div><div class=\"line\">extension=php_mysql.dll</div><div class=\"line\">extension=php_xmlrpc.dll ;这个配置文件没有，dll文件存在，rpc协议用到</div></pre></td></tr></table></figure></p>\n<ol>\n<li><p>设置时区，找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">;date.timezone =</div></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">date.timezone = Asia/Shanghai</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>配置完成，检测一下配置是否成功。重启Apache，在站点目录下新建文件index.php，输入内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">phpinfo();</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p>打开浏览器输入<a href=\"http://localhost，测试。\" target=\"_blank\" rel=\"external\">http://localhost，测试。</a></p>\n","excerpt":"<h2 id=\"准备工作-下载所需软件\"><a href=\"#准备工作-下载所需软件\" class=\"headerlink\" title=\"准备工作-下载所需软件\"></a>准备工作-下载所需软件</h2><ul>\n<li>Apache  httpd-2.2.22-win32-x86-openssl-0.9.8t.msi</li>\n<li>PHP       php-5.3.10-Win32-VC9-x86.zip</li></ul>","more":"<h2 id=\"安装软件\"><a href=\"#安装软件\" class=\"headerlink\" title=\"安装软件\"></a>安装软件</h2><h3 id=\"安装Apache\"><a href=\"#安装Apache\" class=\"headerlink\" title=\"安装Apache:\"></a>安装Apache:</h3>双击安装，与安装其他Windows软件没有什么区别，在填Server Infomation时，并没有特殊规定，只要输入的信息符合格式即可。<br>安装完成之后，在浏览器输入<a href=\"http://localhost，如果显示It\">http://localhost，如果显示It</a> Works!，表示Apache安装成功。<h3 id=\"安装PHP\"><a href=\"#安装PHP\" class=\"headerlink\" title=\"安装PHP:\"></a>安装PHP:</h3>将php-5.3.10-Win32-VC9-x86.zip解压到一个目录即可<h2 id=\"整合Apache-PHP\"><a href=\"#整合Apache-PHP\" class=\"headerlink\" title=\"整合Apache+PHP\"></a>整合Apache+PHP</h2><h3 id=\"Apache-首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd-conf。\"><a href=\"#Apache-首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd-conf。\" class=\"headerlink\" title=\"Apache : 首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd.conf。\"></a>Apache : 首先修改Apache的配置文件，让Apache支持解析PHP文件。Apache配置文件在Apache安装目录的conf目录下的httpd.conf。</h3>\n\n<ol>\n<li>让Apache可以解析php文件，在配置文件中找到<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">LoadModule vhost_alias_module modules/mod_vhost_alias.so</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在下一行添加 (文件的位置是根据PHP的所在目录而定的)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#php5_module start</div><div class=\"line\">LoadModule php5_module &quot;D:/work/soft/phptools/php-5.4.45/php5apache2_2.dll&quot;</div><div class=\"line\">PHPIniDir &quot;D:/work/soft/phptools/php-5.4.45&quot;</div><div class=\"line\">AddType application/x-httpd-php .php .html .htm</div><div class=\"line\">#php5_module end</div></pre></td></tr></table></figure></p>\n<ol>\n<li><p>在配置文件中找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DirectoryIndex index.html</div></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DirectoryIndex index.php index.html</div></pre></td></tr></table></figure>\n</li>\n<li><p>修改Apache站点目录，在配置文件中找到(Apache安装的目录不同，显示的值不一样)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DocumentRoot &quot;D:/work/soft/phptools/Apache2.2/htdocs&quot;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>改为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DocumentRoot &quot;D:/work/soft/phptools/www&quot;</div></pre></td></tr></table></figure></p>\n<p>再找到<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Directory &quot;D:/work/soft/phptools/Apache2.2/htdocs&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>改为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Directory &quot;D:/work/soft/phptools/www&quot;&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"PHP-把php-ini-development改名为php-ini，作为PHP的配置文件。修改php-ini\"><a href=\"#PHP-把php-ini-development改名为php-ini，作为PHP的配置文件。修改php-ini\" class=\"headerlink\" title=\"PHP : 把php.ini-development改名为php.ini，作为PHP的配置文件。修改php.ini\"></a>PHP : 把php.ini-development改名为php.ini，作为PHP的配置文件。修改php.ini</h3><ol>\n<li>设置PHP扩展包的具体目录，找到<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">; On windows:</div><div class=\"line\">; extension_dir = &quot;ext&quot;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>改为 (值是ext文件夹的目录)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">; On windows:</div><div class=\"line\">extension_dir = &quot;D:\\work\\soft\\phptools\\php-5.4.45\\ext&quot;</div></pre></td></tr></table></figure></p>\n<ol>\n<li>开启相应的库功能，找到需要开启的库的所在行<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">;extension=php_curl.dll</div><div class=\"line\">;extension=php_gd2.dll</div><div class=\"line\">;extension=php_mbstring.dll</div><div class=\"line\">;extension=php_mysql.dll</div><div class=\"line\">;extension=php_xmlrpc.dll</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>去掉前面的分号(注释)，即改为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">extension=php_curl.dll</div><div class=\"line\">extension=php_gd2.dll</div><div class=\"line\">extension=php_mbstring.dll</div><div class=\"line\">extension=php_mysql.dll</div><div class=\"line\">extension=php_xmlrpc.dll ;这个配置文件没有，dll文件存在，rpc协议用到</div></pre></td></tr></table></figure></p>\n<ol>\n<li><p>设置时区，找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">;date.timezone =</div></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">date.timezone = Asia/Shanghai</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>配置完成，检测一下配置是否成功。重启Apache，在站点目录下新建文件index.php，输入内容：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">phpinfo();</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p>打开浏览器输入<a href=\"http://localhost，测试。\">http://localhost，测试。</a></p>"},{"title":"Spring 声明式事务，propagation属性列表","date":"2017-03-20T09:59:44.000Z","_content":"TransactionDefinition接口中定义，共有7种选项可用：\n```\nPROPAGATION_REQUIRED：支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。\nPROPAGATION_SUPPORTS：支持当前事务，如果当前没有事务，就以非事务方式执行。\nPROPAGATION_MANDATORY：支持当前事务，如果当前没有事务，就抛出异常。\nPROPAGATION_REQUIRES_NEW：新建事务，如果当前存在事务，把当前事务挂起。\nPROPAGATION_NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。\nPROPAGATION_NEVER：以非事务方式执行，如果当前存在事务，则抛出异常。\nPROPAGATION_NESTED：支持当前事务，如果当前事务存在，则执行一个嵌套事务（还不是太明白），如果当前没有事务，就新建一个事务。\n```\n<!--more-->\nTransactionDefinition中定义的隔离（isolation）级别，有5种：\n```\n1. ISOLATION_DEFAULT 默认的隔离级别\n下面几个都是 JDBC isolation levels 一一对应：\n2. ISOLATION_READ_UNCOMMITTED Connection.TRANSACTION_READ_UNCOMMITTED\n指示防止发生脏读的常量；不可重复读和虚读有可能发生。\n3. ISOLATION_READ_COMMITTED Connection.TRANSACTION_READ_COMMITTED\n指示可以发生脏读 (dirty read)、不可重复读和虚读 (phantom read) 的常量。\n4. ISOLATION_REPEATABLE_READ Connection.TRANSACTION_REPEATABLE_READ\n指示防止发生脏读和不可重复读的常量；虚读有可能发生。\n5. ISOLATION_SERIALIZABLE Connection.TRANSACTION_SERIALIZABLE\n指示防止发生脏读、不可重复读和虚读的常量。\n```\n注：\n脏读 dirty reads：当事务读取还未被提交的数据时，就会发生这种事件。举例来说：Transaction 1 修改了一行数据，然后 Transaction 2 在 Transaction 1 还未提交修改操作之前读取了被修改的行。如果 Transaction 1 回滚了修改操作，那么 Transaction 2 读取的数据就可以看作是从未存在过的。\n不可重复的读 non-repeatable reads：当事务两次读取同一行数据，但每次得到的数据都不一样时，就会发生这种事件。举例来说：Transaction 1 读取一行数据，然后 Transaction 2 修改或删除该行并提交修改操作。当 Transaction 1 试图重新读取该行时，它就会得到不同的数据值（如果该行被更新）或发现该行不再存在（如果该行被删除）。\n虚读 phantom read：如果符合搜索条件的一行数据在后面的读取操作中出现，但该行数据却不属于最初的数据，就会发生这种事件。举例来说：Transaction 1 读取满足某种搜索条件的一些行，然后 Transaction 2 插入了符合 Transaction 1 的搜索条件的一个新行。如果 Transaction 1 重新执行产生原来那些行的查询，就会得到不同的行。\n\n来源：[http://www.blogjava.net/wmcoo/articles/333831.html](http://www.blogjava.net/wmcoo/articles/333831.html)\n","source":"_posts/spring/Spring-声明式事务，propagation属性列表.md","raw":"---\ntitle: Spring 声明式事务，propagation属性列表\ndate: 2017-03-20 17:59:44\ncategory: spring\ntags: [spring,事务,propagation]\n---\nTransactionDefinition接口中定义，共有7种选项可用：\n```\nPROPAGATION_REQUIRED：支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。\nPROPAGATION_SUPPORTS：支持当前事务，如果当前没有事务，就以非事务方式执行。\nPROPAGATION_MANDATORY：支持当前事务，如果当前没有事务，就抛出异常。\nPROPAGATION_REQUIRES_NEW：新建事务，如果当前存在事务，把当前事务挂起。\nPROPAGATION_NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。\nPROPAGATION_NEVER：以非事务方式执行，如果当前存在事务，则抛出异常。\nPROPAGATION_NESTED：支持当前事务，如果当前事务存在，则执行一个嵌套事务（还不是太明白），如果当前没有事务，就新建一个事务。\n```\n<!--more-->\nTransactionDefinition中定义的隔离（isolation）级别，有5种：\n```\n1. ISOLATION_DEFAULT 默认的隔离级别\n下面几个都是 JDBC isolation levels 一一对应：\n2. ISOLATION_READ_UNCOMMITTED Connection.TRANSACTION_READ_UNCOMMITTED\n指示防止发生脏读的常量；不可重复读和虚读有可能发生。\n3. ISOLATION_READ_COMMITTED Connection.TRANSACTION_READ_COMMITTED\n指示可以发生脏读 (dirty read)、不可重复读和虚读 (phantom read) 的常量。\n4. ISOLATION_REPEATABLE_READ Connection.TRANSACTION_REPEATABLE_READ\n指示防止发生脏读和不可重复读的常量；虚读有可能发生。\n5. ISOLATION_SERIALIZABLE Connection.TRANSACTION_SERIALIZABLE\n指示防止发生脏读、不可重复读和虚读的常量。\n```\n注：\n脏读 dirty reads：当事务读取还未被提交的数据时，就会发生这种事件。举例来说：Transaction 1 修改了一行数据，然后 Transaction 2 在 Transaction 1 还未提交修改操作之前读取了被修改的行。如果 Transaction 1 回滚了修改操作，那么 Transaction 2 读取的数据就可以看作是从未存在过的。\n不可重复的读 non-repeatable reads：当事务两次读取同一行数据，但每次得到的数据都不一样时，就会发生这种事件。举例来说：Transaction 1 读取一行数据，然后 Transaction 2 修改或删除该行并提交修改操作。当 Transaction 1 试图重新读取该行时，它就会得到不同的数据值（如果该行被更新）或发现该行不再存在（如果该行被删除）。\n虚读 phantom read：如果符合搜索条件的一行数据在后面的读取操作中出现，但该行数据却不属于最初的数据，就会发生这种事件。举例来说：Transaction 1 读取满足某种搜索条件的一些行，然后 Transaction 2 插入了符合 Transaction 1 的搜索条件的一个新行。如果 Transaction 1 重新执行产生原来那些行的查询，就会得到不同的行。\n\n来源：[http://www.blogjava.net/wmcoo/articles/333831.html](http://www.blogjava.net/wmcoo/articles/333831.html)\n","slug":"spring/Spring-声明式事务，propagation属性列表","published":1,"updated":"2017-03-20T10:07:04.091Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaew0035r8syovtbj0ib","content":"<p>TransactionDefinition接口中定义，共有7种选项可用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">PROPAGATION_REQUIRED：支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。</div><div class=\"line\">PROPAGATION_SUPPORTS：支持当前事务，如果当前没有事务，就以非事务方式执行。</div><div class=\"line\">PROPAGATION_MANDATORY：支持当前事务，如果当前没有事务，就抛出异常。</div><div class=\"line\">PROPAGATION_REQUIRES_NEW：新建事务，如果当前存在事务，把当前事务挂起。</div><div class=\"line\">PROPAGATION_NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</div><div class=\"line\">PROPAGATION_NEVER：以非事务方式执行，如果当前存在事务，则抛出异常。</div><div class=\"line\">PROPAGATION_NESTED：支持当前事务，如果当前事务存在，则执行一个嵌套事务（还不是太明白），如果当前没有事务，就新建一个事务。</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>TransactionDefinition中定义的隔离（isolation）级别，有5种：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. ISOLATION_DEFAULT 默认的隔离级别</div><div class=\"line\">下面几个都是 JDBC isolation levels 一一对应：</div><div class=\"line\">2. ISOLATION_READ_UNCOMMITTED Connection.TRANSACTION_READ_UNCOMMITTED</div><div class=\"line\">指示防止发生脏读的常量；不可重复读和虚读有可能发生。</div><div class=\"line\">3. ISOLATION_READ_COMMITTED Connection.TRANSACTION_READ_COMMITTED</div><div class=\"line\">指示可以发生脏读 (dirty read)、不可重复读和虚读 (phantom read) 的常量。</div><div class=\"line\">4. ISOLATION_REPEATABLE_READ Connection.TRANSACTION_REPEATABLE_READ</div><div class=\"line\">指示防止发生脏读和不可重复读的常量；虚读有可能发生。</div><div class=\"line\">5. ISOLATION_SERIALIZABLE Connection.TRANSACTION_SERIALIZABLE</div><div class=\"line\">指示防止发生脏读、不可重复读和虚读的常量。</div></pre></td></tr></table></figure></p>\n<p>注：<br>脏读 dirty reads：当事务读取还未被提交的数据时，就会发生这种事件。举例来说：Transaction 1 修改了一行数据，然后 Transaction 2 在 Transaction 1 还未提交修改操作之前读取了被修改的行。如果 Transaction 1 回滚了修改操作，那么 Transaction 2 读取的数据就可以看作是从未存在过的。<br>不可重复的读 non-repeatable reads：当事务两次读取同一行数据，但每次得到的数据都不一样时，就会发生这种事件。举例来说：Transaction 1 读取一行数据，然后 Transaction 2 修改或删除该行并提交修改操作。当 Transaction 1 试图重新读取该行时，它就会得到不同的数据值（如果该行被更新）或发现该行不再存在（如果该行被删除）。<br>虚读 phantom read：如果符合搜索条件的一行数据在后面的读取操作中出现，但该行数据却不属于最初的数据，就会发生这种事件。举例来说：Transaction 1 读取满足某种搜索条件的一些行，然后 Transaction 2 插入了符合 Transaction 1 的搜索条件的一个新行。如果 Transaction 1 重新执行产生原来那些行的查询，就会得到不同的行。</p>\n<p>来源：<a href=\"http://www.blogjava.net/wmcoo/articles/333831.html\" target=\"_blank\" rel=\"external\">http://www.blogjava.net/wmcoo/articles/333831.html</a></p>\n","excerpt":"<p>TransactionDefinition接口中定义，共有7种选项可用：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">PROPAGATION_REQUIRED：支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择。</div><div class=\"line\">PROPAGATION_SUPPORTS：支持当前事务，如果当前没有事务，就以非事务方式执行。</div><div class=\"line\">PROPAGATION_MANDATORY：支持当前事务，如果当前没有事务，就抛出异常。</div><div class=\"line\">PROPAGATION_REQUIRES_NEW：新建事务，如果当前存在事务，把当前事务挂起。</div><div class=\"line\">PROPAGATION_NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</div><div class=\"line\">PROPAGATION_NEVER：以非事务方式执行，如果当前存在事务，则抛出异常。</div><div class=\"line\">PROPAGATION_NESTED：支持当前事务，如果当前事务存在，则执行一个嵌套事务（还不是太明白），如果当前没有事务，就新建一个事务。</div></pre></td></tr></table></figure></p>","more":"<p>TransactionDefinition中定义的隔离（isolation）级别，有5种：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. ISOLATION_DEFAULT 默认的隔离级别</div><div class=\"line\">下面几个都是 JDBC isolation levels 一一对应：</div><div class=\"line\">2. ISOLATION_READ_UNCOMMITTED Connection.TRANSACTION_READ_UNCOMMITTED</div><div class=\"line\">指示防止发生脏读的常量；不可重复读和虚读有可能发生。</div><div class=\"line\">3. ISOLATION_READ_COMMITTED Connection.TRANSACTION_READ_COMMITTED</div><div class=\"line\">指示可以发生脏读 (dirty read)、不可重复读和虚读 (phantom read) 的常量。</div><div class=\"line\">4. ISOLATION_REPEATABLE_READ Connection.TRANSACTION_REPEATABLE_READ</div><div class=\"line\">指示防止发生脏读和不可重复读的常量；虚读有可能发生。</div><div class=\"line\">5. ISOLATION_SERIALIZABLE Connection.TRANSACTION_SERIALIZABLE</div><div class=\"line\">指示防止发生脏读、不可重复读和虚读的常量。</div></pre></td></tr></table></figure></p>\n<p>注：<br>脏读 dirty reads：当事务读取还未被提交的数据时，就会发生这种事件。举例来说：Transaction 1 修改了一行数据，然后 Transaction 2 在 Transaction 1 还未提交修改操作之前读取了被修改的行。如果 Transaction 1 回滚了修改操作，那么 Transaction 2 读取的数据就可以看作是从未存在过的。<br>不可重复的读 non-repeatable reads：当事务两次读取同一行数据，但每次得到的数据都不一样时，就会发生这种事件。举例来说：Transaction 1 读取一行数据，然后 Transaction 2 修改或删除该行并提交修改操作。当 Transaction 1 试图重新读取该行时，它就会得到不同的数据值（如果该行被更新）或发现该行不再存在（如果该行被删除）。<br>虚读 phantom read：如果符合搜索条件的一行数据在后面的读取操作中出现，但该行数据却不属于最初的数据，就会发生这种事件。举例来说：Transaction 1 读取满足某种搜索条件的一些行，然后 Transaction 2 插入了符合 Transaction 1 的搜索条件的一个新行。如果 Transaction 1 重新执行产生原来那些行的查询，就会得到不同的行。</p>\n<p>来源：<a href=\"http://www.blogjava.net/wmcoo/articles/333831.html\">http://www.blogjava.net/wmcoo/articles/333831.html</a></p>"},{"title":"使用注解方式注入HttpServletRequest ，HttpServletResponse 等对象","date":"2017-03-19T14:35:27.000Z","_content":"## 在web.xml添加spring 的 ContextLoaderListener  监听器\n```xml\n<listener>\n  \t\t<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n</listener>\n```\n## 在Controller可以注入如下对象\n```java\n    @Autowired\n\tprotected HttpServletRequest request;\n\t@Autowired\n\tprotected HttpServletResponse response;\n\t@Autowired\n\tprotected HttpSession session;\n\t@Autowired\n\tprotected ServletContext application;\n```\n\n","source":"_posts/spring/使用注解方式注入HttpServletRequest-，HttpServletResponse-等对象.md","raw":"---\ntitle: 使用注解方式注入HttpServletRequest ，HttpServletResponse 等对象\ndate: 2017-03-19 22:35:27\ncategory: spring\ntags: [spring,注解]\n---\n## 在web.xml添加spring 的 ContextLoaderListener  监听器\n```xml\n<listener>\n  \t\t<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n</listener>\n```\n## 在Controller可以注入如下对象\n```java\n    @Autowired\n\tprotected HttpServletRequest request;\n\t@Autowired\n\tprotected HttpServletResponse response;\n\t@Autowired\n\tprotected HttpSession session;\n\t@Autowired\n\tprotected ServletContext application;\n```\n\n","slug":"spring/使用注解方式注入HttpServletRequest-，HttpServletResponse-等对象","published":1,"updated":"2017-03-19T14:36:49.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaey0039r8syqkhsmgop","content":"<h2 id=\"在web-xml添加spring-的-ContextLoaderListener-监听器\"><a href=\"#在web-xml添加spring-的-ContextLoaderListener-监听器\" class=\"headerlink\" title=\"在web.xml添加spring 的 ContextLoaderListener  监听器\"></a>在web.xml添加spring 的 ContextLoaderListener  监听器</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">listener</span>&gt;</span></div><div class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class=\"tag\">&lt;/<span class=\"name\">listener-class</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">listener</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"在Controller可以注入如下对象\"><a href=\"#在Controller可以注入如下对象\" class=\"headerlink\" title=\"在Controller可以注入如下对象\"></a>在Controller可以注入如下对象</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">   <span class=\"meta\">@Autowired</span></div><div class=\"line\"><span class=\"keyword\">protected</span> HttpServletRequest request;</div><div class=\"line\"><span class=\"meta\">@Autowired</span></div><div class=\"line\"><span class=\"keyword\">protected</span> HttpServletResponse response;</div><div class=\"line\"><span class=\"meta\">@Autowired</span></div><div class=\"line\"><span class=\"keyword\">protected</span> HttpSession session;</div><div class=\"line\"><span class=\"meta\">@Autowired</span></div><div class=\"line\"><span class=\"keyword\">protected</span> ServletContext application;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"在web-xml添加spring-的-ContextLoaderListener-监听器\"><a href=\"#在web-xml添加spring-的-ContextLoaderListener-监听器\" class=\"headerlink\" title=\"在web.xml添加spring 的 ContextLoaderListener  监听器\"></a>在web.xml添加spring 的 ContextLoaderListener  监听器</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">listener</span>&gt;</span></div><div class=\"line\">  \t\t<span class=\"tag\">&lt;<span class=\"name\">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class=\"tag\">&lt;/<span class=\"name\">listener-class</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">listener</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"在Controller可以注入如下对象\"><a href=\"#在Controller可以注入如下对象\" class=\"headerlink\" title=\"在Controller可以注入如下对象\"></a>在Controller可以注入如下对象</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">   <span class=\"meta\">@Autowired</span></div><div class=\"line\"><span class=\"keyword\">protected</span> HttpServletRequest request;</div><div class=\"line\"><span class=\"meta\">@Autowired</span></div><div class=\"line\"><span class=\"keyword\">protected</span> HttpServletResponse response;</div><div class=\"line\"><span class=\"meta\">@Autowired</span></div><div class=\"line\"><span class=\"keyword\">protected</span> HttpSession session;</div><div class=\"line\"><span class=\"meta\">@Autowired</span></div><div class=\"line\"><span class=\"keyword\">protected</span> ServletContext application;</div></pre></td></tr></table></figure>\n"},{"title":"CentOS6.5安装vncserver实现图形化访问","date":"2017-03-09T09:25:57.000Z","_content":"## 安装gnome图形化桌面\n``` shell\nyum groupinstall -y \"X Window System\"\nyum groupinstall -y \"Desktop\"\nyum groupinstall -y \"Chinese Support\"\n```\n<!-- more -->\n## 安装vncserver并配置\n### 安装vncserver\n``` shell\nyum install -y tigervnc-server\n```\n### 配置vncserver\n- 配置为开机自启动\n``` shell\nchkconfig --level 345 vncserver on\n```\n- 配置vnc密码\n``` shell\nvncserver\nYou will require a password to access your desktop.\nPassword:\nVerify:\n```\n- 配置为使用gnome桌面\n修改 /root/.vnc/xstartup文件，把最后的 twm & 删掉 加上 gnome-session &。\n- 配置vncserver启动后监听端口和环境参数\n修改/etc/sysconfig/vncservers 文件添加以下内容\n``` shell\nVNCSERVERS=\"1:root\"\n# 桌面号:用户    监听 590* 端口\nVNCSERVERARGS[1]=\"-geometry 1200x800\"\n```\n- 重启vncserver服务\n``` shell\nservice vncserver restart\n```\n## 允许root访问图形界面和生成新的machine-id\n``` shell\nsed -i 's/.*!= root.*/#&/' /etc/pam.d/gdm\ndbus-uuidgen >/var/lib/dbus/machine-id\n ```\n## 关闭selinux和NetworkManager服务\n### 检查selinux服务并关闭\n``` shell\nvi /etc/selinux/config\n```\n确认里面的SELINUX字段的值是disabled，如果不是则改为disabled\n### 关闭NetworkManager服务\n``` shell\nchkconfig --del NetworkManager\n```\n","source":"_posts/云主机/CentOS6-5安装vncserver实现图形化访问.md","raw":"---\ntitle: CentOS6.5安装vncserver实现图形化访问\ndate: 2017-03-09 17:25:57\ncategories: 云主机\ntags:\n - Linux\n - CentOS\n - vncserver\n---\n## 安装gnome图形化桌面\n``` shell\nyum groupinstall -y \"X Window System\"\nyum groupinstall -y \"Desktop\"\nyum groupinstall -y \"Chinese Support\"\n```\n<!-- more -->\n## 安装vncserver并配置\n### 安装vncserver\n``` shell\nyum install -y tigervnc-server\n```\n### 配置vncserver\n- 配置为开机自启动\n``` shell\nchkconfig --level 345 vncserver on\n```\n- 配置vnc密码\n``` shell\nvncserver\nYou will require a password to access your desktop.\nPassword:\nVerify:\n```\n- 配置为使用gnome桌面\n修改 /root/.vnc/xstartup文件，把最后的 twm & 删掉 加上 gnome-session &。\n- 配置vncserver启动后监听端口和环境参数\n修改/etc/sysconfig/vncservers 文件添加以下内容\n``` shell\nVNCSERVERS=\"1:root\"\n# 桌面号:用户    监听 590* 端口\nVNCSERVERARGS[1]=\"-geometry 1200x800\"\n```\n- 重启vncserver服务\n``` shell\nservice vncserver restart\n```\n## 允许root访问图形界面和生成新的machine-id\n``` shell\nsed -i 's/.*!= root.*/#&/' /etc/pam.d/gdm\ndbus-uuidgen >/var/lib/dbus/machine-id\n ```\n## 关闭selinux和NetworkManager服务\n### 检查selinux服务并关闭\n``` shell\nvi /etc/selinux/config\n```\n确认里面的SELINUX字段的值是disabled，如果不是则改为disabled\n### 关闭NetworkManager服务\n``` shell\nchkconfig --del NetworkManager\n```\n","slug":"云主机/CentOS6-5安装vncserver实现图形化访问","published":1,"updated":"2017-03-12T15:17:37.231Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaf1003cr8syr7nglxc0","content":"<h2 id=\"安装gnome图形化桌面\"><a href=\"#安装gnome图形化桌面\" class=\"headerlink\" title=\"安装gnome图形化桌面\"></a>安装gnome图形化桌面</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum groupinstall -y &quot;X Window System&quot;</div><div class=\"line\">yum groupinstall -y &quot;Desktop&quot;</div><div class=\"line\">yum groupinstall -y &quot;Chinese Support&quot;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"安装vncserver并配置\"><a href=\"#安装vncserver并配置\" class=\"headerlink\" title=\"安装vncserver并配置\"></a>安装vncserver并配置</h2><h3 id=\"安装vncserver\"><a href=\"#安装vncserver\" class=\"headerlink\" title=\"安装vncserver\"></a>安装vncserver</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install -y tigervnc-server</div></pre></td></tr></table></figure>\n<h3 id=\"配置vncserver\"><a href=\"#配置vncserver\" class=\"headerlink\" title=\"配置vncserver\"></a>配置vncserver</h3><ul>\n<li><p>配置为开机自启动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig --level 345 vncserver on</div></pre></td></tr></table></figure>\n</li>\n<li><p>配置vnc密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">vncserver</div><div class=\"line\">You will require a password to access your desktop.</div><div class=\"line\">Password:</div><div class=\"line\">Verify:</div></pre></td></tr></table></figure>\n</li>\n<li><p>配置为使用gnome桌面<br>修改 /root/.vnc/xstartup文件，把最后的 twm &amp; 删掉 加上 gnome-session &amp;。</p>\n</li>\n<li><p>配置vncserver启动后监听端口和环境参数<br>修改/etc/sysconfig/vncservers 文件添加以下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">VNCSERVERS=&quot;1:root&quot;</div><div class=\"line\"># 桌面号:用户    监听 590* 端口</div><div class=\"line\">VNCSERVERARGS[1]=&quot;-geometry 1200x800&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>重启vncserver服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service vncserver restart</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"允许root访问图形界面和生成新的machine-id\"><a href=\"#允许root访问图形界面和生成新的machine-id\" class=\"headerlink\" title=\"允许root访问图形界面和生成新的machine-id\"></a>允许root访问图形界面和生成新的machine-id</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sed -i &apos;s/.*!= root.*/#&amp;/&apos; /etc/pam.d/gdm</div><div class=\"line\">dbus-uuidgen &gt;/var/lib/dbus/machine-id</div></pre></td></tr></table></figure>\n<h2 id=\"关闭selinux和NetworkManager服务\"><a href=\"#关闭selinux和NetworkManager服务\" class=\"headerlink\" title=\"关闭selinux和NetworkManager服务\"></a>关闭selinux和NetworkManager服务</h2><h3 id=\"检查selinux服务并关闭\"><a href=\"#检查selinux服务并关闭\" class=\"headerlink\" title=\"检查selinux服务并关闭\"></a>检查selinux服务并关闭</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /etc/selinux/config</div></pre></td></tr></table></figure>\n<p>确认里面的SELINUX字段的值是disabled，如果不是则改为disabled</p>\n<h3 id=\"关闭NetworkManager服务\"><a href=\"#关闭NetworkManager服务\" class=\"headerlink\" title=\"关闭NetworkManager服务\"></a>关闭NetworkManager服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig --del NetworkManager</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"安装gnome图形化桌面\"><a href=\"#安装gnome图形化桌面\" class=\"headerlink\" title=\"安装gnome图形化桌面\"></a>安装gnome图形化桌面</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum groupinstall -y &quot;X Window System&quot;</div><div class=\"line\">yum groupinstall -y &quot;Desktop&quot;</div><div class=\"line\">yum groupinstall -y &quot;Chinese Support&quot;</div></pre></td></tr></table></figure>","more":"<h2 id=\"安装vncserver并配置\"><a href=\"#安装vncserver并配置\" class=\"headerlink\" title=\"安装vncserver并配置\"></a>安装vncserver并配置</h2><h3 id=\"安装vncserver\"><a href=\"#安装vncserver\" class=\"headerlink\" title=\"安装vncserver\"></a>安装vncserver</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install -y tigervnc-server</div></pre></td></tr></table></figure>\n<h3 id=\"配置vncserver\"><a href=\"#配置vncserver\" class=\"headerlink\" title=\"配置vncserver\"></a>配置vncserver</h3><ul>\n<li><p>配置为开机自启动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig --level 345 vncserver on</div></pre></td></tr></table></figure>\n</li>\n<li><p>配置vnc密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">vncserver</div><div class=\"line\">You will require a password to access your desktop.</div><div class=\"line\">Password:</div><div class=\"line\">Verify:</div></pre></td></tr></table></figure>\n</li>\n<li><p>配置为使用gnome桌面<br>修改 /root/.vnc/xstartup文件，把最后的 twm &amp; 删掉 加上 gnome-session &amp;。</p>\n</li>\n<li><p>配置vncserver启动后监听端口和环境参数<br>修改/etc/sysconfig/vncservers 文件添加以下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">VNCSERVERS=&quot;1:root&quot;</div><div class=\"line\"># 桌面号:用户    监听 590* 端口</div><div class=\"line\">VNCSERVERARGS[1]=&quot;-geometry 1200x800&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>重启vncserver服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service vncserver restart</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"允许root访问图形界面和生成新的machine-id\"><a href=\"#允许root访问图形界面和生成新的machine-id\" class=\"headerlink\" title=\"允许root访问图形界面和生成新的machine-id\"></a>允许root访问图形界面和生成新的machine-id</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sed -i &apos;s/.*!= root.*/#&amp;/&apos; /etc/pam.d/gdm</div><div class=\"line\">dbus-uuidgen &gt;/var/lib/dbus/machine-id</div></pre></td></tr></table></figure>\n<h2 id=\"关闭selinux和NetworkManager服务\"><a href=\"#关闭selinux和NetworkManager服务\" class=\"headerlink\" title=\"关闭selinux和NetworkManager服务\"></a>关闭selinux和NetworkManager服务</h2><h3 id=\"检查selinux服务并关闭\"><a href=\"#检查selinux服务并关闭\" class=\"headerlink\" title=\"检查selinux服务并关闭\"></a>检查selinux服务并关闭</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /etc/selinux/config</div></pre></td></tr></table></figure>\n<p>确认里面的SELINUX字段的值是disabled，如果不是则改为disabled</p>\n<h3 id=\"关闭NetworkManager服务\"><a href=\"#关闭NetworkManager服务\" class=\"headerlink\" title=\"关闭NetworkManager服务\"></a>关闭NetworkManager服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chkconfig --del NetworkManager</div></pre></td></tr></table></figure>"},{"title":"Linux下解压xz格式文件","date":"2017-03-17T09:55:48.000Z","_content":"安装node的时候，下载到时xz格式的文件。记录下xz解压姿势\n<!--more-->\n```shell\nxz -d ***.tar.xz\ntar -xvf  ***.tar\n```\n 可以看到这个压缩包也是打包后再压缩，外面是xz压缩方式，里层是tar打包方式。\n补充：目前可以直接使用 tar xvJf  ***.tar.xz 来解压","source":"_posts/云主机/Linux下解压xz格式文件.md","raw":"---\ntitle: Linux下解压xz格式文件\ndate: 2017-03-17 17:55:48\ncategories: 云主机\ntags:\n - 下载\n - Linux\n---\n安装node的时候，下载到时xz格式的文件。记录下xz解压姿势\n<!--more-->\n```shell\nxz -d ***.tar.xz\ntar -xvf  ***.tar\n```\n 可以看到这个压缩包也是打包后再压缩，外面是xz压缩方式，里层是tar打包方式。\n补充：目前可以直接使用 tar xvJf  ***.tar.xz 来解压","slug":"云主机/Linux下解压xz格式文件","published":1,"updated":"2017-03-17T09:59:59.420Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaf4003fr8syvb47tt26","content":"<p>安装node的时候，下载到时xz格式的文件。记录下xz解压姿势<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">xz -d ***.tar.xz</div><div class=\"line\">tar -xvf  ***.tar</div></pre></td></tr></table></figure></p>\n<p> 可以看到这个压缩包也是打包后再压缩，外面是xz压缩方式，里层是tar打包方式。<br>补充：目前可以直接使用 tar xvJf  <em>*</em>.tar.xz 来解压</p>\n","excerpt":"<p>安装node的时候，下载到时xz格式的文件。记录下xz解压姿势<br></p>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">xz -d ***.tar.xz</div><div class=\"line\">tar -xvf  ***.tar</div></pre></td></tr></table></figure><p></p>\n<p> 可以看到这个压缩包也是打包后再压缩，外面是xz压缩方式，里层是tar打包方式。<br>补充：目前可以直接使用 tar xvJf  <em>*</em>.tar.xz 来解压</p>"},{"title":"CentOS清理内存、内存回收释放及内存使用查看的相关命令","date":"2017-03-10T09:43:24.000Z","_content":"在清理前内存使用情况\n```shell\nfree -m\n```\n<!-- more -->\n用以下命令清理内存\n```shell\necho 1 > /proc/sys/vm/drop_caches\n```\n清理后内存使用情况再用以下命令看看。\n```shell\nfree –m\n```\n多出很多内存了吧。\n\n查看内存条数命令：\n```shell\ndmidecode |grep -A16 \"Memory Device$\"\n```\n","source":"_posts/云主机/CentOS清理内存、内存回收释放及内存使用查看的相关命令.md","raw":"---\ntitle: CentOS清理内存、内存回收释放及内存使用查看的相关命令\ndate: 2017-03-10 17:43:24\ncategories: 云主机\ntags:\n - CentOS\n - Linux\n---\n在清理前内存使用情况\n```shell\nfree -m\n```\n<!-- more -->\n用以下命令清理内存\n```shell\necho 1 > /proc/sys/vm/drop_caches\n```\n清理后内存使用情况再用以下命令看看。\n```shell\nfree –m\n```\n多出很多内存了吧。\n\n查看内存条数命令：\n```shell\ndmidecode |grep -A16 \"Memory Device$\"\n```\n","slug":"云主机/CentOS清理内存、内存回收释放及内存使用查看的相关命令","published":1,"updated":"2017-03-12T15:17:37.327Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaf6003gr8syy4djqf31","content":"<p>在清理前内存使用情况<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">free -m</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>用以下命令清理内存<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo 1 &gt; /proc/sys/vm/drop_caches</div></pre></td></tr></table></figure></p>\n<p>清理后内存使用情况再用以下命令看看。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">free –m</div></pre></td></tr></table></figure></p>\n<p>多出很多内存了吧。</p>\n<p>查看内存条数命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dmidecode |grep -A16 &quot;Memory Device$&quot;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>在清理前内存使用情况<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">free -m</div></pre></td></tr></table></figure></p>","more":"<p>用以下命令清理内存<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo 1 &gt; /proc/sys/vm/drop_caches</div></pre></td></tr></table></figure></p>\n<p>清理后内存使用情况再用以下命令看看。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">free –m</div></pre></td></tr></table></figure></p>\n<p>多出很多内存了吧。</p>\n<p>查看内存条数命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dmidecode |grep -A16 &quot;Memory Device$&quot;</div></pre></td></tr></table></figure></p>"},{"title":"Linux配置JDK环境","date":"2017-03-09T09:44:03.000Z","_content":"## 解压配置安装\n``` shell\ntar zxvf jdk-7u79-linux-x64.gz  jdk1.7.0_79\nmv /alidata/backup/jdk1.7.0_79  /alidata/jdk/java7\n```\n<!-- more -->\n## 添加jdk7.0到系统环境变量\n``` shell\ncp /etc/profile /etc/profile.bak #备份\nvi /etc/profile #编辑,在最后添加下面的内容\n```\n``` shell\nexport JAVA_HOME=/alidata/jdk/java7\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\nexport PATH=$PATH:${JAVA_HOME}/bin\n```\n## 使配置文件生效\n``` shell\nsource /etc/profile 　　　#使配置文件立即生效\n```","source":"_posts/云主机/Linux配置JDK环境.md","raw":"---\ntitle: Linux配置JDK环境\ndate: 2017-03-09 17:44:03\ncategories: 云主机\ntags:\n - jdk\n - Linux\n---\n## 解压配置安装\n``` shell\ntar zxvf jdk-7u79-linux-x64.gz  jdk1.7.0_79\nmv /alidata/backup/jdk1.7.0_79  /alidata/jdk/java7\n```\n<!-- more -->\n## 添加jdk7.0到系统环境变量\n``` shell\ncp /etc/profile /etc/profile.bak #备份\nvi /etc/profile #编辑,在最后添加下面的内容\n```\n``` shell\nexport JAVA_HOME=/alidata/jdk/java7\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\nexport PATH=$PATH:${JAVA_HOME}/bin\n```\n## 使配置文件生效\n``` shell\nsource /etc/profile 　　　#使配置文件立即生效\n```","slug":"云主机/Linux配置JDK环境","published":1,"updated":"2017-03-12T15:22:35.187Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taaf9003lr8sygreug464","content":"<h2 id=\"解压配置安装\"><a href=\"#解压配置安装\" class=\"headerlink\" title=\"解压配置安装\"></a>解压配置安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar zxvf jdk-7u79-linux-x64.gz  jdk1.7.0_79</div><div class=\"line\">mv /alidata/backup/jdk1.7.0_79  /alidata/jdk/java7</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"添加jdk7-0到系统环境变量\"><a href=\"#添加jdk7-0到系统环境变量\" class=\"headerlink\" title=\"添加jdk7.0到系统环境变量\"></a>添加jdk7.0到系统环境变量</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc/profile /etc/profile.bak #备份</div><div class=\"line\">vi /etc/profile #编辑,在最后添加下面的内容</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">export JAVA_HOME=/alidata/jdk/java7</div><div class=\"line\">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</div><div class=\"line\">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</div><div class=\"line\">export PATH=$PATH:$&#123;JAVA_HOME&#125;/bin</div></pre></td></tr></table></figure>\n<h2 id=\"使配置文件生效\"><a href=\"#使配置文件生效\" class=\"headerlink\" title=\"使配置文件生效\"></a>使配置文件生效</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source /etc/profile 　　　#使配置文件立即生效</div></pre></td></tr></table></figure>","excerpt":"<h2 id=\"解压配置安装\"><a href=\"#解压配置安装\" class=\"headerlink\" title=\"解压配置安装\"></a>解压配置安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar zxvf jdk-7u79-linux-x64.gz  jdk1.7.0_79</div><div class=\"line\">mv /alidata/backup/jdk1.7.0_79  /alidata/jdk/java7</div></pre></td></tr></table></figure>","more":"<h2 id=\"添加jdk7-0到系统环境变量\"><a href=\"#添加jdk7-0到系统环境变量\" class=\"headerlink\" title=\"添加jdk7.0到系统环境变量\"></a>添加jdk7.0到系统环境变量</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc/profile /etc/profile.bak #备份</div><div class=\"line\">vi /etc/profile #编辑,在最后添加下面的内容</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">export JAVA_HOME=/alidata/jdk/java7</div><div class=\"line\">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</div><div class=\"line\">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</div><div class=\"line\">export PATH=$PATH:$&#123;JAVA_HOME&#125;/bin</div></pre></td></tr></table></figure>\n<h2 id=\"使配置文件生效\"><a href=\"#使配置文件生效\" class=\"headerlink\" title=\"使配置文件生效\"></a>使配置文件生效</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source /etc/profile 　　　#使配置文件立即生效</div></pre></td></tr></table></figure>"},{"title":"git冲突解决","date":"2017-03-11T02:54:21.000Z","_content":"背景：用git pull 时，发现报如下错误\n```` shell\nPlease, commit your changes or stash them before you can merge.\n````\n<!-- more -->\n## stash\n通常遇到这个问题，你可以直接commit你的修改；但我这次不想这样。\n看看git stash是如何做的。\n``` shell\ngit stash\ngit pull\ngit stash pop\n```\n接下来diff一下此文件看看自动合并的情况，并作出相应修改。\ngit stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。\ngit stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。\ngit stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。\ngit stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。\n\n## 放弃本地修改，直接覆盖之\n``` shell\ngit reset --hardgit pull\n```","source":"_posts/云主机/git冲突解决.md","raw":"---\ntitle: git冲突解决\ndate: 2017-03-11 10:54:21\ncategories: 云主机\ntags:\n - git\n - Linux\n---\n背景：用git pull 时，发现报如下错误\n```` shell\nPlease, commit your changes or stash them before you can merge.\n````\n<!-- more -->\n## stash\n通常遇到这个问题，你可以直接commit你的修改；但我这次不想这样。\n看看git stash是如何做的。\n``` shell\ngit stash\ngit pull\ngit stash pop\n```\n接下来diff一下此文件看看自动合并的情况，并作出相应修改。\ngit stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。\ngit stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。\ngit stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。\ngit stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。\n\n## 放弃本地修改，直接覆盖之\n``` shell\ngit reset --hardgit pull\n```","slug":"云主机/git冲突解决","published":1,"updated":"2017-03-12T15:17:47.455Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taafc003nr8sy9kqlo1zg","content":"<p>背景：用git pull 时，发现报如下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Please, commit your changes or stash them before you can merge.</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h2 id=\"stash\"><a href=\"#stash\" class=\"headerlink\" title=\"stash\"></a>stash</h2><p>通常遇到这个问题，你可以直接commit你的修改；但我这次不想这样。<br>看看git stash是如何做的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git stash</div><div class=\"line\">git pull</div><div class=\"line\">git stash pop</div></pre></td></tr></table></figure></p>\n<p>接下来diff一下此文件看看自动合并的情况，并作出相应修改。<br>git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。<br>git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。<br>git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。<br>git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。</p>\n<h2 id=\"放弃本地修改，直接覆盖之\"><a href=\"#放弃本地修改，直接覆盖之\" class=\"headerlink\" title=\"放弃本地修改，直接覆盖之\"></a>放弃本地修改，直接覆盖之</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset --hardgit pull</div></pre></td></tr></table></figure>","excerpt":"<p>背景：用git pull 时，发现报如下错误<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Please, commit your changes or stash them before you can merge.</div></pre></td></tr></table></figure></p>","more":"<h2 id=\"stash\"><a href=\"#stash\" class=\"headerlink\" title=\"stash\"></a>stash</h2><p>通常遇到这个问题，你可以直接commit你的修改；但我这次不想这样。<br>看看git stash是如何做的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git stash</div><div class=\"line\">git pull</div><div class=\"line\">git stash pop</div></pre></td></tr></table></figure></p>\n<p>接下来diff一下此文件看看自动合并的情况，并作出相应修改。<br>git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。<br>git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。<br>git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。<br>git stash clear: 清空Git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。</p>\n<h2 id=\"放弃本地修改，直接覆盖之\"><a href=\"#放弃本地修改，直接覆盖之\" class=\"headerlink\" title=\"放弃本地修改，直接覆盖之\"></a>放弃本地修改，直接覆盖之</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset --hardgit pull</div></pre></td></tr></table></figure>"},{"title":"git配置","date":"2017-03-10T08:50:18.000Z","_content":"当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：提交代码的log里面会显示提交者的信息\n <!-- more -->\n ``` shell\n git config --global user.name [username]\n git config --global user.email [email]\n ```\n重申一遍，你只需要做一次这个设置。如果你传递了 --global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要--global选项。\neg.\n``` shell\njjs@jjs-thinkpad-w520:~/.ssh$ git config --global user.name 857012499@qq.com\njjs@jjs-thinkpad-w520:~/.ssh$ git config --global user.email 857012499@qq.com\njjs@jjs-thinkpad-w520:~/.ssh$ git config --list\nuser.name=857012499@qq.com\nuser.email=857012499@qq.com\n```\n\n","source":"_posts/云主机/git配置.md","raw":"---\ntitle: git配置\ndate: 2017-03-10 16:50:18\ncategories: 云主机\ntags:\n - git\n - Linux\n---\n当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：提交代码的log里面会显示提交者的信息\n <!-- more -->\n ``` shell\n git config --global user.name [username]\n git config --global user.email [email]\n ```\n重申一遍，你只需要做一次这个设置。如果你传递了 --global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要--global选项。\neg.\n``` shell\njjs@jjs-thinkpad-w520:~/.ssh$ git config --global user.name 857012499@qq.com\njjs@jjs-thinkpad-w520:~/.ssh$ git config --global user.email 857012499@qq.com\njjs@jjs-thinkpad-w520:~/.ssh$ git config --list\nuser.name=857012499@qq.com\nuser.email=857012499@qq.com\n```\n\n","slug":"云主机/git配置","published":1,"updated":"2017-03-12T15:17:55.136Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taafg003rr8syies7o5r6","content":"<p>当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：提交代码的log里面会显示提交者的信息<br> <a id=\"more\"></a><br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user.name [username]</div><div class=\"line\">git config --global user.email [email]</div></pre></td></tr></table></figure></p>\n<p>重申一遍，你只需要做一次这个设置。如果你传递了 –global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要–global选项。<br>eg.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">jjs@jjs-thinkpad-w520:~/.ssh$ git config --global user.name 857012499@qq.com</div><div class=\"line\">jjs@jjs-thinkpad-w520:~/.ssh$ git config --global user.email 857012499@qq.com</div><div class=\"line\">jjs@jjs-thinkpad-w520:~/.ssh$ git config --list</div><div class=\"line\">user.name=857012499@qq.com</div><div class=\"line\">user.email=857012499@qq.com</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：提交代码的log里面会显示提交者的信息<br></p>","more":"<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user.name [username]</div><div class=\"line\">git config --global user.email [email]</div></pre></td></tr></table></figure><p></p>\n<p>重申一遍，你只需要做一次这个设置。如果你传递了 –global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要–global选项。<br>eg.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">jjs@jjs-thinkpad-w520:~/.ssh$ git config --global user.name 857012499@qq.com</div><div class=\"line\">jjs@jjs-thinkpad-w520:~/.ssh$ git config --global user.email 857012499@qq.com</div><div class=\"line\">jjs@jjs-thinkpad-w520:~/.ssh$ git config --list</div><div class=\"line\">user.name=857012499@qq.com</div><div class=\"line\">user.email=857012499@qq.com</div></pre></td></tr></table></figure></p>"},{"title":"linux上多线程下载","date":"2017-03-10T08:55:48.000Z","_content":"常规就用weget下载\n<!-- more -->\n## axel\n### 安装\n``` shell\nsudo apt install axel\n```\n### 用法\n``` shell\njjs@jjs-thinkpad-w520:/media/jjs/MY/android$ axel\n用法: axel [选项] 地址1 [地址2] [地址...]\n--max-speed=x\t\t-s x\t指定最大速率（字节 / 秒）\n--num-connections=x\t-n x\t指定最大连接数\n--output=f\t\t-o f\t指定本地输出文件\n--search[=x]\t\t-S [x]\t搜索镜像并从 X 服务器下载\n--no-proxy\t\t-N\t不使用任何代理服务器\n--quiet\t\t\t-q\t使用输出简单信息模式\n--verbose\t\t-v\t更多状态信息\n--alternate\t\t-a\t文本式进度指示器\n--help\t\t\t-h\t帮助信息\n--version\t\t-V\t版本信息\n```\n\n\n","source":"_posts/云主机/linux上多线程下载.md","raw":"---\ntitle: linux上多线程下载\ndate: 2017-03-10 16:55:48\ncategories: 云主机\ntags:\n - 下载\n - Linux\n---\n常规就用weget下载\n<!-- more -->\n## axel\n### 安装\n``` shell\nsudo apt install axel\n```\n### 用法\n``` shell\njjs@jjs-thinkpad-w520:/media/jjs/MY/android$ axel\n用法: axel [选项] 地址1 [地址2] [地址...]\n--max-speed=x\t\t-s x\t指定最大速率（字节 / 秒）\n--num-connections=x\t-n x\t指定最大连接数\n--output=f\t\t-o f\t指定本地输出文件\n--search[=x]\t\t-S [x]\t搜索镜像并从 X 服务器下载\n--no-proxy\t\t-N\t不使用任何代理服务器\n--quiet\t\t\t-q\t使用输出简单信息模式\n--verbose\t\t-v\t更多状态信息\n--alternate\t\t-a\t文本式进度指示器\n--help\t\t\t-h\t帮助信息\n--version\t\t-V\t版本信息\n```\n\n\n","slug":"云主机/linux上多线程下载","published":1,"updated":"2017-03-12T15:22:25.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taafi003sr8symqmdkwmh","content":"<p>常规就用weget下载<br><a id=\"more\"></a></p>\n<h2 id=\"axel\"><a href=\"#axel\" class=\"headerlink\" title=\"axel\"></a>axel</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt install axel</div></pre></td></tr></table></figure>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">jjs@jjs-thinkpad-w520:/media/jjs/MY/android$ axel</div><div class=\"line\">用法: axel [选项] 地址1 [地址2] [地址...]</div><div class=\"line\">--max-speed=x\t\t-s x\t指定最大速率（字节 / 秒）</div><div class=\"line\">--num-connections=x\t-n x\t指定最大连接数</div><div class=\"line\">--output=f\t\t-o f\t指定本地输出文件</div><div class=\"line\">--search[=x]\t\t-S [x]\t搜索镜像并从 X 服务器下载</div><div class=\"line\">--no-proxy\t\t-N\t不使用任何代理服务器</div><div class=\"line\">--quiet\t\t\t-q\t使用输出简单信息模式</div><div class=\"line\">--verbose\t\t-v\t更多状态信息</div><div class=\"line\">--alternate\t\t-a\t文本式进度指示器</div><div class=\"line\">--help\t\t\t-h\t帮助信息</div><div class=\"line\">--version\t\t-V\t版本信息</div></pre></td></tr></table></figure>\n","excerpt":"<p>常规就用weget下载<br></p>","more":"<p></p>\n<h2 id=\"axel\"><a href=\"#axel\" class=\"headerlink\" title=\"axel\"></a>axel</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt install axel</div></pre></td></tr></table></figure>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">jjs@jjs-thinkpad-w520:/media/jjs/MY/android$ axel</div><div class=\"line\">用法: axel [选项] 地址1 [地址2] [地址...]</div><div class=\"line\">--max-speed=x\t\t-s x\t指定最大速率（字节 / 秒）</div><div class=\"line\">--num-connections=x\t-n x\t指定最大连接数</div><div class=\"line\">--output=f\t\t-o f\t指定本地输出文件</div><div class=\"line\">--search[=x]\t\t-S [x]\t搜索镜像并从 X 服务器下载</div><div class=\"line\">--no-proxy\t\t-N\t不使用任何代理服务器</div><div class=\"line\">--quiet\t\t\t-q\t使用输出简单信息模式</div><div class=\"line\">--verbose\t\t-v\t更多状态信息</div><div class=\"line\">--alternate\t\t-a\t文本式进度指示器</div><div class=\"line\">--help\t\t\t-h\t帮助信息</div><div class=\"line\">--version\t\t-V\t版本信息</div></pre></td></tr></table></figure>"},{"title":"maven安装","date":"2017-03-10T05:45:56.000Z","_content":"## 下载maven\n[http://maven.apache.org/download.cgi](http://maven.apache.org/download.cgi)\n<!-- more -->\n## 解压\n``` shell\ntar -xzvf apache-maven-3.0.5-bin.tar.gz\n```\n## 配置环境变量\n``` shell\nsudo vim /etc/profile\n```\n## 添加\n``` shell\n#maven环境\nexport M2_HOME=/usr/java/maven/apache-maven-3.3.3\nexport M2=$M2_HOME/bin\nexport PATH=$PATH:$M2\n#maven环境\n```\n## 保存后，生效\n``` shell\nsource /etc/profile\n```","source":"_posts/云主机/maven安装.md","raw":"---\ntitle: maven安装\ndate: 2017-03-10 13:45:56\ncategories: 云主机\ntags: [Linux,maven]\n---\n## 下载maven\n[http://maven.apache.org/download.cgi](http://maven.apache.org/download.cgi)\n<!-- more -->\n## 解压\n``` shell\ntar -xzvf apache-maven-3.0.5-bin.tar.gz\n```\n## 配置环境变量\n``` shell\nsudo vim /etc/profile\n```\n## 添加\n``` shell\n#maven环境\nexport M2_HOME=/usr/java/maven/apache-maven-3.3.3\nexport M2=$M2_HOME/bin\nexport PATH=$PATH:$M2\n#maven环境\n```\n## 保存后，生效\n``` shell\nsource /etc/profile\n```","slug":"云主机/maven安装","published":1,"updated":"2017-03-12T15:22:47.929Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taafm003wr8sy37k15t1i","content":"<h2 id=\"下载maven\"><a href=\"#下载maven\" class=\"headerlink\" title=\"下载maven\"></a>下载maven</h2><p><a href=\"http://maven.apache.org/download.cgi\" target=\"_blank\" rel=\"external\">http://maven.apache.org/download.cgi</a><br><a id=\"more\"></a></p>\n<h2 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar -xzvf apache-maven-3.0.5-bin.tar.gz</div></pre></td></tr></table></figure>\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vim /etc/profile</div></pre></td></tr></table></figure>\n<h2 id=\"添加\"><a href=\"#添加\" class=\"headerlink\" title=\"添加\"></a>添加</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#maven环境</div><div class=\"line\">export M2_HOME=/usr/java/maven/apache-maven-3.3.3</div><div class=\"line\">export M2=$M2_HOME/bin</div><div class=\"line\">export PATH=$PATH:$M2</div><div class=\"line\">#maven环境</div></pre></td></tr></table></figure>\n<h2 id=\"保存后，生效\"><a href=\"#保存后，生效\" class=\"headerlink\" title=\"保存后，生效\"></a>保存后，生效</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source /etc/profile</div></pre></td></tr></table></figure>","excerpt":"<h2 id=\"下载maven\"><a href=\"#下载maven\" class=\"headerlink\" title=\"下载maven\"></a>下载maven</h2><p><a href=\"http://maven.apache.org/download.cgi\">http://maven.apache.org/download.cgi</a><br></p>","more":"<p></p>\n<h2 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar -xzvf apache-maven-3.0.5-bin.tar.gz</div></pre></td></tr></table></figure>\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vim /etc/profile</div></pre></td></tr></table></figure>\n<h2 id=\"添加\"><a href=\"#添加\" class=\"headerlink\" title=\"添加\"></a>添加</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#maven环境</div><div class=\"line\">export M2_HOME=/usr/java/maven/apache-maven-3.3.3</div><div class=\"line\">export M2=$M2_HOME/bin</div><div class=\"line\">export PATH=$PATH:$M2</div><div class=\"line\">#maven环境</div></pre></td></tr></table></figure>\n<h2 id=\"保存后，生效\"><a href=\"#保存后，生效\" class=\"headerlink\" title=\"保存后，生效\"></a>保存后，生效</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source /etc/profile</div></pre></td></tr></table></figure>"},{"title":"mysql安装","date":"2017-03-10T09:31:27.000Z","_content":"## 一、安装编译工具及库文件\n``` shell\nyum -y install gcc gcc-c++ make autoconf libtool-ltdl-devel gd-devel freetype-devel libxml2-devel libjpeg-devel libpng-devel openssl-devel curl-devel bison patch unzip libmcrypt-devel libmhash-devel ncurses-devel sudo bzip2 flex libaio-devel\n```\n<!-- more -->\n## 二、 安装cmake 编译器\ncmake 版本：cmake-3.1.1。\n1、下载地址：http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz\n``` shell\nwget http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz\ntar zxvf cmake-3.1.1.tar.gz\ncd cmake-3.1.1\n./bootstrap\nmake && make install\n```\n## 三、安装 MySQL\nMySQL版本：mysql-5.6.15。（注意：这里下载的应该是源码）\n1、下载地址： http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz\n``` shell\nwget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz\ntar zxvf mysql-5.6.15.tar.gz\ncd mysql-5.6.35\ncmake -DCMAKE_INSTALL_PREFIX=/usr/server/mysql/ -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=all -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DWITH_INNODB_MEMCACHED=1 -DWITH_DEBUG=OFF -DWITH_ZLIB=bundled -DENABLED_LOCAL_INFILE=1 -DENABLED_PROFILING=ON -DMYSQL_MAINTAINER_MODE=OFF -DMYSQL_DATADIR=/usr/server/mysql/data -DMYSQL_TCP_PORT=3306\nmake && make install\n```\n2、查看版本\n``` shell\n/usr/server/mysql/bin/mysql --version\n```\n到此，mysql安装完成。\n\n","source":"_posts/云主机/mysql安装.md","raw":"---\ntitle: mysql安装\ndate: 2017-03-10 17:31:27\ncategories: 云主机\ntags:\n - mysql\n - Linux\n---\n## 一、安装编译工具及库文件\n``` shell\nyum -y install gcc gcc-c++ make autoconf libtool-ltdl-devel gd-devel freetype-devel libxml2-devel libjpeg-devel libpng-devel openssl-devel curl-devel bison patch unzip libmcrypt-devel libmhash-devel ncurses-devel sudo bzip2 flex libaio-devel\n```\n<!-- more -->\n## 二、 安装cmake 编译器\ncmake 版本：cmake-3.1.1。\n1、下载地址：http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz\n``` shell\nwget http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz\ntar zxvf cmake-3.1.1.tar.gz\ncd cmake-3.1.1\n./bootstrap\nmake && make install\n```\n## 三、安装 MySQL\nMySQL版本：mysql-5.6.15。（注意：这里下载的应该是源码）\n1、下载地址： http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz\n``` shell\nwget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz\ntar zxvf mysql-5.6.15.tar.gz\ncd mysql-5.6.35\ncmake -DCMAKE_INSTALL_PREFIX=/usr/server/mysql/ -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=all -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DWITH_INNODB_MEMCACHED=1 -DWITH_DEBUG=OFF -DWITH_ZLIB=bundled -DENABLED_LOCAL_INFILE=1 -DENABLED_PROFILING=ON -DMYSQL_MAINTAINER_MODE=OFF -DMYSQL_DATADIR=/usr/server/mysql/data -DMYSQL_TCP_PORT=3306\nmake && make install\n```\n2、查看版本\n``` shell\n/usr/server/mysql/bin/mysql --version\n```\n到此，mysql安装完成。\n\n","slug":"云主机/mysql安装","published":1,"updated":"2017-03-13T02:55:11.690Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taafn003yr8sy4blprzm3","content":"<h2 id=\"一、安装编译工具及库文件\"><a href=\"#一、安装编译工具及库文件\" class=\"headerlink\" title=\"一、安装编译工具及库文件\"></a>一、安装编译工具及库文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install gcc gcc-c++ make autoconf libtool-ltdl-devel gd-devel freetype-devel libxml2-devel libjpeg-devel libpng-devel openssl-devel curl-devel bison patch unzip libmcrypt-devel libmhash-devel ncurses-devel sudo bzip2 flex libaio-devel</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"二、-安装cmake-编译器\"><a href=\"#二、-安装cmake-编译器\" class=\"headerlink\" title=\"二、 安装cmake 编译器\"></a>二、 安装cmake 编译器</h2><p>cmake 版本：cmake-3.1.1。<br>1、下载地址：<a href=\"http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz\" target=\"_blank\" rel=\"external\">http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz</div><div class=\"line\">tar zxvf cmake-3.1.1.tar.gz</div><div class=\"line\">cd cmake-3.1.1</div><div class=\"line\">./bootstrap</div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>\n<h2 id=\"三、安装-MySQL\"><a href=\"#三、安装-MySQL\" class=\"headerlink\" title=\"三、安装 MySQL\"></a>三、安装 MySQL</h2><p>MySQL版本：mysql-5.6.15。（注意：这里下载的应该是源码）<br>1、下载地址： <a href=\"http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz\" target=\"_blank\" rel=\"external\">http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz</div><div class=\"line\">tar zxvf mysql-5.6.15.tar.gz</div><div class=\"line\">cd mysql-5.6.35</div><div class=\"line\">cmake -DCMAKE_INSTALL_PREFIX=/usr/server/mysql/ -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=all -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DWITH_INNODB_MEMCACHED=1 -DWITH_DEBUG=OFF -DWITH_ZLIB=bundled -DENABLED_LOCAL_INFILE=1 -DENABLED_PROFILING=ON -DMYSQL_MAINTAINER_MODE=OFF -DMYSQL_DATADIR=/usr/server/mysql/data -DMYSQL_TCP_PORT=3306</div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>\n<p>2、查看版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/mysql/bin/mysql --version</div></pre></td></tr></table></figure></p>\n<p>到此，mysql安装完成。</p>\n","excerpt":"<h2 id=\"一、安装编译工具及库文件\"><a href=\"#一、安装编译工具及库文件\" class=\"headerlink\" title=\"一、安装编译工具及库文件\"></a>一、安装编译工具及库文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install gcc gcc-c++ make autoconf libtool-ltdl-devel gd-devel freetype-devel libxml2-devel libjpeg-devel libpng-devel openssl-devel curl-devel bison patch unzip libmcrypt-devel libmhash-devel ncurses-devel sudo bzip2 flex libaio-devel</div></pre></td></tr></table></figure>","more":"<h2 id=\"二、-安装cmake-编译器\"><a href=\"#二、-安装cmake-编译器\" class=\"headerlink\" title=\"二、 安装cmake 编译器\"></a>二、 安装cmake 编译器</h2><p>cmake 版本：cmake-3.1.1。<br>1、下载地址：<a href=\"http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz\">http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://www.cmake.org/files/v3.1/cmake-3.1.1.tar.gz</div><div class=\"line\">tar zxvf cmake-3.1.1.tar.gz</div><div class=\"line\">cd cmake-3.1.1</div><div class=\"line\">./bootstrap</div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>\n<h2 id=\"三、安装-MySQL\"><a href=\"#三、安装-MySQL\" class=\"headerlink\" title=\"三、安装 MySQL\"></a>三、安装 MySQL</h2><p>MySQL版本：mysql-5.6.15。（注意：这里下载的应该是源码）<br>1、下载地址： <a href=\"http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz\">http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.35.tar.gz</div><div class=\"line\">tar zxvf mysql-5.6.15.tar.gz</div><div class=\"line\">cd mysql-5.6.35</div><div class=\"line\">cmake -DCMAKE_INSTALL_PREFIX=/usr/server/mysql/ -DMYSQL_UNIX_ADDR=/tmp/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=all -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DWITH_INNODB_MEMCACHED=1 -DWITH_DEBUG=OFF -DWITH_ZLIB=bundled -DENABLED_LOCAL_INFILE=1 -DENABLED_PROFILING=ON -DMYSQL_MAINTAINER_MODE=OFF -DMYSQL_DATADIR=/usr/server/mysql/data -DMYSQL_TCP_PORT=3306</div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>\n<p>2、查看版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/mysql/bin/mysql --version</div></pre></td></tr></table></figure></p>\n<p>到此，mysql安装完成。</p>"},{"title":"mysql安装后修改root密码","date":"2017-03-10T09:38:46.000Z","_content":"提示：ERROR 1044 (42000): Access denied for user ''@'localhost' to database 'MySQL'。安装mysql后就，开始不知道密码是空，自己捣鼓了半天也没弄好。后来根据网上的资料，修改root的密码后，还是不行，大多数的操作方法如下：\n<!-- more -->\n关闭mysql\n```shell\nservice mysqld stop\n```\n屏蔽权限\n```shell\nmysqld_safe --skip-grant-table &\n```\n屏幕出现： Starting demo from .....\n新开起一个终端输入\n```shell\nmysql -u root mysql\nmysql> UPDATE user SET Password=PASSWORD('newpassword') where USER='root';\nmysql> FLUSH PRIVILEGES;\nmysql> \\q\n```\n来源：[http://blog.csdn.net/laiwenqiang/article/details/12833937](http://blog.csdn.net/laiwenqiang/article/details/12833937)","source":"_posts/云主机/mysql安装后修改root密码.md","raw":"---\ntitle: mysql安装后修改root密码\ndate: 2017-03-10 17:38:46\ncategories: 云主机\ntags:\n - mysql\n - Linux\n---\n提示：ERROR 1044 (42000): Access denied for user ''@'localhost' to database 'MySQL'。安装mysql后就，开始不知道密码是空，自己捣鼓了半天也没弄好。后来根据网上的资料，修改root的密码后，还是不行，大多数的操作方法如下：\n<!-- more -->\n关闭mysql\n```shell\nservice mysqld stop\n```\n屏蔽权限\n```shell\nmysqld_safe --skip-grant-table &\n```\n屏幕出现： Starting demo from .....\n新开起一个终端输入\n```shell\nmysql -u root mysql\nmysql> UPDATE user SET Password=PASSWORD('newpassword') where USER='root';\nmysql> FLUSH PRIVILEGES;\nmysql> \\q\n```\n来源：[http://blog.csdn.net/laiwenqiang/article/details/12833937](http://blog.csdn.net/laiwenqiang/article/details/12833937)","slug":"云主机/mysql安装后修改root密码","published":1,"updated":"2017-03-13T02:55:06.415Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taafq0043r8symb1e4rwp","content":"<p>提示：ERROR 1044 (42000): Access denied for user ‘’@’localhost’ to database ‘MySQL’。安装mysql后就，开始不知道密码是空，自己捣鼓了半天也没弄好。后来根据网上的资料，修改root的密码后，还是不行，大多数的操作方法如下：<br><a id=\"more\"></a><br>关闭mysql<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service mysqld stop</div></pre></td></tr></table></figure></p>\n<p>屏蔽权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqld_safe --skip-grant-table &amp;</div></pre></td></tr></table></figure></p>\n<p>屏幕出现： Starting demo from …..<br>新开起一个终端输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -u root mysql</div><div class=\"line\">mysql&gt; UPDATE user SET Password=PASSWORD(&apos;newpassword&apos;) where USER=&apos;root&apos;;</div><div class=\"line\">mysql&gt; FLUSH PRIVILEGES;</div><div class=\"line\">mysql&gt; \\q</div></pre></td></tr></table></figure></p>\n<p>来源：<a href=\"http://blog.csdn.net/laiwenqiang/article/details/12833937\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/laiwenqiang/article/details/12833937</a></p>\n","excerpt":"<p>提示：ERROR 1044 (42000): Access denied for user ‘’@’localhost’ to database ‘MySQL’。安装mysql后就，开始不知道密码是空，自己捣鼓了半天也没弄好。后来根据网上的资料，修改root的密码后，还是不行，大多数的操作方法如下：<br></p>","more":"<br>关闭mysql<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service mysqld stop</div></pre></td></tr></table></figure><p></p>\n<p>屏蔽权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysqld_safe --skip-grant-table &amp;</div></pre></td></tr></table></figure></p>\n<p>屏幕出现： Starting demo from …..<br>新开起一个终端输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -u root mysql</div><div class=\"line\">mysql&gt; UPDATE user SET Password=PASSWORD(&apos;newpassword&apos;) where USER=&apos;root&apos;;</div><div class=\"line\">mysql&gt; FLUSH PRIVILEGES;</div><div class=\"line\">mysql&gt; \\q</div></pre></td></tr></table></figure></p>\n<p>来源：<a href=\"http://blog.csdn.net/laiwenqiang/article/details/12833937\">http://blog.csdn.net/laiwenqiang/article/details/12833937</a></p>"},{"title":"mysql客户端安装","date":"2017-03-10T08:53:39.000Z","_content":"``` shell\nsudo apt-get install mysql-workbench\n```","source":"_posts/云主机/mysql客户端安装.md","raw":"---\ntitle: mysql客户端安装\ndate: 2017-03-10 16:53:39\ncategories: 云主机\ntags:\n - mysql\n - Linux\n---\n``` shell\nsudo apt-get install mysql-workbench\n```","slug":"云主机/mysql客户端安装","published":1,"updated":"2017-03-13T02:54:58.296Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taafr0045r8sy7yldc9lw","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install mysql-workbench</div></pre></td></tr></table></figure>","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install mysql-workbench</div></pre></td></tr></table></figure>"},{"title":"mysql表名不区分大小写","date":"2017-03-13T03:00:58.000Z","categorise":"mysql","_content":"Linux下的MySQL默认是区分表名大小写的，通过如下设置，可以让MySQL不区分表名大小写：\n<!-- more -->\n1、用root登录，修改 /etc/my.cnf；\n2、在[mysqld]节点下，加入一行： lower_case_table_names=1\n3、重启MySQL即可；\n``` shell\n#service mysqld stop  #服务启动方式\n# /etc/init.d/mysqld start #读取配置启动方式\n```\n其中 lower_case_table_names=1 参数缺省地在 Windows 中这个选项为 1 ，在 Unix 中为 0，因此在window中不会遇到的问题，一旦一直到linux就会出问题的原因（尤其在mysql对表起名时是无法用大写字母的，而查询用了大写字母却会出查不到的错误，真是弄的莫名其妙）\n\n","source":"_posts/云主机/mysql表名不区分大小写.md","raw":"---\ntitle: mysql表名不区分大小写\ndate: 2017-03-13 11:00:58\ncategorise: mysql\ntags: [mysql,区分大小写]\n---\nLinux下的MySQL默认是区分表名大小写的，通过如下设置，可以让MySQL不区分表名大小写：\n<!-- more -->\n1、用root登录，修改 /etc/my.cnf；\n2、在[mysqld]节点下，加入一行： lower_case_table_names=1\n3、重启MySQL即可；\n``` shell\n#service mysqld stop  #服务启动方式\n# /etc/init.d/mysqld start #读取配置启动方式\n```\n其中 lower_case_table_names=1 参数缺省地在 Windows 中这个选项为 1 ，在 Unix 中为 0，因此在window中不会遇到的问题，一旦一直到linux就会出问题的原因（尤其在mysql对表起名时是无法用大写字母的，而查询用了大写字母却会出查不到的错误，真是弄的莫名其妙）\n\n","slug":"云主机/mysql表名不区分大小写","published":1,"updated":"2017-03-13T03:03:00.900Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taafv0049r8sykqrupq0v","content":"<p>Linux下的MySQL默认是区分表名大小写的，通过如下设置，可以让MySQL不区分表名大小写：<br><a id=\"more\"></a><br>1、用root登录，修改 /etc/my.cnf；<br>2、在[mysqld]节点下，加入一行： lower_case_table_names=1<br>3、重启MySQL即可；<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#service mysqld stop  #服务启动方式</div><div class=\"line\"># /etc/init.d/mysqld start #读取配置启动方式</div></pre></td></tr></table></figure></p>\n<p>其中 lower_case_table_names=1 参数缺省地在 Windows 中这个选项为 1 ，在 Unix 中为 0，因此在window中不会遇到的问题，一旦一直到linux就会出问题的原因（尤其在mysql对表起名时是无法用大写字母的，而查询用了大写字母却会出查不到的错误，真是弄的莫名其妙）</p>\n","excerpt":"<p>Linux下的MySQL默认是区分表名大小写的，通过如下设置，可以让MySQL不区分表名大小写：<br></p>","more":"<br>1、用root登录，修改 /etc/my.cnf；<br>2、在[mysqld]节点下，加入一行： lower_case_table_names=1<br>3、重启MySQL即可；<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#service mysqld stop  #服务启动方式</div><div class=\"line\"># /etc/init.d/mysqld start #读取配置启动方式</div></pre></td></tr></table></figure><p></p>\n<p>其中 lower_case_table_names=1 参数缺省地在 Windows 中这个选项为 1 ，在 Unix 中为 0，因此在window中不会遇到的问题，一旦一直到linux就会出问题的原因（尤其在mysql对表起名时是无法用大写字母的，而查询用了大写字母却会出查不到的错误，真是弄的莫名其妙）</p>"},{"title":"mysql远程连接","date":"2017-03-13T03:03:22.000Z","_content":"## 在云主机上连接进入mysql\n<!-- more -->\n##　执行以下mysql命令：\n``` shell\nuse mysql                #打开mysql数据库\n#将host设置为%表示任何ip都能连接mysql，当然您也可以将host指定为某个ip\nupdate user set host='%' where user='root' and host='localhost';\nflush privileges;        #刷新权限表，使配置生效\n```\n然后我们就能远程连接我们的mysql\n\n## 如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：\n``` shell\nuse mysql                #打开mysql数据库\n#将host设置为localhost表示只能本地连接mysql\nupdate user set host='localhost' where user='root';\nflush privileges;        #刷新权限表，使配置生效\n```\n备注：您也可以添加一个用户名为yuancheng，密码为123456，权限为%（表示任意ip都能连接）的远程连接用户。命令参考如下：\n``` shell\ngrant all on *.* to 'yuancheng'@'%' identified by '123456';\nflush privileges;\n```\n","source":"_posts/云主机/mysql远程连接.md","raw":"---\ntitle: mysql远程连接\ndate: 2017-03-13 11:03:22\ncategories: mysql\ntags: [mysql]\n---\n## 在云主机上连接进入mysql\n<!-- more -->\n##　执行以下mysql命令：\n``` shell\nuse mysql                #打开mysql数据库\n#将host设置为%表示任何ip都能连接mysql，当然您也可以将host指定为某个ip\nupdate user set host='%' where user='root' and host='localhost';\nflush privileges;        #刷新权限表，使配置生效\n```\n然后我们就能远程连接我们的mysql\n\n## 如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：\n``` shell\nuse mysql                #打开mysql数据库\n#将host设置为localhost表示只能本地连接mysql\nupdate user set host='localhost' where user='root';\nflush privileges;        #刷新权限表，使配置生效\n```\n备注：您也可以添加一个用户名为yuancheng，密码为123456，权限为%（表示任意ip都能连接）的远程连接用户。命令参考如下：\n``` shell\ngrant all on *.* to 'yuancheng'@'%' identified by '123456';\nflush privileges;\n```\n","slug":"云主机/mysql远程连接","published":1,"updated":"2017-03-13T03:06:01.504Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taafx004br8syspid9mvh","content":"<h2 id=\"在云主机上连接进入mysql\"><a href=\"#在云主机上连接进入mysql\" class=\"headerlink\" title=\"在云主机上连接进入mysql\"></a>在云主机上连接进入mysql</h2><a id=\"more\"></a>\n<p>##　执行以下mysql命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">use mysql                #打开mysql数据库</div><div class=\"line\">#将host设置为%表示任何ip都能连接mysql，当然您也可以将host指定为某个ip</div><div class=\"line\">update user set host=&apos;%&apos; where user=&apos;root&apos; and host=&apos;localhost&apos;;</div><div class=\"line\">flush privileges;        #刷新权限表，使配置生效</div></pre></td></tr></table></figure></p>\n<p>然后我们就能远程连接我们的mysql</p>\n<h2 id=\"如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：\"><a href=\"#如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：\" class=\"headerlink\" title=\"如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：\"></a>如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">use mysql                #打开mysql数据库</div><div class=\"line\">#将host设置为localhost表示只能本地连接mysql</div><div class=\"line\">update user set host=&apos;localhost&apos; where user=&apos;root&apos;;</div><div class=\"line\">flush privileges;        #刷新权限表，使配置生效</div></pre></td></tr></table></figure>\n<p>备注：您也可以添加一个用户名为yuancheng，密码为123456，权限为%（表示任意ip都能连接）的远程连接用户。命令参考如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grant all on *.* to &apos;yuancheng&apos;@&apos;%&apos; identified by &apos;123456&apos;;</div><div class=\"line\">flush privileges;</div></pre></td></tr></table></figure></p>\n","excerpt":"<h2 id=\"在云主机上连接进入mysql\"><a href=\"#在云主机上连接进入mysql\" class=\"headerlink\" title=\"在云主机上连接进入mysql\"></a>在云主机上连接进入mysql</h2>","more":"<p>##　执行以下mysql命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">use mysql                #打开mysql数据库</div><div class=\"line\">#将host设置为%表示任何ip都能连接mysql，当然您也可以将host指定为某个ip</div><div class=\"line\">update user set host=&apos;%&apos; where user=&apos;root&apos; and host=&apos;localhost&apos;;</div><div class=\"line\">flush privileges;        #刷新权限表，使配置生效</div></pre></td></tr></table></figure></p>\n<p>然后我们就能远程连接我们的mysql</p>\n<h2 id=\"如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：\"><a href=\"#如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：\" class=\"headerlink\" title=\"如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：\"></a>如果您想关闭远程连接，恢复mysql的默认设置（只能本地连接），您可以通过以下步骤操作：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">use mysql                #打开mysql数据库</div><div class=\"line\">#将host设置为localhost表示只能本地连接mysql</div><div class=\"line\">update user set host=&apos;localhost&apos; where user=&apos;root&apos;;</div><div class=\"line\">flush privileges;        #刷新权限表，使配置生效</div></pre></td></tr></table></figure>\n<p>备注：您也可以添加一个用户名为yuancheng，密码为123456，权限为%（表示任意ip都能连接）的远程连接用户。命令参考如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">grant all on *.* to &apos;yuancheng&apos;@&apos;%&apos; identified by &apos;123456&apos;;</div><div class=\"line\">flush privileges;</div></pre></td></tr></table></figure></p>"},{"title":"mysql配置","date":"2017-03-10T09:33:59.000Z","_content":"## 1、创建mysql运行使用的用户mysql：\n``` shell\n/usr/sbin/groupadd mysql\n/usr/sbin/useradd -g mysql mysql\n```\n<!-- more -->\n## 2、创建binlog和库的存储路径并赋予mysql用户权限\n``` shell\nmkdir -p /usr/server/mysql/binlog /www/data_mysql\nchown mysql.mysql /usr/server/mysql/binlog/ /www/data_mysql/\n```\n## 3、创建my.cnf配置文件\n将/etc/my.cnf替换为下面内容\n``` shell\n[client]\nport = 3306\nsocket = /tmp/mysql.sock\n[mysqld]\nreplicate-ignore-db = mysql\nreplicate-ignore-db = test\nreplicate-ignore-db = information_schema\nuser = mysql\nport = 3306\nsocket = /tmp/mysql.sock\nbasedir = /usr/server/mysql\ndatadir = /www/data_mysql\nlog-error = /usr/server/mysql/mysql_error.log\npid-file = /usr/server/mysql/mysql.pid\nopen_files_limit = 65535\nback_log = 600\nmax_connections = 5000\nmax_connect_errors = 1000\ntable_open_cache = 1024\nexternal-locking = FALSE\nmax_allowed_packet = 32M\nsort_buffer_size = 1M\njoin_buffer_size = 1M\nthread_cache_size = 600\n#thread_concurrency = 8\nquery_cache_size = 128M\nquery_cache_limit = 2M\nquery_cache_min_res_unit = 2k\ndefault-storage-engine = MyISAM\ndefault-tmp-storage-engine=MYISAM\nthread_stack = 192K\ntransaction_isolation = READ-COMMITTED\ntmp_table_size = 128M\nmax_heap_table_size = 128M\nlog-slave-updates\nlog-bin = /usr/server/mysql/binlog/binlog\nbinlog-do-db=oa_fb\nbinlog-ignore-db=mysql\nbinlog_cache_size = 4M\nbinlog_format = MIXED\nmax_binlog_cache_size = 8M\nmax_binlog_size = 1G\nrelay-log-index = /usr/server/mysql/relaylog/relaylog\nrelay-log-info-file = /usr/server/mysql/relaylog/relaylog\nrelay-log = /usr/server/mysql/relaylog/relaylog\nexpire_logs_days = 10\nkey_buffer_size = 256M\nread_buffer_size = 1M\nread_rnd_buffer_size = 16M\nbulk_insert_buffer_size = 64M\nmyisam_sort_buffer_size = 128M\nmyisam_max_sort_file_size = 10G\nmyisam_repair_threads = 1\nmyisam_recover\ninteractive_timeout = 120\nwait_timeout = 120\nskip-name-resolve\n#master-connect-retry = 10\nslave-skip-errors = 1032,1062,126,1114,1146,1048,1396\n#master-host = 192.168.1.2\n#master-user = username\n#master-password = password\n#master-port = 3306\nserver-id = 1\nloose-innodb-trx=0\nloose-innodb-locks=0\nloose-innodb-lock-waits=0\nloose-innodb-cmp=0\nloose-innodb-cmp-per-index=0\nloose-innodb-cmp-per-index-reset=0\nloose-innodb-cmp-reset=0\nloose-innodb-cmpmem=0\nloose-innodb-cmpmem-reset=0\nloose-innodb-buffer-page=0\nloose-innodb-buffer-page-lru=0\nloose-innodb-buffer-pool-stats=0\nloose-innodb-metrics=0\nloose-innodb-ft-default-stopword=0\nloose-innodb-ft-inserted=0\nloose-innodb-ft-deleted=0\nloose-innodb-ft-being-deleted=0\nloose-innodb-ft-config=0\nloose-innodb-ft-index-cache=0\nloose-innodb-ft-index-table=0\nloose-innodb-sys-tables=0\nloose-innodb-sys-tablestats=0\nloose-innodb-sys-indexes=0\nloose-innodb-sys-columns=0\nloose-innodb-sys-fields=0\nloose-innodb-sys-foreign=0\nloose-innodb-sys-foreign-cols=0\nslow_query_log_file=/usr/server/mysql/mysql_slow.log\nlong_query_time = 1\n[mysqldump]\nquick\nmax_allowed_packet = 32M\n```\n## 4、初始化数据库\n``` shell\n/usr/server/mysql/scripts/mysql_install_db --defaults-file=/etc/my.cnf  --user=mysql\n```\n## 5、创建开机启动脚本\n``` shell\ncd /usr/server/mysql/\ncp support-files/mysql.server /etc/rc.d/init.d/mysqld\nchkconfig --add mysqld\nchkconfig --level 35 mysqld on\n```\n## 6、启动mysql服务器\n``` shell\nservice mysqld start\n```\n## 7、连接 MySQL\n``` shell\n/usr/server/mysql/bin/mysql -u root -p\n```\n## 其他命令\n``` shell\n启动：service mysqld start\n停止：service mysqld stop\n重启：service mysqld restart\n重载配置：service mysqld reload\n```","source":"_posts/云主机/mysql配置.md","raw":"---\ntitle: mysql配置\ndate: 2017-03-10 17:33:59\ncategories: 云主机\ntags:\n - mysql\n - Linux\n---\n## 1、创建mysql运行使用的用户mysql：\n``` shell\n/usr/sbin/groupadd mysql\n/usr/sbin/useradd -g mysql mysql\n```\n<!-- more -->\n## 2、创建binlog和库的存储路径并赋予mysql用户权限\n``` shell\nmkdir -p /usr/server/mysql/binlog /www/data_mysql\nchown mysql.mysql /usr/server/mysql/binlog/ /www/data_mysql/\n```\n## 3、创建my.cnf配置文件\n将/etc/my.cnf替换为下面内容\n``` shell\n[client]\nport = 3306\nsocket = /tmp/mysql.sock\n[mysqld]\nreplicate-ignore-db = mysql\nreplicate-ignore-db = test\nreplicate-ignore-db = information_schema\nuser = mysql\nport = 3306\nsocket = /tmp/mysql.sock\nbasedir = /usr/server/mysql\ndatadir = /www/data_mysql\nlog-error = /usr/server/mysql/mysql_error.log\npid-file = /usr/server/mysql/mysql.pid\nopen_files_limit = 65535\nback_log = 600\nmax_connections = 5000\nmax_connect_errors = 1000\ntable_open_cache = 1024\nexternal-locking = FALSE\nmax_allowed_packet = 32M\nsort_buffer_size = 1M\njoin_buffer_size = 1M\nthread_cache_size = 600\n#thread_concurrency = 8\nquery_cache_size = 128M\nquery_cache_limit = 2M\nquery_cache_min_res_unit = 2k\ndefault-storage-engine = MyISAM\ndefault-tmp-storage-engine=MYISAM\nthread_stack = 192K\ntransaction_isolation = READ-COMMITTED\ntmp_table_size = 128M\nmax_heap_table_size = 128M\nlog-slave-updates\nlog-bin = /usr/server/mysql/binlog/binlog\nbinlog-do-db=oa_fb\nbinlog-ignore-db=mysql\nbinlog_cache_size = 4M\nbinlog_format = MIXED\nmax_binlog_cache_size = 8M\nmax_binlog_size = 1G\nrelay-log-index = /usr/server/mysql/relaylog/relaylog\nrelay-log-info-file = /usr/server/mysql/relaylog/relaylog\nrelay-log = /usr/server/mysql/relaylog/relaylog\nexpire_logs_days = 10\nkey_buffer_size = 256M\nread_buffer_size = 1M\nread_rnd_buffer_size = 16M\nbulk_insert_buffer_size = 64M\nmyisam_sort_buffer_size = 128M\nmyisam_max_sort_file_size = 10G\nmyisam_repair_threads = 1\nmyisam_recover\ninteractive_timeout = 120\nwait_timeout = 120\nskip-name-resolve\n#master-connect-retry = 10\nslave-skip-errors = 1032,1062,126,1114,1146,1048,1396\n#master-host = 192.168.1.2\n#master-user = username\n#master-password = password\n#master-port = 3306\nserver-id = 1\nloose-innodb-trx=0\nloose-innodb-locks=0\nloose-innodb-lock-waits=0\nloose-innodb-cmp=0\nloose-innodb-cmp-per-index=0\nloose-innodb-cmp-per-index-reset=0\nloose-innodb-cmp-reset=0\nloose-innodb-cmpmem=0\nloose-innodb-cmpmem-reset=0\nloose-innodb-buffer-page=0\nloose-innodb-buffer-page-lru=0\nloose-innodb-buffer-pool-stats=0\nloose-innodb-metrics=0\nloose-innodb-ft-default-stopword=0\nloose-innodb-ft-inserted=0\nloose-innodb-ft-deleted=0\nloose-innodb-ft-being-deleted=0\nloose-innodb-ft-config=0\nloose-innodb-ft-index-cache=0\nloose-innodb-ft-index-table=0\nloose-innodb-sys-tables=0\nloose-innodb-sys-tablestats=0\nloose-innodb-sys-indexes=0\nloose-innodb-sys-columns=0\nloose-innodb-sys-fields=0\nloose-innodb-sys-foreign=0\nloose-innodb-sys-foreign-cols=0\nslow_query_log_file=/usr/server/mysql/mysql_slow.log\nlong_query_time = 1\n[mysqldump]\nquick\nmax_allowed_packet = 32M\n```\n## 4、初始化数据库\n``` shell\n/usr/server/mysql/scripts/mysql_install_db --defaults-file=/etc/my.cnf  --user=mysql\n```\n## 5、创建开机启动脚本\n``` shell\ncd /usr/server/mysql/\ncp support-files/mysql.server /etc/rc.d/init.d/mysqld\nchkconfig --add mysqld\nchkconfig --level 35 mysqld on\n```\n## 6、启动mysql服务器\n``` shell\nservice mysqld start\n```\n## 7、连接 MySQL\n``` shell\n/usr/server/mysql/bin/mysql -u root -p\n```\n## 其他命令\n``` shell\n启动：service mysqld start\n停止：service mysqld stop\n重启：service mysqld restart\n重载配置：service mysqld reload\n```","slug":"云主机/mysql配置","published":1,"updated":"2017-03-13T02:55:01.454Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taag0004er8syb9w82kgm","content":"<h2 id=\"1、创建mysql运行使用的用户mysql：\"><a href=\"#1、创建mysql运行使用的用户mysql：\" class=\"headerlink\" title=\"1、创建mysql运行使用的用户mysql：\"></a>1、创建mysql运行使用的用户mysql：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/sbin/groupadd mysql</div><div class=\"line\">/usr/sbin/useradd -g mysql mysql</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"2、创建binlog和库的存储路径并赋予mysql用户权限\"><a href=\"#2、创建binlog和库的存储路径并赋予mysql用户权限\" class=\"headerlink\" title=\"2、创建binlog和库的存储路径并赋予mysql用户权限\"></a>2、创建binlog和库的存储路径并赋予mysql用户权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir -p /usr/server/mysql/binlog /www/data_mysql</div><div class=\"line\">chown mysql.mysql /usr/server/mysql/binlog/ /www/data_mysql/</div></pre></td></tr></table></figure>\n<h2 id=\"3、创建my-cnf配置文件\"><a href=\"#3、创建my-cnf配置文件\" class=\"headerlink\" title=\"3、创建my.cnf配置文件\"></a>3、创建my.cnf配置文件</h2><p>将/etc/my.cnf替换为下面内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div></pre></td><td class=\"code\"><pre><div class=\"line\">[client]</div><div class=\"line\">port = 3306</div><div class=\"line\">socket = /tmp/mysql.sock</div><div class=\"line\">[mysqld]</div><div class=\"line\">replicate-ignore-db = mysql</div><div class=\"line\">replicate-ignore-db = test</div><div class=\"line\">replicate-ignore-db = information_schema</div><div class=\"line\">user = mysql</div><div class=\"line\">port = 3306</div><div class=\"line\">socket = /tmp/mysql.sock</div><div class=\"line\">basedir = /usr/server/mysql</div><div class=\"line\">datadir = /www/data_mysql</div><div class=\"line\">log-error = /usr/server/mysql/mysql_error.log</div><div class=\"line\">pid-file = /usr/server/mysql/mysql.pid</div><div class=\"line\">open_files_limit = 65535</div><div class=\"line\">back_log = 600</div><div class=\"line\">max_connections = 5000</div><div class=\"line\">max_connect_errors = 1000</div><div class=\"line\">table_open_cache = 1024</div><div class=\"line\">external-locking = FALSE</div><div class=\"line\">max_allowed_packet = 32M</div><div class=\"line\">sort_buffer_size = 1M</div><div class=\"line\">join_buffer_size = 1M</div><div class=\"line\">thread_cache_size = 600</div><div class=\"line\">#thread_concurrency = 8</div><div class=\"line\">query_cache_size = 128M</div><div class=\"line\">query_cache_limit = 2M</div><div class=\"line\">query_cache_min_res_unit = 2k</div><div class=\"line\">default-storage-engine = MyISAM</div><div class=\"line\">default-tmp-storage-engine=MYISAM</div><div class=\"line\">thread_stack = 192K</div><div class=\"line\">transaction_isolation = READ-COMMITTED</div><div class=\"line\">tmp_table_size = 128M</div><div class=\"line\">max_heap_table_size = 128M</div><div class=\"line\">log-slave-updates</div><div class=\"line\">log-bin = /usr/server/mysql/binlog/binlog</div><div class=\"line\">binlog-do-db=oa_fb</div><div class=\"line\">binlog-ignore-db=mysql</div><div class=\"line\">binlog_cache_size = 4M</div><div class=\"line\">binlog_format = MIXED</div><div class=\"line\">max_binlog_cache_size = 8M</div><div class=\"line\">max_binlog_size = 1G</div><div class=\"line\">relay-log-index = /usr/server/mysql/relaylog/relaylog</div><div class=\"line\">relay-log-info-file = /usr/server/mysql/relaylog/relaylog</div><div class=\"line\">relay-log = /usr/server/mysql/relaylog/relaylog</div><div class=\"line\">expire_logs_days = 10</div><div class=\"line\">key_buffer_size = 256M</div><div class=\"line\">read_buffer_size = 1M</div><div class=\"line\">read_rnd_buffer_size = 16M</div><div class=\"line\">bulk_insert_buffer_size = 64M</div><div class=\"line\">myisam_sort_buffer_size = 128M</div><div class=\"line\">myisam_max_sort_file_size = 10G</div><div class=\"line\">myisam_repair_threads = 1</div><div class=\"line\">myisam_recover</div><div class=\"line\">interactive_timeout = 120</div><div class=\"line\">wait_timeout = 120</div><div class=\"line\">skip-name-resolve</div><div class=\"line\">#master-connect-retry = 10</div><div class=\"line\">slave-skip-errors = 1032,1062,126,1114,1146,1048,1396</div><div class=\"line\">#master-host = 192.168.1.2</div><div class=\"line\">#master-user = username</div><div class=\"line\">#master-password = password</div><div class=\"line\">#master-port = 3306</div><div class=\"line\">server-id = 1</div><div class=\"line\">loose-innodb-trx=0</div><div class=\"line\">loose-innodb-locks=0</div><div class=\"line\">loose-innodb-lock-waits=0</div><div class=\"line\">loose-innodb-cmp=0</div><div class=\"line\">loose-innodb-cmp-per-index=0</div><div class=\"line\">loose-innodb-cmp-per-index-reset=0</div><div class=\"line\">loose-innodb-cmp-reset=0</div><div class=\"line\">loose-innodb-cmpmem=0</div><div class=\"line\">loose-innodb-cmpmem-reset=0</div><div class=\"line\">loose-innodb-buffer-page=0</div><div class=\"line\">loose-innodb-buffer-page-lru=0</div><div class=\"line\">loose-innodb-buffer-pool-stats=0</div><div class=\"line\">loose-innodb-metrics=0</div><div class=\"line\">loose-innodb-ft-default-stopword=0</div><div class=\"line\">loose-innodb-ft-inserted=0</div><div class=\"line\">loose-innodb-ft-deleted=0</div><div class=\"line\">loose-innodb-ft-being-deleted=0</div><div class=\"line\">loose-innodb-ft-config=0</div><div class=\"line\">loose-innodb-ft-index-cache=0</div><div class=\"line\">loose-innodb-ft-index-table=0</div><div class=\"line\">loose-innodb-sys-tables=0</div><div class=\"line\">loose-innodb-sys-tablestats=0</div><div class=\"line\">loose-innodb-sys-indexes=0</div><div class=\"line\">loose-innodb-sys-columns=0</div><div class=\"line\">loose-innodb-sys-fields=0</div><div class=\"line\">loose-innodb-sys-foreign=0</div><div class=\"line\">loose-innodb-sys-foreign-cols=0</div><div class=\"line\">slow_query_log_file=/usr/server/mysql/mysql_slow.log</div><div class=\"line\">long_query_time = 1</div><div class=\"line\">[mysqldump]</div><div class=\"line\">quick</div><div class=\"line\">max_allowed_packet = 32M</div></pre></td></tr></table></figure></p>\n<h2 id=\"4、初始化数据库\"><a href=\"#4、初始化数据库\" class=\"headerlink\" title=\"4、初始化数据库\"></a>4、初始化数据库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/mysql/scripts/mysql_install_db --defaults-file=/etc/my.cnf  --user=mysql</div></pre></td></tr></table></figure>\n<h2 id=\"5、创建开机启动脚本\"><a href=\"#5、创建开机启动脚本\" class=\"headerlink\" title=\"5、创建开机启动脚本\"></a>5、创建开机启动脚本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /usr/server/mysql/</div><div class=\"line\">cp support-files/mysql.server /etc/rc.d/init.d/mysqld</div><div class=\"line\">chkconfig --add mysqld</div><div class=\"line\">chkconfig --level 35 mysqld on</div></pre></td></tr></table></figure>\n<h2 id=\"6、启动mysql服务器\"><a href=\"#6、启动mysql服务器\" class=\"headerlink\" title=\"6、启动mysql服务器\"></a>6、启动mysql服务器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service mysqld start</div></pre></td></tr></table></figure>\n<h2 id=\"7、连接-MySQL\"><a href=\"#7、连接-MySQL\" class=\"headerlink\" title=\"7、连接 MySQL\"></a>7、连接 MySQL</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/mysql/bin/mysql -u root -p</div></pre></td></tr></table></figure>\n<h2 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">启动：service mysqld start</div><div class=\"line\">停止：service mysqld stop</div><div class=\"line\">重启：service mysqld restart</div><div class=\"line\">重载配置：service mysqld reload</div></pre></td></tr></table></figure>","excerpt":"<h2 id=\"1、创建mysql运行使用的用户mysql：\"><a href=\"#1、创建mysql运行使用的用户mysql：\" class=\"headerlink\" title=\"1、创建mysql运行使用的用户mysql：\"></a>1、创建mysql运行使用的用户mysql：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/sbin/groupadd mysql</div><div class=\"line\">/usr/sbin/useradd -g mysql mysql</div></pre></td></tr></table></figure>","more":"<h2 id=\"2、创建binlog和库的存储路径并赋予mysql用户权限\"><a href=\"#2、创建binlog和库的存储路径并赋予mysql用户权限\" class=\"headerlink\" title=\"2、创建binlog和库的存储路径并赋予mysql用户权限\"></a>2、创建binlog和库的存储路径并赋予mysql用户权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir -p /usr/server/mysql/binlog /www/data_mysql</div><div class=\"line\">chown mysql.mysql /usr/server/mysql/binlog/ /www/data_mysql/</div></pre></td></tr></table></figure>\n<h2 id=\"3、创建my-cnf配置文件\"><a href=\"#3、创建my-cnf配置文件\" class=\"headerlink\" title=\"3、创建my.cnf配置文件\"></a>3、创建my.cnf配置文件</h2><p>将/etc/my.cnf替换为下面内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div></pre></td><td class=\"code\"><pre><div class=\"line\">[client]</div><div class=\"line\">port = 3306</div><div class=\"line\">socket = /tmp/mysql.sock</div><div class=\"line\">[mysqld]</div><div class=\"line\">replicate-ignore-db = mysql</div><div class=\"line\">replicate-ignore-db = test</div><div class=\"line\">replicate-ignore-db = information_schema</div><div class=\"line\">user = mysql</div><div class=\"line\">port = 3306</div><div class=\"line\">socket = /tmp/mysql.sock</div><div class=\"line\">basedir = /usr/server/mysql</div><div class=\"line\">datadir = /www/data_mysql</div><div class=\"line\">log-error = /usr/server/mysql/mysql_error.log</div><div class=\"line\">pid-file = /usr/server/mysql/mysql.pid</div><div class=\"line\">open_files_limit = 65535</div><div class=\"line\">back_log = 600</div><div class=\"line\">max_connections = 5000</div><div class=\"line\">max_connect_errors = 1000</div><div class=\"line\">table_open_cache = 1024</div><div class=\"line\">external-locking = FALSE</div><div class=\"line\">max_allowed_packet = 32M</div><div class=\"line\">sort_buffer_size = 1M</div><div class=\"line\">join_buffer_size = 1M</div><div class=\"line\">thread_cache_size = 600</div><div class=\"line\">#thread_concurrency = 8</div><div class=\"line\">query_cache_size = 128M</div><div class=\"line\">query_cache_limit = 2M</div><div class=\"line\">query_cache_min_res_unit = 2k</div><div class=\"line\">default-storage-engine = MyISAM</div><div class=\"line\">default-tmp-storage-engine=MYISAM</div><div class=\"line\">thread_stack = 192K</div><div class=\"line\">transaction_isolation = READ-COMMITTED</div><div class=\"line\">tmp_table_size = 128M</div><div class=\"line\">max_heap_table_size = 128M</div><div class=\"line\">log-slave-updates</div><div class=\"line\">log-bin = /usr/server/mysql/binlog/binlog</div><div class=\"line\">binlog-do-db=oa_fb</div><div class=\"line\">binlog-ignore-db=mysql</div><div class=\"line\">binlog_cache_size = 4M</div><div class=\"line\">binlog_format = MIXED</div><div class=\"line\">max_binlog_cache_size = 8M</div><div class=\"line\">max_binlog_size = 1G</div><div class=\"line\">relay-log-index = /usr/server/mysql/relaylog/relaylog</div><div class=\"line\">relay-log-info-file = /usr/server/mysql/relaylog/relaylog</div><div class=\"line\">relay-log = /usr/server/mysql/relaylog/relaylog</div><div class=\"line\">expire_logs_days = 10</div><div class=\"line\">key_buffer_size = 256M</div><div class=\"line\">read_buffer_size = 1M</div><div class=\"line\">read_rnd_buffer_size = 16M</div><div class=\"line\">bulk_insert_buffer_size = 64M</div><div class=\"line\">myisam_sort_buffer_size = 128M</div><div class=\"line\">myisam_max_sort_file_size = 10G</div><div class=\"line\">myisam_repair_threads = 1</div><div class=\"line\">myisam_recover</div><div class=\"line\">interactive_timeout = 120</div><div class=\"line\">wait_timeout = 120</div><div class=\"line\">skip-name-resolve</div><div class=\"line\">#master-connect-retry = 10</div><div class=\"line\">slave-skip-errors = 1032,1062,126,1114,1146,1048,1396</div><div class=\"line\">#master-host = 192.168.1.2</div><div class=\"line\">#master-user = username</div><div class=\"line\">#master-password = password</div><div class=\"line\">#master-port = 3306</div><div class=\"line\">server-id = 1</div><div class=\"line\">loose-innodb-trx=0</div><div class=\"line\">loose-innodb-locks=0</div><div class=\"line\">loose-innodb-lock-waits=0</div><div class=\"line\">loose-innodb-cmp=0</div><div class=\"line\">loose-innodb-cmp-per-index=0</div><div class=\"line\">loose-innodb-cmp-per-index-reset=0</div><div class=\"line\">loose-innodb-cmp-reset=0</div><div class=\"line\">loose-innodb-cmpmem=0</div><div class=\"line\">loose-innodb-cmpmem-reset=0</div><div class=\"line\">loose-innodb-buffer-page=0</div><div class=\"line\">loose-innodb-buffer-page-lru=0</div><div class=\"line\">loose-innodb-buffer-pool-stats=0</div><div class=\"line\">loose-innodb-metrics=0</div><div class=\"line\">loose-innodb-ft-default-stopword=0</div><div class=\"line\">loose-innodb-ft-inserted=0</div><div class=\"line\">loose-innodb-ft-deleted=0</div><div class=\"line\">loose-innodb-ft-being-deleted=0</div><div class=\"line\">loose-innodb-ft-config=0</div><div class=\"line\">loose-innodb-ft-index-cache=0</div><div class=\"line\">loose-innodb-ft-index-table=0</div><div class=\"line\">loose-innodb-sys-tables=0</div><div class=\"line\">loose-innodb-sys-tablestats=0</div><div class=\"line\">loose-innodb-sys-indexes=0</div><div class=\"line\">loose-innodb-sys-columns=0</div><div class=\"line\">loose-innodb-sys-fields=0</div><div class=\"line\">loose-innodb-sys-foreign=0</div><div class=\"line\">loose-innodb-sys-foreign-cols=0</div><div class=\"line\">slow_query_log_file=/usr/server/mysql/mysql_slow.log</div><div class=\"line\">long_query_time = 1</div><div class=\"line\">[mysqldump]</div><div class=\"line\">quick</div><div class=\"line\">max_allowed_packet = 32M</div></pre></td></tr></table></figure></p>\n<h2 id=\"4、初始化数据库\"><a href=\"#4、初始化数据库\" class=\"headerlink\" title=\"4、初始化数据库\"></a>4、初始化数据库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/mysql/scripts/mysql_install_db --defaults-file=/etc/my.cnf  --user=mysql</div></pre></td></tr></table></figure>\n<h2 id=\"5、创建开机启动脚本\"><a href=\"#5、创建开机启动脚本\" class=\"headerlink\" title=\"5、创建开机启动脚本\"></a>5、创建开机启动脚本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /usr/server/mysql/</div><div class=\"line\">cp support-files/mysql.server /etc/rc.d/init.d/mysqld</div><div class=\"line\">chkconfig --add mysqld</div><div class=\"line\">chkconfig --level 35 mysqld on</div></pre></td></tr></table></figure>\n<h2 id=\"6、启动mysql服务器\"><a href=\"#6、启动mysql服务器\" class=\"headerlink\" title=\"6、启动mysql服务器\"></a>6、启动mysql服务器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">service mysqld start</div></pre></td></tr></table></figure>\n<h2 id=\"7、连接-MySQL\"><a href=\"#7、连接-MySQL\" class=\"headerlink\" title=\"7、连接 MySQL\"></a>7、连接 MySQL</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/mysql/bin/mysql -u root -p</div></pre></td></tr></table></figure>\n<h2 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">启动：service mysqld start</div><div class=\"line\">停止：service mysqld stop</div><div class=\"line\">重启：service mysqld restart</div><div class=\"line\">重载配置：service mysqld reload</div></pre></td></tr></table></figure>"},{"title":"nginx启动、重启、关闭","date":"2017-03-09T10:11:53.000Z","_content":"## 启动\n``` shell\ncd usr/local/nginx/sbin\n./nginx\n```\n<!-- more -->\n## 更改配置重启nginx　　\nkill -HUP 主进程号或进程号文件路径\n或者使用\n### 判断配置文件是否正确　\n``` shell\nnginx -t -c /usr/local/nginx/conf/nginx.conf\n```\n或者\n``` shell\ncd  /usr/local/nginx/sbin\n./nginx -t\n```\n### 重启\n``` shell\ncd /usr/local/nginx/sbin\n./nginx -s reload\n```\n\n## 关闭\n### 查询nginx主进程号\n``` shell\nps -ef | grep nginx\n```\n　　从容停止   kill -QUIT 主进程号\n\n　　快速停止   kill -TERM 主进程号\n\n　　强制停止   kill -9 nginx\n\n　　若nginx.conf配置了pid文件路径，如果没有，则在logs目录下\n\n　　kill -信号类型 '/usr/local/nginx/logs/nginx.pid'\n\n## 升级\n\n　　1、先用新程序替换旧程序文件\n\n　　2、kill -USR2 旧版程序的主进程号或者进程文件名\n\n　　　　此时旧的nginx主进程会把自己的进程文件改名为.oldbin，然后执行新版nginx，此时新旧版本同时运行\n\n　　3、kill -WINCH 旧版本主进程号\n\n　　4、不重载配置启动新/旧工作进程\n\n　　　　kill -HUP 旧/新版本主进程号\n\n　　　　从容关闭旧/新进程\n\n　　　　kill -QUIT 旧/新进程号\n\n　　　　快速关闭旧/新进程\n\n　　　　kill -TERM 旧/新进程号\n","source":"_posts/云主机/nginx启动、重启、关闭.md","raw":"---\ntitle: nginx启动、重启、关闭\ndate: 2017-03-09 18:11:53\ncategories: 云主机\ntags:\n - nginx\n - Linux\n---\n## 启动\n``` shell\ncd usr/local/nginx/sbin\n./nginx\n```\n<!-- more -->\n## 更改配置重启nginx　　\nkill -HUP 主进程号或进程号文件路径\n或者使用\n### 判断配置文件是否正确　\n``` shell\nnginx -t -c /usr/local/nginx/conf/nginx.conf\n```\n或者\n``` shell\ncd  /usr/local/nginx/sbin\n./nginx -t\n```\n### 重启\n``` shell\ncd /usr/local/nginx/sbin\n./nginx -s reload\n```\n\n## 关闭\n### 查询nginx主进程号\n``` shell\nps -ef | grep nginx\n```\n　　从容停止   kill -QUIT 主进程号\n\n　　快速停止   kill -TERM 主进程号\n\n　　强制停止   kill -9 nginx\n\n　　若nginx.conf配置了pid文件路径，如果没有，则在logs目录下\n\n　　kill -信号类型 '/usr/local/nginx/logs/nginx.pid'\n\n## 升级\n\n　　1、先用新程序替换旧程序文件\n\n　　2、kill -USR2 旧版程序的主进程号或者进程文件名\n\n　　　　此时旧的nginx主进程会把自己的进程文件改名为.oldbin，然后执行新版nginx，此时新旧版本同时运行\n\n　　3、kill -WINCH 旧版本主进程号\n\n　　4、不重载配置启动新/旧工作进程\n\n　　　　kill -HUP 旧/新版本主进程号\n\n　　　　从容关闭旧/新进程\n\n　　　　kill -QUIT 旧/新进程号\n\n　　　　快速关闭旧/新进程\n\n　　　　kill -TERM 旧/新进程号\n","slug":"云主机/nginx启动、重启、关闭","published":1,"updated":"2017-03-12T15:18:39.032Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taag2004gr8sy8mnmccqz","content":"<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd usr/local/nginx/sbin</div><div class=\"line\">./nginx</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"更改配置重启nginx\"><a href=\"#更改配置重启nginx\" class=\"headerlink\" title=\"更改配置重启nginx　　\"></a>更改配置重启nginx　　</h2><p>kill -HUP 主进程号或进程号文件路径<br>或者使用</p>\n<h3 id=\"判断配置文件是否正确\"><a href=\"#判断配置文件是否正确\" class=\"headerlink\" title=\"判断配置文件是否正确　\"></a>判断配置文件是否正确　</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -t -c /usr/local/nginx/conf/nginx.conf</div></pre></td></tr></table></figure>\n<p>或者<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd  /usr/local/nginx/sbin</div><div class=\"line\">./nginx -t</div></pre></td></tr></table></figure></p>\n<h3 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /usr/local/nginx/sbin</div><div class=\"line\">./nginx -s reload</div></pre></td></tr></table></figure>\n<h2 id=\"关闭\"><a href=\"#关闭\" class=\"headerlink\" title=\"关闭\"></a>关闭</h2><h3 id=\"查询nginx主进程号\"><a href=\"#查询nginx主进程号\" class=\"headerlink\" title=\"查询nginx主进程号\"></a>查询nginx主进程号</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -ef | grep nginx</div></pre></td></tr></table></figure>\n<p>　　从容停止   kill -QUIT 主进程号</p>\n<p>　　快速停止   kill -TERM 主进程号</p>\n<p>　　强制停止   kill -9 nginx</p>\n<p>　　若nginx.conf配置了pid文件路径，如果没有，则在logs目录下</p>\n<p>　　kill -信号类型 ‘/usr/local/nginx/logs/nginx.pid’</p>\n<h2 id=\"升级\"><a href=\"#升级\" class=\"headerlink\" title=\"升级\"></a>升级</h2><p>　　1、先用新程序替换旧程序文件</p>\n<p>　　2、kill -USR2 旧版程序的主进程号或者进程文件名</p>\n<p>　　　　此时旧的nginx主进程会把自己的进程文件改名为.oldbin，然后执行新版nginx，此时新旧版本同时运行</p>\n<p>　　3、kill -WINCH 旧版本主进程号</p>\n<p>　　4、不重载配置启动新/旧工作进程</p>\n<p>　　　　kill -HUP 旧/新版本主进程号</p>\n<p>　　　　从容关闭旧/新进程</p>\n<p>　　　　kill -QUIT 旧/新进程号</p>\n<p>　　　　快速关闭旧/新进程</p>\n<p>　　　　kill -TERM 旧/新进程号</p>\n","excerpt":"<h2 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd usr/local/nginx/sbin</div><div class=\"line\">./nginx</div></pre></td></tr></table></figure>","more":"<h2 id=\"更改配置重启nginx\"><a href=\"#更改配置重启nginx\" class=\"headerlink\" title=\"更改配置重启nginx　　\"></a>更改配置重启nginx　　</h2><p>kill -HUP 主进程号或进程号文件路径<br>或者使用</p>\n<h3 id=\"判断配置文件是否正确\"><a href=\"#判断配置文件是否正确\" class=\"headerlink\" title=\"判断配置文件是否正确　\"></a>判断配置文件是否正确　</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -t -c /usr/local/nginx/conf/nginx.conf</div></pre></td></tr></table></figure>\n<p>或者<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd  /usr/local/nginx/sbin</div><div class=\"line\">./nginx -t</div></pre></td></tr></table></figure></p>\n<h3 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /usr/local/nginx/sbin</div><div class=\"line\">./nginx -s reload</div></pre></td></tr></table></figure>\n<h2 id=\"关闭\"><a href=\"#关闭\" class=\"headerlink\" title=\"关闭\"></a>关闭</h2><h3 id=\"查询nginx主进程号\"><a href=\"#查询nginx主进程号\" class=\"headerlink\" title=\"查询nginx主进程号\"></a>查询nginx主进程号</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -ef | grep nginx</div></pre></td></tr></table></figure>\n<p>　　从容停止   kill -QUIT 主进程号</p>\n<p>　　快速停止   kill -TERM 主进程号</p>\n<p>　　强制停止   kill -9 nginx</p>\n<p>　　若nginx.conf配置了pid文件路径，如果没有，则在logs目录下</p>\n<p>　　kill -信号类型 ‘/usr/local/nginx/logs/nginx.pid’</p>\n<h2 id=\"升级\"><a href=\"#升级\" class=\"headerlink\" title=\"升级\"></a>升级</h2><p>　　1、先用新程序替换旧程序文件</p>\n<p>　　2、kill -USR2 旧版程序的主进程号或者进程文件名</p>\n<p>　　　　此时旧的nginx主进程会把自己的进程文件改名为.oldbin，然后执行新版nginx，此时新旧版本同时运行</p>\n<p>　　3、kill -WINCH 旧版本主进程号</p>\n<p>　　4、不重载配置启动新/旧工作进程</p>\n<p>　　　　kill -HUP 旧/新版本主进程号</p>\n<p>　　　　从容关闭旧/新进程</p>\n<p>　　　　kill -QUIT 旧/新进程号</p>\n<p>　　　　快速关闭旧/新进程</p>\n<p>　　　　kill -TERM 旧/新进程号</p>"},{"title":"nginx安装","date":"2017-03-10T09:12:49.000Z","_content":"## 安装编译工具及库文件\n``` shell\nyum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel\n```\n<!-- more -->\n## 首先要安装 PCRE\nPCRE 作用是让 Ngnix 支持 Rewrite 功能。\n### 1、下载 PCRE 安装包，下载地址： [http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz](http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz)\n``` shell\nwget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz\ntar zxvf pcre-8.35.tar.gz\ncd pcre-8.35\n./configure --prefix=/usr/server/pcre\nmake && make install\n```\n备注：./configure 可以添加--prefix指定安装路径\n### 2、查看PCRE版本\n``` shell\npcre-config --version\n```\n## 安装 Nginx\n### 1、下载 Nginx，下载地址：http://nginx.org/download/nginx-1.6.2.tar.gz\n``` shell\nwget http://nginx.org/download/nginx-1.6.2.tar.gz\ntar zxvf nginx-1.6.2.tar.gz\ncd nginx-1.6.2\n./configure --prefix=/usr/server/nginx-1.6.2 --with-http_stub_status_module --with-http_ssl_module --with-pcre=/tmp/pcre-8.35\nmake\nmake install\n```\n>备注：configure的--with-pcre指定的参数并非是安装后的pcre路径，而是pcre的安装前的源代码路径\n### 2、查看Nginx版本\n``` shell\n/usr/server/nginx-1.6.2/sbin/nginx -v\n```\n到此，nginx安装完成。\n\n\n\n","source":"_posts/云主机/nginx安装.md","raw":"---\ntitle: nginx安装\ndate: 2017-03-10 17:12:49\ncategories: 云主机\ntags:\n - nginx\n - Linux\n---\n## 安装编译工具及库文件\n``` shell\nyum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel\n```\n<!-- more -->\n## 首先要安装 PCRE\nPCRE 作用是让 Ngnix 支持 Rewrite 功能。\n### 1、下载 PCRE 安装包，下载地址： [http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz](http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz)\n``` shell\nwget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz\ntar zxvf pcre-8.35.tar.gz\ncd pcre-8.35\n./configure --prefix=/usr/server/pcre\nmake && make install\n```\n备注：./configure 可以添加--prefix指定安装路径\n### 2、查看PCRE版本\n``` shell\npcre-config --version\n```\n## 安装 Nginx\n### 1、下载 Nginx，下载地址：http://nginx.org/download/nginx-1.6.2.tar.gz\n``` shell\nwget http://nginx.org/download/nginx-1.6.2.tar.gz\ntar zxvf nginx-1.6.2.tar.gz\ncd nginx-1.6.2\n./configure --prefix=/usr/server/nginx-1.6.2 --with-http_stub_status_module --with-http_ssl_module --with-pcre=/tmp/pcre-8.35\nmake\nmake install\n```\n>备注：configure的--with-pcre指定的参数并非是安装后的pcre路径，而是pcre的安装前的源代码路径\n### 2、查看Nginx版本\n``` shell\n/usr/server/nginx-1.6.2/sbin/nginx -v\n```\n到此，nginx安装完成。\n\n\n\n","slug":"云主机/nginx安装","published":1,"updated":"2017-03-12T15:23:07.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taag4004jr8sy8vb1e83e","content":"<h2 id=\"安装编译工具及库文件\"><a href=\"#安装编译工具及库文件\" class=\"headerlink\" title=\"安装编译工具及库文件\"></a>安装编译工具及库文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"首先要安装-PCRE\"><a href=\"#首先要安装-PCRE\" class=\"headerlink\" title=\"首先要安装 PCRE\"></a>首先要安装 PCRE</h2><p>PCRE 作用是让 Ngnix 支持 Rewrite 功能。</p>\n<h3 id=\"1、下载-PCRE-安装包，下载地址：-http-downloads-sourceforge-net-project-pcre-pcre-8-35-pcre-8-35-tar-gz\"><a href=\"#1、下载-PCRE-安装包，下载地址：-http-downloads-sourceforge-net-project-pcre-pcre-8-35-pcre-8-35-tar-gz\" class=\"headerlink\" title=\"1、下载 PCRE 安装包，下载地址： http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz\"></a>1、下载 PCRE 安装包，下载地址： <a href=\"http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz\" target=\"_blank\" rel=\"external\">http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</div><div class=\"line\">tar zxvf pcre-8.35.tar.gz</div><div class=\"line\">cd pcre-8.35</div><div class=\"line\">./configure --prefix=/usr/server/pcre</div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<p>备注：./configure 可以添加–prefix指定安装路径</p>\n<h3 id=\"2、查看PCRE版本\"><a href=\"#2、查看PCRE版本\" class=\"headerlink\" title=\"2、查看PCRE版本\"></a>2、查看PCRE版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pcre-config --version</div></pre></td></tr></table></figure>\n<h2 id=\"安装-Nginx\"><a href=\"#安装-Nginx\" class=\"headerlink\" title=\"安装 Nginx\"></a>安装 Nginx</h2><h3 id=\"1、下载-Nginx，下载地址：http-nginx-org-download-nginx-1-6-2-tar-gz\"><a href=\"#1、下载-Nginx，下载地址：http-nginx-org-download-nginx-1-6-2-tar-gz\" class=\"headerlink\" title=\"1、下载 Nginx，下载地址：http://nginx.org/download/nginx-1.6.2.tar.gz\"></a>1、下载 Nginx，下载地址：<a href=\"http://nginx.org/download/nginx-1.6.2.tar.gz\" target=\"_blank\" rel=\"external\">http://nginx.org/download/nginx-1.6.2.tar.gz</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://nginx.org/download/nginx-1.6.2.tar.gz</div><div class=\"line\">tar zxvf nginx-1.6.2.tar.gz</div><div class=\"line\">cd nginx-1.6.2</div><div class=\"line\">./configure --prefix=/usr/server/nginx-1.6.2 --with-http_stub_status_module --with-http_ssl_module --with-pcre=/tmp/pcre-8.35</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<blockquote>\n<p>备注：configure的–with-pcre指定的参数并非是安装后的pcre路径，而是pcre的安装前的源代码路径</p>\n<h3 id=\"2、查看Nginx版本\"><a href=\"#2、查看Nginx版本\" class=\"headerlink\" title=\"2、查看Nginx版本\"></a>2、查看Nginx版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/nginx-1.6.2/sbin/nginx -v</div></pre></td></tr></table></figure>\n</blockquote>\n<p>到此，nginx安装完成。</p>\n","excerpt":"<h2 id=\"安装编译工具及库文件\"><a href=\"#安装编译工具及库文件\" class=\"headerlink\" title=\"安装编译工具及库文件\"></a>安装编译工具及库文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</div></pre></td></tr></table></figure>","more":"<h2 id=\"首先要安装-PCRE\"><a href=\"#首先要安装-PCRE\" class=\"headerlink\" title=\"首先要安装 PCRE\"></a>首先要安装 PCRE</h2><p>PCRE 作用是让 Ngnix 支持 Rewrite 功能。</p>\n<h3 id=\"1、下载-PCRE-安装包，下载地址：-http-downloads-sourceforge-net-project-pcre-pcre-8-35-pcre-8-35-tar-gz\"><a href=\"#1、下载-PCRE-安装包，下载地址：-http-downloads-sourceforge-net-project-pcre-pcre-8-35-pcre-8-35-tar-gz\" class=\"headerlink\" title=\"1、下载 PCRE 安装包，下载地址： http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz\"></a>1、下载 PCRE 安装包，下载地址： <a href=\"http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz\">http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</div><div class=\"line\">tar zxvf pcre-8.35.tar.gz</div><div class=\"line\">cd pcre-8.35</div><div class=\"line\">./configure --prefix=/usr/server/pcre</div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<p>备注：./configure 可以添加–prefix指定安装路径</p>\n<h3 id=\"2、查看PCRE版本\"><a href=\"#2、查看PCRE版本\" class=\"headerlink\" title=\"2、查看PCRE版本\"></a>2、查看PCRE版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pcre-config --version</div></pre></td></tr></table></figure>\n<h2 id=\"安装-Nginx\"><a href=\"#安装-Nginx\" class=\"headerlink\" title=\"安装 Nginx\"></a>安装 Nginx</h2><h3 id=\"1、下载-Nginx，下载地址：http-nginx-org-download-nginx-1-6-2-tar-gz\"><a href=\"#1、下载-Nginx，下载地址：http-nginx-org-download-nginx-1-6-2-tar-gz\" class=\"headerlink\" title=\"1、下载 Nginx，下载地址：http://nginx.org/download/nginx-1.6.2.tar.gz\"></a>1、下载 Nginx，下载地址：<a href=\"http://nginx.org/download/nginx-1.6.2.tar.gz\">http://nginx.org/download/nginx-1.6.2.tar.gz</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">wget http://nginx.org/download/nginx-1.6.2.tar.gz</div><div class=\"line\">tar zxvf nginx-1.6.2.tar.gz</div><div class=\"line\">cd nginx-1.6.2</div><div class=\"line\">./configure --prefix=/usr/server/nginx-1.6.2 --with-http_stub_status_module --with-http_ssl_module --with-pcre=/tmp/pcre-8.35</div><div class=\"line\">make</div><div class=\"line\">make install</div></pre></td></tr></table></figure>\n<blockquote>\n<p>备注：configure的–with-pcre指定的参数并非是安装后的pcre路径，而是pcre的安装前的源代码路径</p>\n<h3 id=\"2、查看Nginx版本\"><a href=\"#2、查看Nginx版本\" class=\"headerlink\" title=\"2、查看Nginx版本\"></a>2、查看Nginx版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/nginx-1.6.2/sbin/nginx -v</div></pre></td></tr></table></figure>\n</blockquote>\n<p>到此，nginx安装完成。</p>"},{"title":"ngnix配置","date":"2017-03-10T09:23:09.000Z","_content":"\n## 创建 Nginx 运行使用的用户 www：\n``` shell\n/usr/sbin/groupadd www\n/usr/sbin/useradd -g www www\n```\n<!-- more -->\n## 配置nginx.conf\n``` shell\nvim /usr/server/nginx-1.6.2/conf/nginx.conf\n```\n``` shell\nuser www www;\nworker_processes  2;#设置值和CPU核心数一致\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\nerror_log  logs/error.log  info;#日志位置和日志级别\n#pid        logs/nginx.pid;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n    #access_log  logs/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    #gzip  on;\n    server {\n        listen       80;\n        server_name  localhost;\n        #charset koi8-r;\n        #access_log  logs/host.access.log  main;\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n        #error_page  404              /404.html;\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n}\n```\n## 检查配置文件ngnix.conf的正确性命令：\n``` shell\n/usr/server/nginx-1.6.2/sbin/nginx -t\n```\n## 启动ngnix\n``` shell\n/usr/server/nginx-1.6.2/sbin/nginx\n```\n## 访问站点\n从浏览器访问我们配置的站点ip：x.x.x.x\n\n##Nginx 其他命令\n``` shell\n./nginx -s reload # 重新载入配置文件\n./nginx -s reopen # 重启 Nginx\n./nginx -s stop # 停止 Nginx\n```","source":"_posts/云主机/ngnix配置.md","raw":"---\ntitle: ngnix配置\ndate: 2017-03-10 17:23:09\ncategories: 云主机\ntags:\n - nginx\n - Linux\n---\n\n## 创建 Nginx 运行使用的用户 www：\n``` shell\n/usr/sbin/groupadd www\n/usr/sbin/useradd -g www www\n```\n<!-- more -->\n## 配置nginx.conf\n``` shell\nvim /usr/server/nginx-1.6.2/conf/nginx.conf\n```\n``` shell\nuser www www;\nworker_processes  2;#设置值和CPU核心数一致\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\nerror_log  logs/error.log  info;#日志位置和日志级别\n#pid        logs/nginx.pid;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n    #access_log  logs/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    #gzip  on;\n    server {\n        listen       80;\n        server_name  localhost;\n        #charset koi8-r;\n        #access_log  logs/host.access.log  main;\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n        #error_page  404              /404.html;\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n}\n```\n## 检查配置文件ngnix.conf的正确性命令：\n``` shell\n/usr/server/nginx-1.6.2/sbin/nginx -t\n```\n## 启动ngnix\n``` shell\n/usr/server/nginx-1.6.2/sbin/nginx\n```\n## 访问站点\n从浏览器访问我们配置的站点ip：x.x.x.x\n\n##Nginx 其他命令\n``` shell\n./nginx -s reload # 重新载入配置文件\n./nginx -s reopen # 重启 Nginx\n./nginx -s stop # 停止 Nginx\n```","slug":"云主机/ngnix配置","published":1,"updated":"2017-03-12T15:19:55.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taag6004mr8syuh9x5ikx","content":"<h2 id=\"创建-Nginx-运行使用的用户-www：\"><a href=\"#创建-Nginx-运行使用的用户-www：\" class=\"headerlink\" title=\"创建 Nginx 运行使用的用户 www：\"></a>创建 Nginx 运行使用的用户 www：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/sbin/groupadd www</div><div class=\"line\">/usr/sbin/useradd -g www www</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"配置nginx-conf\"><a href=\"#配置nginx-conf\" class=\"headerlink\" title=\"配置nginx.conf\"></a>配置nginx.conf</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /usr/server/nginx-1.6.2/conf/nginx.conf</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div></pre></td><td class=\"code\"><pre><div class=\"line\">user www www;</div><div class=\"line\">worker_processes  2;#设置值和CPU核心数一致</div><div class=\"line\">#error_log  logs/error.log;</div><div class=\"line\">#error_log  logs/error.log  notice;</div><div class=\"line\">#error_log  logs/error.log  info;</div><div class=\"line\">error_log  logs/error.log  info;#日志位置和日志级别</div><div class=\"line\">#pid        logs/nginx.pid;</div><div class=\"line\">events &#123;</div><div class=\"line\">    worker_connections  1024;</div><div class=\"line\">&#125;</div><div class=\"line\">http &#123;</div><div class=\"line\">    include       mime.types;</div><div class=\"line\">    default_type  application/octet-stream;</div><div class=\"line\">    #log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</div><div class=\"line\">    #                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</div><div class=\"line\">    #                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</div><div class=\"line\">    #access_log  logs/access.log  main;</div><div class=\"line\">    sendfile        on;</div><div class=\"line\">    #tcp_nopush     on;</div><div class=\"line\">    #keepalive_timeout  0;</div><div class=\"line\">    keepalive_timeout  65;</div><div class=\"line\">    #gzip  on;</div><div class=\"line\">    server &#123;</div><div class=\"line\">        listen       80;</div><div class=\"line\">        server_name  localhost;</div><div class=\"line\">        #charset koi8-r;</div><div class=\"line\">        #access_log  logs/host.access.log  main;</div><div class=\"line\">        location / &#123;</div><div class=\"line\">            root   html;</div><div class=\"line\">            index  index.html index.htm;</div><div class=\"line\">        &#125;</div><div class=\"line\">        #error_page  404              /404.html;</div><div class=\"line\">        # redirect server error pages to the static page /50x.html</div><div class=\"line\">        #</div><div class=\"line\">        error_page   500 502 503 504  /50x.html;</div><div class=\"line\">        location = /50x.html &#123;</div><div class=\"line\">            root   html;</div><div class=\"line\">        &#125;</div><div class=\"line\">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</div><div class=\"line\">        #</div><div class=\"line\">        #location ~ \\.php$ &#123;</div><div class=\"line\">        #    proxy_pass   http://127.0.0.1;</div><div class=\"line\">        #&#125;</div><div class=\"line\">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class=\"line\">        #</div><div class=\"line\">        #location ~ \\.php$ &#123;</div><div class=\"line\">        #    root           html;</div><div class=\"line\">        #    fastcgi_pass   127.0.0.1:9000;</div><div class=\"line\">        #    fastcgi_index  index.php;</div><div class=\"line\">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</div><div class=\"line\">        #    include        fastcgi_params;</div><div class=\"line\">        #&#125;</div><div class=\"line\">        # deny access to .htaccess files, if Apache&apos;s document root</div><div class=\"line\">        # concurs with nginx&apos;s one</div><div class=\"line\">        #</div><div class=\"line\">        #location ~ /\\.ht &#123;</div><div class=\"line\">        #    deny  all;</div><div class=\"line\">        #&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    # another virtual host using mix of IP-, name-, and port-based configuration</div><div class=\"line\">    #</div><div class=\"line\">    #server &#123;</div><div class=\"line\">    #    listen       8000;</div><div class=\"line\">    #    listen       somename:8080;</div><div class=\"line\">    #    server_name  somename  alias  another.alias;</div><div class=\"line\">    #    location / &#123;</div><div class=\"line\">    #        root   html;</div><div class=\"line\">    #        index  index.html index.htm;</div><div class=\"line\">    #    &#125;</div><div class=\"line\">    #&#125;</div><div class=\"line\">    # HTTPS server</div><div class=\"line\">    #</div><div class=\"line\">    #server &#123;</div><div class=\"line\">    #    listen       443 ssl;</div><div class=\"line\">    #    server_name  localhost;</div><div class=\"line\">    #    ssl_certificate      cert.pem;</div><div class=\"line\">    #    ssl_certificate_key  cert.key;</div><div class=\"line\">    #    ssl_session_cache    shared:SSL:1m;</div><div class=\"line\">    #    ssl_session_timeout  5m;</div><div class=\"line\">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</div><div class=\"line\">    #    ssl_prefer_server_ciphers  on;</div><div class=\"line\">    #    location / &#123;</div><div class=\"line\">    #        root   html;</div><div class=\"line\">    #        index  index.html index.htm;</div><div class=\"line\">    #    &#125;</div><div class=\"line\">    #&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"检查配置文件ngnix-conf的正确性命令：\"><a href=\"#检查配置文件ngnix-conf的正确性命令：\" class=\"headerlink\" title=\"检查配置文件ngnix.conf的正确性命令：\"></a>检查配置文件ngnix.conf的正确性命令：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/nginx-1.6.2/sbin/nginx -t</div></pre></td></tr></table></figure>\n<h2 id=\"启动ngnix\"><a href=\"#启动ngnix\" class=\"headerlink\" title=\"启动ngnix\"></a>启动ngnix</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/nginx-1.6.2/sbin/nginx</div></pre></td></tr></table></figure>\n<h2 id=\"访问站点\"><a href=\"#访问站点\" class=\"headerlink\" title=\"访问站点\"></a>访问站点</h2><p>从浏览器访问我们配置的站点ip：x.x.x.x</p>\n<p>##Nginx 其他命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">./nginx -s reload # 重新载入配置文件</div><div class=\"line\">./nginx -s reopen # 重启 Nginx</div><div class=\"line\">./nginx -s stop # 停止 Nginx</div></pre></td></tr></table></figure></p>\n","excerpt":"<h2 id=\"创建-Nginx-运行使用的用户-www：\"><a href=\"#创建-Nginx-运行使用的用户-www：\" class=\"headerlink\" title=\"创建 Nginx 运行使用的用户 www：\"></a>创建 Nginx 运行使用的用户 www：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/sbin/groupadd www</div><div class=\"line\">/usr/sbin/useradd -g www www</div></pre></td></tr></table></figure>","more":"<h2 id=\"配置nginx-conf\"><a href=\"#配置nginx-conf\" class=\"headerlink\" title=\"配置nginx.conf\"></a>配置nginx.conf</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /usr/server/nginx-1.6.2/conf/nginx.conf</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div></pre></td><td class=\"code\"><pre><div class=\"line\">user www www;</div><div class=\"line\">worker_processes  2;#设置值和CPU核心数一致</div><div class=\"line\">#error_log  logs/error.log;</div><div class=\"line\">#error_log  logs/error.log  notice;</div><div class=\"line\">#error_log  logs/error.log  info;</div><div class=\"line\">error_log  logs/error.log  info;#日志位置和日志级别</div><div class=\"line\">#pid        logs/nginx.pid;</div><div class=\"line\">events &#123;</div><div class=\"line\">    worker_connections  1024;</div><div class=\"line\">&#125;</div><div class=\"line\">http &#123;</div><div class=\"line\">    include       mime.types;</div><div class=\"line\">    default_type  application/octet-stream;</div><div class=\"line\">    #log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</div><div class=\"line\">    #                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</div><div class=\"line\">    #                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</div><div class=\"line\">    #access_log  logs/access.log  main;</div><div class=\"line\">    sendfile        on;</div><div class=\"line\">    #tcp_nopush     on;</div><div class=\"line\">    #keepalive_timeout  0;</div><div class=\"line\">    keepalive_timeout  65;</div><div class=\"line\">    #gzip  on;</div><div class=\"line\">    server &#123;</div><div class=\"line\">        listen       80;</div><div class=\"line\">        server_name  localhost;</div><div class=\"line\">        #charset koi8-r;</div><div class=\"line\">        #access_log  logs/host.access.log  main;</div><div class=\"line\">        location / &#123;</div><div class=\"line\">            root   html;</div><div class=\"line\">            index  index.html index.htm;</div><div class=\"line\">        &#125;</div><div class=\"line\">        #error_page  404              /404.html;</div><div class=\"line\">        # redirect server error pages to the static page /50x.html</div><div class=\"line\">        #</div><div class=\"line\">        error_page   500 502 503 504  /50x.html;</div><div class=\"line\">        location = /50x.html &#123;</div><div class=\"line\">            root   html;</div><div class=\"line\">        &#125;</div><div class=\"line\">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</div><div class=\"line\">        #</div><div class=\"line\">        #location ~ \\.php$ &#123;</div><div class=\"line\">        #    proxy_pass   http://127.0.0.1;</div><div class=\"line\">        #&#125;</div><div class=\"line\">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class=\"line\">        #</div><div class=\"line\">        #location ~ \\.php$ &#123;</div><div class=\"line\">        #    root           html;</div><div class=\"line\">        #    fastcgi_pass   127.0.0.1:9000;</div><div class=\"line\">        #    fastcgi_index  index.php;</div><div class=\"line\">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</div><div class=\"line\">        #    include        fastcgi_params;</div><div class=\"line\">        #&#125;</div><div class=\"line\">        # deny access to .htaccess files, if Apache&apos;s document root</div><div class=\"line\">        # concurs with nginx&apos;s one</div><div class=\"line\">        #</div><div class=\"line\">        #location ~ /\\.ht &#123;</div><div class=\"line\">        #    deny  all;</div><div class=\"line\">        #&#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    # another virtual host using mix of IP-, name-, and port-based configuration</div><div class=\"line\">    #</div><div class=\"line\">    #server &#123;</div><div class=\"line\">    #    listen       8000;</div><div class=\"line\">    #    listen       somename:8080;</div><div class=\"line\">    #    server_name  somename  alias  another.alias;</div><div class=\"line\">    #    location / &#123;</div><div class=\"line\">    #        root   html;</div><div class=\"line\">    #        index  index.html index.htm;</div><div class=\"line\">    #    &#125;</div><div class=\"line\">    #&#125;</div><div class=\"line\">    # HTTPS server</div><div class=\"line\">    #</div><div class=\"line\">    #server &#123;</div><div class=\"line\">    #    listen       443 ssl;</div><div class=\"line\">    #    server_name  localhost;</div><div class=\"line\">    #    ssl_certificate      cert.pem;</div><div class=\"line\">    #    ssl_certificate_key  cert.key;</div><div class=\"line\">    #    ssl_session_cache    shared:SSL:1m;</div><div class=\"line\">    #    ssl_session_timeout  5m;</div><div class=\"line\">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</div><div class=\"line\">    #    ssl_prefer_server_ciphers  on;</div><div class=\"line\">    #    location / &#123;</div><div class=\"line\">    #        root   html;</div><div class=\"line\">    #        index  index.html index.htm;</div><div class=\"line\">    #    &#125;</div><div class=\"line\">    #&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"检查配置文件ngnix-conf的正确性命令：\"><a href=\"#检查配置文件ngnix-conf的正确性命令：\" class=\"headerlink\" title=\"检查配置文件ngnix.conf的正确性命令：\"></a>检查配置文件ngnix.conf的正确性命令：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/nginx-1.6.2/sbin/nginx -t</div></pre></td></tr></table></figure>\n<h2 id=\"启动ngnix\"><a href=\"#启动ngnix\" class=\"headerlink\" title=\"启动ngnix\"></a>启动ngnix</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/server/nginx-1.6.2/sbin/nginx</div></pre></td></tr></table></figure>\n<h2 id=\"访问站点\"><a href=\"#访问站点\" class=\"headerlink\" title=\"访问站点\"></a>访问站点</h2><p>从浏览器访问我们配置的站点ip：x.x.x.x</p>\n<p>##Nginx 其他命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">./nginx -s reload # 重新载入配置文件</div><div class=\"line\">./nginx -s reopen # 重启 Nginx</div><div class=\"line\">./nginx -s stop # 停止 Nginx</div></pre></td></tr></table></figure></p>"},{"title":"nohup命令详解","date":"2017-03-09T10:30:38.000Z","_content":"背景：\nnohup命令及其输出文件\nnohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( no hang up)。\n<!-- more -->\n一般都是在linux下nohup格式：\n``` shell\nnohup command\n```\n或者\n``` shell\nnohup command &\n```\n这之间的差别是带&的命令行，即使terminal（终端）关闭，或者电脑死机程序依然运行（前提是你把程序递交到服务器上）；\n它把标准输出（STDOUT）和标准错误（STDERR）结果输出到nohup.txt文件这个看似很方便，但是当输出很大的时候，nohup.txt文件会非常大，或者多个后台命令的时候大家都会输出到nohup.txt文件，不利于查找结果和调试程序。\n所以能够重定向输出会非常方便。下面要介绍标准输出，标准输入和标准错误了。\n其实我们一直都在用，只是没有注意到，\n比如\n``` shell\n./command.sh > output\n#这其中的>就是标准输出符号，其实是 1>output 的缩写\n./command.sh 2> output\n＃这里的2>就是将标准错误输出到output文件里。\n```\n而 _**0<**_ 则是标准输入了。\n下面步入正题，重定向后台命令\n``` shell\nnohup ./command.sh > output 2>&1 &\n```\n解释：前面的nohup 和后面的&我想大家都能明白了把。\n\n主要是中间的 2>&1的意思\n这个意思是把标准错误（2）重定向到标准输出中（1），而标准输出又导入文件output里面，\n所以结果是标准错误和标准输出都导入文件output里面了。\n至于为什么需要将标准错误重定向到标准输出的原因，那就归结为标准错误没有缓冲区，而stdout有。\n这就会导致 >output 2>output 文件output被两次打开，而stdout和stderr将会竞争覆盖，这肯定不是我门想要的.\n\n这就是为什么有人会写成：\n``` shell\nnohup ./command.sh >output 2>output #出错的原因了\n```\n最后谈一下/dev/null文件的作用\n这是一个无底洞，任何东西都可以定向到这里，但是却无法打开。\n所以一般很大的stdou和stderr当你不关心的时候可以利用stdout和stderr定向到这里\n``` shell\ncommand.sh >/dev/null 2>&1\n```\n来源：[linux nohup命令详解](http://www.2cto.com/os/201301/185701.html)\n","source":"_posts/云主机/nohup命令详解.md","raw":"---\ntitle: nohup命令详解\ndate: 2017-03-09 18:30:38\ncategories: 云主机\ntags:\n - nohup\n - Linux\n---\n背景：\nnohup命令及其输出文件\nnohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( no hang up)。\n<!-- more -->\n一般都是在linux下nohup格式：\n``` shell\nnohup command\n```\n或者\n``` shell\nnohup command &\n```\n这之间的差别是带&的命令行，即使terminal（终端）关闭，或者电脑死机程序依然运行（前提是你把程序递交到服务器上）；\n它把标准输出（STDOUT）和标准错误（STDERR）结果输出到nohup.txt文件这个看似很方便，但是当输出很大的时候，nohup.txt文件会非常大，或者多个后台命令的时候大家都会输出到nohup.txt文件，不利于查找结果和调试程序。\n所以能够重定向输出会非常方便。下面要介绍标准输出，标准输入和标准错误了。\n其实我们一直都在用，只是没有注意到，\n比如\n``` shell\n./command.sh > output\n#这其中的>就是标准输出符号，其实是 1>output 的缩写\n./command.sh 2> output\n＃这里的2>就是将标准错误输出到output文件里。\n```\n而 _**0<**_ 则是标准输入了。\n下面步入正题，重定向后台命令\n``` shell\nnohup ./command.sh > output 2>&1 &\n```\n解释：前面的nohup 和后面的&我想大家都能明白了把。\n\n主要是中间的 2>&1的意思\n这个意思是把标准错误（2）重定向到标准输出中（1），而标准输出又导入文件output里面，\n所以结果是标准错误和标准输出都导入文件output里面了。\n至于为什么需要将标准错误重定向到标准输出的原因，那就归结为标准错误没有缓冲区，而stdout有。\n这就会导致 >output 2>output 文件output被两次打开，而stdout和stderr将会竞争覆盖，这肯定不是我门想要的.\n\n这就是为什么有人会写成：\n``` shell\nnohup ./command.sh >output 2>output #出错的原因了\n```\n最后谈一下/dev/null文件的作用\n这是一个无底洞，任何东西都可以定向到这里，但是却无法打开。\n所以一般很大的stdou和stderr当你不关心的时候可以利用stdout和stderr定向到这里\n``` shell\ncommand.sh >/dev/null 2>&1\n```\n来源：[linux nohup命令详解](http://www.2cto.com/os/201301/185701.html)\n","slug":"云主机/nohup命令详解","published":1,"updated":"2017-03-12T15:20:04.131Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taag9004or8syhfwcb13f","content":"<p>背景：<br>nohup命令及其输出文件<br>nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( no hang up)。<br><a id=\"more\"></a><br>一般都是在linux下nohup格式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup command</div></pre></td></tr></table></figure></p>\n<p>或者<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup command &amp;</div></pre></td></tr></table></figure></p>\n<p>这之间的差别是带&amp;的命令行，即使terminal（终端）关闭，或者电脑死机程序依然运行（前提是你把程序递交到服务器上）；<br>它把标准输出（STDOUT）和标准错误（STDERR）结果输出到nohup.txt文件这个看似很方便，但是当输出很大的时候，nohup.txt文件会非常大，或者多个后台命令的时候大家都会输出到nohup.txt文件，不利于查找结果和调试程序。<br>所以能够重定向输出会非常方便。下面要介绍标准输出，标准输入和标准错误了。<br>其实我们一直都在用，只是没有注意到，<br>比如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">./command.sh &gt; output</div><div class=\"line\">#这其中的&gt;就是标准输出符号，其实是 1&gt;output 的缩写</div><div class=\"line\">./command.sh 2&gt; output</div><div class=\"line\">＃这里的2&gt;就是将标准错误输出到output文件里。</div></pre></td></tr></table></figure></p>\n<p>而 <em><strong>0&lt;</strong></em> 则是标准输入了。<br>下面步入正题，重定向后台命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup ./command.sh &gt; output 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure></p>\n<p>解释：前面的nohup 和后面的&amp;我想大家都能明白了把。</p>\n<p>主要是中间的 2&gt;&amp;1的意思<br>这个意思是把标准错误（2）重定向到标准输出中（1），而标准输出又导入文件output里面，<br>所以结果是标准错误和标准输出都导入文件output里面了。<br>至于为什么需要将标准错误重定向到标准输出的原因，那就归结为标准错误没有缓冲区，而stdout有。<br>这就会导致 &gt;output 2&gt;output 文件output被两次打开，而stdout和stderr将会竞争覆盖，这肯定不是我门想要的.</p>\n<p>这就是为什么有人会写成：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup ./command.sh &gt;output 2&gt;output #出错的原因了</div></pre></td></tr></table></figure></p>\n<p>最后谈一下/dev/null文件的作用<br>这是一个无底洞，任何东西都可以定向到这里，但是却无法打开。<br>所以一般很大的stdou和stderr当你不关心的时候可以利用stdout和stderr定向到这里<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">command.sh &gt;/dev/null 2&gt;&amp;1</div></pre></td></tr></table></figure></p>\n<p>来源：<a href=\"http://www.2cto.com/os/201301/185701.html\" target=\"_blank\" rel=\"external\">linux nohup命令详解</a></p>\n","excerpt":"<p>背景：<br>nohup命令及其输出文件<br>nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( no hang up)。<br></p>","more":"<br>一般都是在linux下nohup格式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup command</div></pre></td></tr></table></figure><p></p>\n<p>或者<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup command &amp;</div></pre></td></tr></table></figure></p>\n<p>这之间的差别是带&amp;的命令行，即使terminal（终端）关闭，或者电脑死机程序依然运行（前提是你把程序递交到服务器上）；<br>它把标准输出（STDOUT）和标准错误（STDERR）结果输出到nohup.txt文件这个看似很方便，但是当输出很大的时候，nohup.txt文件会非常大，或者多个后台命令的时候大家都会输出到nohup.txt文件，不利于查找结果和调试程序。<br>所以能够重定向输出会非常方便。下面要介绍标准输出，标准输入和标准错误了。<br>其实我们一直都在用，只是没有注意到，<br>比如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">./command.sh &gt; output</div><div class=\"line\">#这其中的&gt;就是标准输出符号，其实是 1&gt;output 的缩写</div><div class=\"line\">./command.sh 2&gt; output</div><div class=\"line\">＃这里的2&gt;就是将标准错误输出到output文件里。</div></pre></td></tr></table></figure></p>\n<p>而 <em><strong>0&lt;</strong></em> 则是标准输入了。<br>下面步入正题，重定向后台命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup ./command.sh &gt; output 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure></p>\n<p>解释：前面的nohup 和后面的&amp;我想大家都能明白了把。</p>\n<p>主要是中间的 2&gt;&amp;1的意思<br>这个意思是把标准错误（2）重定向到标准输出中（1），而标准输出又导入文件output里面，<br>所以结果是标准错误和标准输出都导入文件output里面了。<br>至于为什么需要将标准错误重定向到标准输出的原因，那就归结为标准错误没有缓冲区，而stdout有。<br>这就会导致 &gt;output 2&gt;output 文件output被两次打开，而stdout和stderr将会竞争覆盖，这肯定不是我门想要的.</p>\n<p>这就是为什么有人会写成：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nohup ./command.sh &gt;output 2&gt;output #出错的原因了</div></pre></td></tr></table></figure></p>\n<p>最后谈一下/dev/null文件的作用<br>这是一个无底洞，任何东西都可以定向到这里，但是却无法打开。<br>所以一般很大的stdou和stderr当你不关心的时候可以利用stdout和stderr定向到这里<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">command.sh &gt;/dev/null 2&gt;&amp;1</div></pre></td></tr></table></figure></p>\n<p>来源：<a href=\"http://www.2cto.com/os/201301/185701.html\">linux nohup命令详解</a></p>"},{"title":"ubuntu16的eclipse很卡","date":"2017-03-10T05:51:15.000Z","_content":"背景：在ubuntu桌面系统下，安装的elipse很卡，查看资源占有也不高，查阅资料后才发现这是elipse与ubuntu桌面程序不兼容导致的\n<!-- more -->\n## 解決方法一：\n编辑设置 /usr/share/applications/Eclipse.desktop\n``` shell\nExec=env SWT_GTK3=0 /opt/eclipse/eclipse #这行加入 env SWT_GTK3=0 就可以了\n```\n## 解決方法二：\n在eclipse.ini文件中的 -vmargs 之前添加(一定要换行)\n``` shell\n--launcher.GTK_version\n2\n```\n添加后如下：\n``` shell\nopenFile\n--launcher.appendVmargs\n--launcher.GTK_version\n2\n-vmargs\n-Dosgi.requiredJavaVersion=1.7\n-XX:MaxPermSize=512m\n-Xms512m\n-Xmx2048m\n```\n来源：[https://bugs.launchpad.net/ubuntu/+source/java-common/+bug/1552764](https://bugs.launchpad.net/ubuntu/+source/java-common/+bug/1552764)","source":"_posts/云主机/ubuntu16的eclipse很卡.md","raw":"---\ntitle: ubuntu16的eclipse很卡\ndate: 2017-03-10 13:51:15\ncategories: 云主机\ntags: [Linux,ubuntu,eclipse]\n---\n背景：在ubuntu桌面系统下，安装的elipse很卡，查看资源占有也不高，查阅资料后才发现这是elipse与ubuntu桌面程序不兼容导致的\n<!-- more -->\n## 解決方法一：\n编辑设置 /usr/share/applications/Eclipse.desktop\n``` shell\nExec=env SWT_GTK3=0 /opt/eclipse/eclipse #这行加入 env SWT_GTK3=0 就可以了\n```\n## 解決方法二：\n在eclipse.ini文件中的 -vmargs 之前添加(一定要换行)\n``` shell\n--launcher.GTK_version\n2\n```\n添加后如下：\n``` shell\nopenFile\n--launcher.appendVmargs\n--launcher.GTK_version\n2\n-vmargs\n-Dosgi.requiredJavaVersion=1.7\n-XX:MaxPermSize=512m\n-Xms512m\n-Xmx2048m\n```\n来源：[https://bugs.launchpad.net/ubuntu/+source/java-common/+bug/1552764](https://bugs.launchpad.net/ubuntu/+source/java-common/+bug/1552764)","slug":"云主机/ubuntu16的eclipse很卡","published":1,"updated":"2017-03-12T15:20:12.315Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taagc004tr8syyqdva1za","content":"<p>背景：在ubuntu桌面系统下，安装的elipse很卡，查看资源占有也不高，查阅资料后才发现这是elipse与ubuntu桌面程序不兼容导致的<br><a id=\"more\"></a></p>\n<h2 id=\"解決方法一：\"><a href=\"#解決方法一：\" class=\"headerlink\" title=\"解決方法一：\"></a>解決方法一：</h2><p>编辑设置 /usr/share/applications/Eclipse.desktop<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Exec=env SWT_GTK3=0 /opt/eclipse/eclipse #这行加入 env SWT_GTK3=0 就可以了</div></pre></td></tr></table></figure></p>\n<h2 id=\"解決方法二：\"><a href=\"#解決方法二：\" class=\"headerlink\" title=\"解決方法二：\"></a>解決方法二：</h2><p>在eclipse.ini文件中的 -vmargs 之前添加(一定要换行)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">--launcher.GTK_version</div><div class=\"line\">2</div></pre></td></tr></table></figure></p>\n<p>添加后如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">openFile</div><div class=\"line\">--launcher.appendVmargs</div><div class=\"line\">--launcher.GTK_version</div><div class=\"line\">2</div><div class=\"line\">-vmargs</div><div class=\"line\">-Dosgi.requiredJavaVersion=1.7</div><div class=\"line\">-XX:MaxPermSize=512m</div><div class=\"line\">-Xms512m</div><div class=\"line\">-Xmx2048m</div></pre></td></tr></table></figure></p>\n<p>来源：<a href=\"https://bugs.launchpad.net/ubuntu/+source/java-common/+bug/1552764\" target=\"_blank\" rel=\"external\">https://bugs.launchpad.net/ubuntu/+source/java-common/+bug/1552764</a></p>\n","excerpt":"<p>背景：在ubuntu桌面系统下，安装的elipse很卡，查看资源占有也不高，查阅资料后才发现这是elipse与ubuntu桌面程序不兼容导致的<br></p>","more":"<p></p>\n<h2 id=\"解決方法一：\"><a href=\"#解決方法一：\" class=\"headerlink\" title=\"解決方法一：\"></a>解決方法一：</h2><p>编辑设置 /usr/share/applications/Eclipse.desktop<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Exec=env SWT_GTK3=0 /opt/eclipse/eclipse #这行加入 env SWT_GTK3=0 就可以了</div></pre></td></tr></table></figure></p>\n<h2 id=\"解決方法二：\"><a href=\"#解決方法二：\" class=\"headerlink\" title=\"解決方法二：\"></a>解決方法二：</h2><p>在eclipse.ini文件中的 -vmargs 之前添加(一定要换行)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">--launcher.GTK_version</div><div class=\"line\">2</div></pre></td></tr></table></figure></p>\n<p>添加后如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">openFile</div><div class=\"line\">--launcher.appendVmargs</div><div class=\"line\">--launcher.GTK_version</div><div class=\"line\">2</div><div class=\"line\">-vmargs</div><div class=\"line\">-Dosgi.requiredJavaVersion=1.7</div><div class=\"line\">-XX:MaxPermSize=512m</div><div class=\"line\">-Xms512m</div><div class=\"line\">-Xmx2048m</div></pre></td></tr></table></figure></p>\n<p>来源：<a href=\"https://bugs.launchpad.net/ubuntu/+source/java-common/+bug/1552764\">https://bugs.launchpad.net/ubuntu/+source/java-common/+bug/1552764</a></p>"},{"title":"ubuntu（firefox、chromium）安装flash插件","date":"2017-03-10T06:18:06.000Z","_content":"## firefox\n1、首先到adobe官网下载插件[http://www.adobe.com/cn/downloads.html](http://www.adobe.com/cn/downloads.html)\n2、然后用tar命令解压该文件\n3、打开终端将libflashplayer.so复制到firefox的安装目录\n4、重启firefox，安装成功\n## chromium\n``` shell\nsudo apt-get install pepperflashplugin-nonfree\nsudo update-pepperflashplugin-nonfree --install\n```","source":"_posts/云主机/ubuntu（firefox、chromium）安装flash插件.md","raw":"---\ntitle: ubuntu（firefox、chromium）安装flash插件\ndate: 2017-03-10 14:18:06\ncategories: 云主机\ntags: [Linux,ubuntu,flash]\n---\n## firefox\n1、首先到adobe官网下载插件[http://www.adobe.com/cn/downloads.html](http://www.adobe.com/cn/downloads.html)\n2、然后用tar命令解压该文件\n3、打开终端将libflashplayer.so复制到firefox的安装目录\n4、重启firefox，安装成功\n## chromium\n``` shell\nsudo apt-get install pepperflashplugin-nonfree\nsudo update-pepperflashplugin-nonfree --install\n```","slug":"云主机/ubuntu（firefox、chromium）安装flash插件","published":1,"updated":"2017-03-10T06:26:18.626Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taagd004ur8sywhd79wpu","content":"<h2 id=\"firefox\"><a href=\"#firefox\" class=\"headerlink\" title=\"firefox\"></a>firefox</h2><p>1、首先到adobe官网下载插件<a href=\"http://www.adobe.com/cn/downloads.html\" target=\"_blank\" rel=\"external\">http://www.adobe.com/cn/downloads.html</a><br>2、然后用tar命令解压该文件<br>3、打开终端将libflashplayer.so复制到firefox的安装目录<br>4、重启firefox，安装成功</p>\n<h2 id=\"chromium\"><a href=\"#chromium\" class=\"headerlink\" title=\"chromium\"></a>chromium</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pepperflashplugin-nonfree</div><div class=\"line\">sudo update-pepperflashplugin-nonfree --install</div></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"firefox\"><a href=\"#firefox\" class=\"headerlink\" title=\"firefox\"></a>firefox</h2><p>1、首先到adobe官网下载插件<a href=\"http://www.adobe.com/cn/downloads.html\">http://www.adobe.com/cn/downloads.html</a><br>2、然后用tar命令解压该文件<br>3、打开终端将libflashplayer.so复制到firefox的安装目录<br>4、重启firefox，安装成功</p>\n<h2 id=\"chromium\"><a href=\"#chromium\" class=\"headerlink\" title=\"chromium\"></a>chromium</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install pepperflashplugin-nonfree</div><div class=\"line\">sudo update-pepperflashplugin-nonfree --install</div></pre></td></tr></table></figure>"},{"title":"1 初步摸索python","date":"2017-06-19T02:55:26.000Z","_content":"    如今python越来越火了，我也来玩玩python\n<!-- more -->\n## 首先安装python\n这里就不累赘了，直接百度。我是下载解压包，然后把文件路径添加到path下即可\n## 写个小demo运行\n- 新建文件，后缀为.py,内容如下\n``` python\nprint('Hello Python')\nprint('大家好，我叫小仙女')\n```\n- 运行如下\n![logo](Q.png)\n## 没错用命令行运行有点累，我用sublime编辑器，可以用ctrl+B快捷键运行；或者用PyCharm这个工具\n- 我用sublime运行就报[Decode error - output not utf-8]这个错误，解决如下：打开Python.sublime-build文件,并添加\"encoding\":\"cp936\"这一行,保存即可,[解决方案来源](http://blog.csdn.net/wanzhuan2010/article/details/19168709)\n- 运行截图\n![logo](57G3PTFC9YBV`2CH9A.png)\n\n","source":"_posts/python/1-初步摸索python.md","raw":"---\ntitle: 1 初步摸索python\ndate: 2017-06-19 10:55:26\ncategory: python\ntags: python\n---\n    如今python越来越火了，我也来玩玩python\n<!-- more -->\n## 首先安装python\n这里就不累赘了，直接百度。我是下载解压包，然后把文件路径添加到path下即可\n## 写个小demo运行\n- 新建文件，后缀为.py,内容如下\n``` python\nprint('Hello Python')\nprint('大家好，我叫小仙女')\n```\n- 运行如下\n![logo](Q.png)\n## 没错用命令行运行有点累，我用sublime编辑器，可以用ctrl+B快捷键运行；或者用PyCharm这个工具\n- 我用sublime运行就报[Decode error - output not utf-8]这个错误，解决如下：打开Python.sublime-build文件,并添加\"encoding\":\"cp936\"这一行,保存即可,[解决方案来源](http://blog.csdn.net/wanzhuan2010/article/details/19168709)\n- 运行截图\n![logo](57G3PTFC9YBV`2CH9A.png)\n\n","slug":"python/1-初步摸索python","published":1,"updated":"2017-06-19T03:17:39.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taagf004zr8syvbyzkr9n","content":"<pre><code>如今python越来越火了，我也来玩玩python\n</code></pre><a id=\"more\"></a>\n<h2 id=\"首先安装python\"><a href=\"#首先安装python\" class=\"headerlink\" title=\"首先安装python\"></a>首先安装python</h2><p>这里就不累赘了，直接百度。我是下载解压包，然后把文件路径添加到path下即可</p>\n<h2 id=\"写个小demo运行\"><a href=\"#写个小demo运行\" class=\"headerlink\" title=\"写个小demo运行\"></a>写个小demo运行</h2><ul>\n<li><p>新建文件，后缀为.py,内容如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">print(<span class=\"string\">'Hello Python'</span>)</div><div class=\"line\">print(<span class=\"string\">'大家好，我叫小仙女'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p>运行如下<br><img src=\"/2017/06/19/python/1-初步摸索python/Q.png\" alt=\"logo\"></p>\n<h2 id=\"没错用命令行运行有点累，我用sublime编辑器，可以用ctrl-B快捷键运行；或者用PyCharm这个工具\"><a href=\"#没错用命令行运行有点累，我用sublime编辑器，可以用ctrl-B快捷键运行；或者用PyCharm这个工具\" class=\"headerlink\" title=\"没错用命令行运行有点累，我用sublime编辑器，可以用ctrl+B快捷键运行；或者用PyCharm这个工具\"></a>没错用命令行运行有点累，我用sublime编辑器，可以用ctrl+B快捷键运行；或者用PyCharm这个工具</h2></li>\n<li>我用sublime运行就报[Decode error - output not utf-8]这个错误，解决如下：打开Python.sublime-build文件,并添加”encoding”:”cp936”这一行,保存即可,<a href=\"http://blog.csdn.net/wanzhuan2010/article/details/19168709\" target=\"_blank\" rel=\"external\">解决方案来源</a></li>\n<li>运行截图<br><img src=\"/2017/06/19/python/1-初步摸索python/57G3PTFC9YBV`2CH9A.png\" alt=\"logo\"></li>\n</ul>\n","excerpt":"<pre><code>如今python越来越火了，我也来玩玩python\n</code></pre>","more":"<h2 id=\"首先安装python\"><a href=\"#首先安装python\" class=\"headerlink\" title=\"首先安装python\"></a>首先安装python</h2><p>这里就不累赘了，直接百度。我是下载解压包，然后把文件路径添加到path下即可</p>\n<h2 id=\"写个小demo运行\"><a href=\"#写个小demo运行\" class=\"headerlink\" title=\"写个小demo运行\"></a>写个小demo运行</h2><ul>\n<li><p>新建文件，后缀为.py,内容如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">print(<span class=\"string\">'Hello Python'</span>)</div><div class=\"line\">print(<span class=\"string\">'大家好，我叫小仙女'</span>)</div></pre></td></tr></table></figure>\n</li>\n<li><p>运行如下<br><img src=\"/2017/06/19/python/1-初步摸索python/Q.png\" alt=\"logo\"></p>\n<h2 id=\"没错用命令行运行有点累，我用sublime编辑器，可以用ctrl-B快捷键运行；或者用PyCharm这个工具\"><a href=\"#没错用命令行运行有点累，我用sublime编辑器，可以用ctrl-B快捷键运行；或者用PyCharm这个工具\" class=\"headerlink\" title=\"没错用命令行运行有点累，我用sublime编辑器，可以用ctrl+B快捷键运行；或者用PyCharm这个工具\"></a>没错用命令行运行有点累，我用sublime编辑器，可以用ctrl+B快捷键运行；或者用PyCharm这个工具</h2></li>\n<li>我用sublime运行就报[Decode error - output not utf-8]这个错误，解决如下：打开Python.sublime-build文件,并添加”encoding”:”cp936”这一行,保存即可,<a href=\"http://blog.csdn.net/wanzhuan2010/article/details/19168709\">解决方案来源</a></li>\n<li>运行截图<br><img src=\"/2017/06/19/python/1-初步摸索python/57G3PTFC9YBV`2CH9A.png\" alt=\"logo\"></li>\n</ul>"},{"title":"启动脚本和启动图标","date":"2017-03-10T05:35:30.000Z","_content":"背景:在linux系统下，有些程序为解压后运行的，为了方便使用，类似在win系统添加一个程序快捷方式\n<!-- more -->\n## eg .eclipse为例\n### 启动脚本\n在 /usr/local/bin/新建一个 eclipse文件，并且赋予执行权限 chomd a+x eclipse,内容如下\n``` shell\necho 'go eclipse home...'\ncd /usr/java/eclipse\necho 'start eclipse...'\nnohup ./eclipse > /dev/null 2>&1 &\nexit 0\n```\n### 启动图标\n在 /usr/share/applications/ 新建一个文件Eclipse.desktop，输入内容如下\n``` shell\n[Desktop Entry]\nEncoding=UTF-8\nName=Eclipse\nComment=A Java Development Tool\nExec=/usr/local/bin/eclipse #这里是eclipse的启动脚本，也可以为程序的入口\nTerminal=false\nType=Application\nIcon=/usr/java/eclipse/icon.xpm\nMimeType=\nCategories=GTK;Java;Development;\n```","source":"_posts/云主机/启动脚本和启动图标.md","raw":"---\ntitle: 启动脚本和启动图标\ndate: 2017-03-10 13:35:30\ncategories: 云主机\ntags: [Linux,ubuntu,eclipse,快捷方式]\n---\n背景:在linux系统下，有些程序为解压后运行的，为了方便使用，类似在win系统添加一个程序快捷方式\n<!-- more -->\n## eg .eclipse为例\n### 启动脚本\n在 /usr/local/bin/新建一个 eclipse文件，并且赋予执行权限 chomd a+x eclipse,内容如下\n``` shell\necho 'go eclipse home...'\ncd /usr/java/eclipse\necho 'start eclipse...'\nnohup ./eclipse > /dev/null 2>&1 &\nexit 0\n```\n### 启动图标\n在 /usr/share/applications/ 新建一个文件Eclipse.desktop，输入内容如下\n``` shell\n[Desktop Entry]\nEncoding=UTF-8\nName=Eclipse\nComment=A Java Development Tool\nExec=/usr/local/bin/eclipse #这里是eclipse的启动脚本，也可以为程序的入口\nTerminal=false\nType=Application\nIcon=/usr/java/eclipse/icon.xpm\nMimeType=\nCategories=GTK;Java;Development;\n```","slug":"云主机/启动脚本和启动图标","published":1,"updated":"2017-03-12T15:20:42.917Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taagg0050r8syimn19y6c","content":"<p>背景:在linux系统下，有些程序为解压后运行的，为了方便使用，类似在win系统添加一个程序快捷方式<br><a id=\"more\"></a></p>\n<h2 id=\"eg-eclipse为例\"><a href=\"#eg-eclipse为例\" class=\"headerlink\" title=\"eg .eclipse为例\"></a>eg .eclipse为例</h2><h3 id=\"启动脚本\"><a href=\"#启动脚本\" class=\"headerlink\" title=\"启动脚本\"></a>启动脚本</h3><p>在 /usr/local/bin/新建一个 eclipse文件，并且赋予执行权限 chomd a+x eclipse,内容如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo &apos;go eclipse home...&apos;</div><div class=\"line\">cd /usr/java/eclipse</div><div class=\"line\">echo &apos;start eclipse...&apos;</div><div class=\"line\">nohup ./eclipse &gt; /dev/null 2&gt;&amp;1 &amp;</div><div class=\"line\">exit 0</div></pre></td></tr></table></figure></p>\n<h3 id=\"启动图标\"><a href=\"#启动图标\" class=\"headerlink\" title=\"启动图标\"></a>启动图标</h3><p>在 /usr/share/applications/ 新建一个文件Eclipse.desktop，输入内容如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">[Desktop Entry]</div><div class=\"line\">Encoding=UTF-8</div><div class=\"line\">Name=Eclipse</div><div class=\"line\">Comment=A Java Development Tool</div><div class=\"line\">Exec=/usr/local/bin/eclipse #这里是eclipse的启动脚本，也可以为程序的入口</div><div class=\"line\">Terminal=false</div><div class=\"line\">Type=Application</div><div class=\"line\">Icon=/usr/java/eclipse/icon.xpm</div><div class=\"line\">MimeType=</div><div class=\"line\">Categories=GTK;Java;Development;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>背景:在linux系统下，有些程序为解压后运行的，为了方便使用，类似在win系统添加一个程序快捷方式<br></p>","more":"<p></p>\n<h2 id=\"eg-eclipse为例\"><a href=\"#eg-eclipse为例\" class=\"headerlink\" title=\"eg .eclipse为例\"></a>eg .eclipse为例</h2><h3 id=\"启动脚本\"><a href=\"#启动脚本\" class=\"headerlink\" title=\"启动脚本\"></a>启动脚本</h3><p>在 /usr/local/bin/新建一个 eclipse文件，并且赋予执行权限 chomd a+x eclipse,内容如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo &apos;go eclipse home...&apos;</div><div class=\"line\">cd /usr/java/eclipse</div><div class=\"line\">echo &apos;start eclipse...&apos;</div><div class=\"line\">nohup ./eclipse &gt; /dev/null 2&gt;&amp;1 &amp;</div><div class=\"line\">exit 0</div></pre></td></tr></table></figure></p>\n<h3 id=\"启动图标\"><a href=\"#启动图标\" class=\"headerlink\" title=\"启动图标\"></a>启动图标</h3><p>在 /usr/share/applications/ 新建一个文件Eclipse.desktop，输入内容如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">[Desktop Entry]</div><div class=\"line\">Encoding=UTF-8</div><div class=\"line\">Name=Eclipse</div><div class=\"line\">Comment=A Java Development Tool</div><div class=\"line\">Exec=/usr/local/bin/eclipse #这里是eclipse的启动脚本，也可以为程序的入口</div><div class=\"line\">Terminal=false</div><div class=\"line\">Type=Application</div><div class=\"line\">Icon=/usr/java/eclipse/icon.xpm</div><div class=\"line\">MimeType=</div><div class=\"line\">Categories=GTK;Java;Development;</div></pre></td></tr></table></figure></p>"},{"title":"2 Python基础语法","date":"2017-06-19T03:51:25.000Z","_content":"## Python 标识符\n在 Python 里，标识符有字母、数字、下划线组成。\n在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。\nPython 中的标识符是区分大小写的。\n以下划线开头的标识符是有特殊意义的。以单下划线开头 _foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入；\n以双下划线开头的 __foo 代表类的私有成员；以双下划线开头和结尾的 __foo__ 代表 Python 里特殊方法专用的标识，如 __init__() 代表类的构造函数。\nPython 可以同一行显示多条语句，方法是用分号 ; 分开\n## Python 保留字符\n###### 下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有 Python 的关键字只包含小写字母。\n|   |   |   |\n|:--------:|:--------:|:------:|\n|and|exec|not|\n|assert|finally|or|\n|break|for|pass|\n|class|from|print|\n|continue|global|raise|\n|def|if|return|\n|del|import|try|\n|elif|in|while|\n|else|is|with|\n|except|lambda|yield|\n## 行和缩进\n学习 Python 与其他语言最大的区别就是，Python 的代码块不使用大括号 {} 来控制类，函数以及其他逻辑判断。python 最具特色的就是用缩进来写模块。\n缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。\n\n\n\n\n","source":"_posts/python/2-Python基础语法.md","raw":"---\ntitle: 2 Python基础语法\ndate: 2017-06-19 11:51:25\ncategory: python\ntags: [python,语法]\n---\n## Python 标识符\n在 Python 里，标识符有字母、数字、下划线组成。\n在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。\nPython 中的标识符是区分大小写的。\n以下划线开头的标识符是有特殊意义的。以单下划线开头 _foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入；\n以双下划线开头的 __foo 代表类的私有成员；以双下划线开头和结尾的 __foo__ 代表 Python 里特殊方法专用的标识，如 __init__() 代表类的构造函数。\nPython 可以同一行显示多条语句，方法是用分号 ; 分开\n## Python 保留字符\n###### 下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有 Python 的关键字只包含小写字母。\n|   |   |   |\n|:--------:|:--------:|:------:|\n|and|exec|not|\n|assert|finally|or|\n|break|for|pass|\n|class|from|print|\n|continue|global|raise|\n|def|if|return|\n|del|import|try|\n|elif|in|while|\n|else|is|with|\n|except|lambda|yield|\n## 行和缩进\n学习 Python 与其他语言最大的区别就是，Python 的代码块不使用大括号 {} 来控制类，函数以及其他逻辑判断。python 最具特色的就是用缩进来写模块。\n缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。\n\n\n\n\n","slug":"python/2-Python基础语法","published":1,"updated":"2017-06-19T07:18:53.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taagi0055r8sy0gb4jsvf","content":"<h2 id=\"Python-标识符\"><a href=\"#Python-标识符\" class=\"headerlink\" title=\"Python 标识符\"></a>Python 标识符</h2><p>在 Python 里，标识符有字母、数字、下划线组成。<br>在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。<br>Python 中的标识符是区分大小写的。<br>以下划线开头的标识符是有特殊意义的。以单下划线开头 _foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入；<br>以双下划线开头的 <strong>foo 代表类的私有成员；以双下划线开头和结尾的 </strong>foo<strong> 代表 Python 里特殊方法专用的标识，如 </strong>init__() 代表类的构造函数。<br>Python 可以同一行显示多条语句，方法是用分号 ; 分开</p>\n<h2 id=\"Python-保留字符\"><a href=\"#Python-保留字符\" class=\"headerlink\" title=\"Python 保留字符\"></a>Python 保留字符</h2><h6 id=\"下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有-Python-的关键字只包含小写字母。\"><a href=\"#下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有-Python-的关键字只包含小写字母。\" class=\"headerlink\" title=\"下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有 Python 的关键字只包含小写字母。\"></a>下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有 Python 的关键字只包含小写字母。</h6><table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">and</td>\n<td style=\"text-align:center\">exec</td>\n<td style=\"text-align:center\">not</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">assert</td>\n<td style=\"text-align:center\">finally</td>\n<td style=\"text-align:center\">or</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">break</td>\n<td style=\"text-align:center\">for</td>\n<td style=\"text-align:center\">pass</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">class</td>\n<td style=\"text-align:center\">from</td>\n<td style=\"text-align:center\">print</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">continue</td>\n<td style=\"text-align:center\">global</td>\n<td style=\"text-align:center\">raise</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">def</td>\n<td style=\"text-align:center\">if</td>\n<td style=\"text-align:center\">return</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">del</td>\n<td style=\"text-align:center\">import</td>\n<td style=\"text-align:center\">try</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">elif</td>\n<td style=\"text-align:center\">in</td>\n<td style=\"text-align:center\">while</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">else</td>\n<td style=\"text-align:center\">is</td>\n<td style=\"text-align:center\">with</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">except</td>\n<td style=\"text-align:center\">lambda</td>\n<td style=\"text-align:center\">yield</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"行和缩进\"><a href=\"#行和缩进\" class=\"headerlink\" title=\"行和缩进\"></a>行和缩进</h2><p>学习 Python 与其他语言最大的区别就是，Python 的代码块不使用大括号 {} 来控制类，函数以及其他逻辑判断。python 最具特色的就是用缩进来写模块。<br>缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。</p>\n","excerpt":"","more":"<h2 id=\"Python-标识符\"><a href=\"#Python-标识符\" class=\"headerlink\" title=\"Python 标识符\"></a>Python 标识符</h2><p>在 Python 里，标识符有字母、数字、下划线组成。<br>在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。<br>Python 中的标识符是区分大小写的。<br>以下划线开头的标识符是有特殊意义的。以单下划线开头 _foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入；<br>以双下划线开头的 <strong>foo 代表类的私有成员；以双下划线开头和结尾的 </strong>foo<strong> 代表 Python 里特殊方法专用的标识，如 </strong>init__() 代表类的构造函数。<br>Python 可以同一行显示多条语句，方法是用分号 ; 分开</p>\n<h2 id=\"Python-保留字符\"><a href=\"#Python-保留字符\" class=\"headerlink\" title=\"Python 保留字符\"></a>Python 保留字符</h2><h6 id=\"下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有-Python-的关键字只包含小写字母。\"><a href=\"#下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有-Python-的关键字只包含小写字母。\" class=\"headerlink\" title=\"下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有 Python 的关键字只包含小写字母。\"></a>下面的列表显示了在Python中的保留字。这些保留字不能用作常数或变数，或任何其他标识符名称。所有 Python 的关键字只包含小写字母。</h6><table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">and</td>\n<td style=\"text-align:center\">exec</td>\n<td style=\"text-align:center\">not</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">assert</td>\n<td style=\"text-align:center\">finally</td>\n<td style=\"text-align:center\">or</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">break</td>\n<td style=\"text-align:center\">for</td>\n<td style=\"text-align:center\">pass</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">class</td>\n<td style=\"text-align:center\">from</td>\n<td style=\"text-align:center\">print</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">continue</td>\n<td style=\"text-align:center\">global</td>\n<td style=\"text-align:center\">raise</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">def</td>\n<td style=\"text-align:center\">if</td>\n<td style=\"text-align:center\">return</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">del</td>\n<td style=\"text-align:center\">import</td>\n<td style=\"text-align:center\">try</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">elif</td>\n<td style=\"text-align:center\">in</td>\n<td style=\"text-align:center\">while</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">else</td>\n<td style=\"text-align:center\">is</td>\n<td style=\"text-align:center\">with</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">except</td>\n<td style=\"text-align:center\">lambda</td>\n<td style=\"text-align:center\">yield</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"行和缩进\"><a href=\"#行和缩进\" class=\"headerlink\" title=\"行和缩进\"></a>行和缩进</h2><p>学习 Python 与其他语言最大的区别就是，Python 的代码块不使用大括号 {} 来控制类，函数以及其他逻辑判断。python 最具特色的就是用缩进来写模块。<br>缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。</p>\n"},{"title":"js端RSA加密，后台javaRSA解密","date":"2017-03-19T14:30:22.000Z","_content":"　　利用RSA实现前后台RSA加解密\n## 下载 security.js\n## js端调用示例代码\n```javascript\nRSAUtils.setMaxDigits(1024);\nvar k = new RSAUtils.getKeyPair(\"10001\", \"\", _keyPair);\npwd = RSAUtils.encryptedString(k, pwd);\nconsole.log(pwd);\n```\n## 服务器端解密示例\n```java\n\tprivate String decryptForJs(String str) {\n\t\ttry {\n\t\t\tString pwd;\n\t\t\tString result = str;\n\t\t\tbyte[] en_result = hexStringToBytes(result);\n\t\t\tbyte[] de_result = null;\n\t\t\ttry {\n\t\t\t\tde_result = RSAUtil.decrypt(RSAUtil.getKeyPair().getPrivate(), en_result);\n\t\t\t} catch (Exception e) {\n\t\t\t\tlog.error(\"解密js加密的密文发生异常{}\", e);\n\t\t\t}\n\t\t\tStringBuffer sb = new StringBuffer();\n\t\t\tsb.append(new String(de_result));\n\t\t\tpwd = sb.reverse().toString();\n\t\t\tpwd = URLDecoder.decode(pwd, \"UTF-8\");//\n\t\t\treturn pwd;\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"解密后加密发生异常{}\", e);\n\t\t}\n\t\treturn null;\n\t}\n\tpublic static byte[] hexStringToBytes(String hexString) {\n\t\tif (hexString == null || hexString.equals(\"\")) {\n\t\t\treturn null;\n\t\t}\n\t\thexString = hexString.toUpperCase();\n\t\tint length = hexString.length() / 2;\n\t\tchar[] hexChars = hexString.toCharArray();\n\t\tbyte[] d = new byte[length];\n\t\tfor (int i = 0; i < length; i++) {\n\t\t\tint pos = i * 2;\n\t\t\td[i] = (byte) (charToByte(hexChars[pos]) << 4 | charToByte(hexChars[pos + 1]));\n\t\t}\n\t\treturn d;\n\t}\n\tprivate static byte charToByte(char c) {\n\t\treturn (byte) \"0123456789ABCDEF\".indexOf(c);\n\t}\n```\nRSAUtil  工具类代码如下：\n```java\npackage com.zf.pro.core.web.util;\n/**\n *\n */\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.UnsupportedEncodingException;\nimport java.math.BigInteger;\nimport java.security.KeyFactory;\nimport java.security.KeyPair;\nimport java.security.KeyPairGenerator;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.PrivateKey;\nimport java.security.PublicKey;\nimport java.security.SecureRandom;\nimport java.security.interfaces.RSAPrivateKey;\nimport java.security.interfaces.RSAPublicKey;\nimport java.security.spec.InvalidKeySpecException;\nimport java.security.spec.RSAPrivateKeySpec;\nimport java.security.spec.RSAPublicKeySpec;\nimport javax.crypto.Cipher;\nimport com.zf.pro.core.constant.SysParam;\n/**\n * RSA 工具类。提供加密，解密，生成密钥对等方法。\n * 需要到http://www.bouncycastle.org下载bcprov-jdk14-123.jar。\n *\n */\npublic class RSAUtil {\n\t/**\n\t * * 生成密钥对 *\n\t *\n\t * @return KeyPair *\n\t * @throws EncryptException\n\t */\n\tpublic static KeyPair generateKeyPair() throws Exception {\n\t\ttry {\n\t\t\tKeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\",\n\t\t\t\t\tnew org.bouncycastle.jce.provider.BouncyCastleProvider());\n\t\t\tfinal int KEY_SIZE = 1024;// 没什么好说的了，这个值关系到块加密的大小，可以更改，但是不要太大，否则效率会低\n\t\t\tkeyPairGen.initialize(KEY_SIZE, new SecureRandom());\n\t\t\tKeyPair keyPair = keyPairGen.generateKeyPair();\n\n//\t\t\tSystem.out.println(keyPair.getPrivate());\n\t\t\tSystem.out.println(keyPair.getPublic());\n\n\t\t\tsaveKeyPair(keyPair);\n\t\t\treturn keyPair;\n\t\t} catch (Exception e) {\n\t\t\tthrow new Exception(e.getMessage());\n\t\t}\n\t}\n\tpublic static KeyPair getKeyPair() throws Exception {\n\t\tFileInputStream fis = new FileInputStream(SysParam.RSA_KEYSTORE);\n\t\tObjectInputStream oos = new ObjectInputStream(fis);\n\t\tKeyPair kp = (KeyPair) oos.readObject();\n\t\toos.close();\n\t\tfis.close();\n\t\treturn kp;\n\t}\n\tpublic static void saveKeyPair(KeyPair kp) throws Exception {\n\t\tFileOutputStream fos = new FileOutputStream(new File(SysParam.RSA_KEYSTORE));\n\t\tObjectOutputStream oos = new ObjectOutputStream(fos);\n\t\t// 生成密钥\n\t\toos.writeObject(kp);\n\t\toos.close();\n\t\tfos.close();\n\t}\n\t/**\n\t * * 生成公钥 *\n\t *\n\t * @param modulus *\n\t * @param publicExponent *\n\t * @return RSAPublicKey *\n\t * @throws Exception\n\t */\n\tpublic static RSAPublicKey generateRSAPublicKey(byte[] modulus,\n\t\t\tbyte[] publicExponent) throws Exception {\n\t\tKeyFactory keyFac = null;\n\t\ttry {\n\t\t\tkeyFac = KeyFactory.getInstance(\"RSA\",\n\t\t\t\t\tnew org.bouncycastle.jce.provider.BouncyCastleProvider());\n\t\t} catch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new Exception(ex.getMessage());\n\t\t}\n\t\tRSAPublicKeySpec pubKeySpec = new RSAPublicKeySpec(new BigInteger(\n\t\t\t\tmodulus), new BigInteger(publicExponent));\n\t\ttry {\n\t\t\treturn (RSAPublicKey) keyFac.generatePublic(pubKeySpec);\n\t\t} catch (InvalidKeySpecException ex) {\n\t\t\tthrow new Exception(ex.getMessage());\n\t\t}\n\t}\n\t/**\n\t * * 生成私钥 *\n\t *\n\t * @param modulus *\n\t * @param privateExponent *\n\t * @return RSAPrivateKey *\n\t * @throws Exception\n\t */\n\tpublic static RSAPrivateKey generateRSAPrivateKey(byte[] modulus,\n\t\t\tbyte[] privateExponent) throws Exception {\n\t\tKeyFactory keyFac = null;\n\t\ttry {\n\t\t\tkeyFac = KeyFactory.getInstance(\"RSA\",\n\t\t\t\t\tnew org.bouncycastle.jce.provider.BouncyCastleProvider());\n\t\t} catch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new Exception(ex.getMessage());\n\t\t}\n\t\tRSAPrivateKeySpec priKeySpec = new RSAPrivateKeySpec(new BigInteger(\n\t\t\t\tmodulus), new BigInteger(privateExponent));\n\t\ttry {\n\t\t\treturn (RSAPrivateKey) keyFac.generatePrivate(priKeySpec);\n\t\t} catch (InvalidKeySpecException ex) {\n\t\t\tthrow new Exception(ex.getMessage());\n\t\t}\n\t}\n\t/**\n\t * * 加密 *\n\t *\n\t * @param key\n\t *            加密的密钥 *\n\t * @param data\n\t *            待加密的明文数据 *\n\t * @return 加密后的数据 *\n\t * @throws Exception\n\t */\n\tpublic static byte[] encrypt(PublicKey pk, byte[] data) throws Exception {\n\t\ttry {\n\t\t\tCipher cipher = Cipher.getInstance(\"RSA\",\n\t\t\t\t\tnew org.bouncycastle.jce.provider.BouncyCastleProvider());\n\t\t\tcipher.init(Cipher.ENCRYPT_MODE, pk);\n\t\t\tint blockSize = cipher.getBlockSize();// 获得加密块大小，如：加密前数据为128个byte，而key_size=1024\n\t\t\t// 加密块大小为127\n\t\t\t// byte,加密后为128个byte;因此共有2个加密块，第一个127\n\t\t\t// byte第二个为1个byte\n\t\t\tint outputSize = cipher.getOutputSize(data.length);// 获得加密块加密后块大小\n\t\t\tint leavedSize = data.length % blockSize;\n\t\t\tint blocksSize = leavedSize != 0 ? data.length / blockSize + 1\n\t\t\t\t\t: data.length / blockSize;\n\t\t\tbyte[] raw = new byte[outputSize * blocksSize];\n\t\t\tint i = 0;\n\t\t\twhile (data.length - i * blockSize > 0) {\n\t\t\t\tif (data.length - i * blockSize > blockSize)\n\t\t\t\t\tcipher.doFinal(data, i * blockSize, blockSize, raw, i\n\t\t\t\t\t\t\t* outputSize);\n\t\t\t\telse\n\t\t\t\t\tcipher.doFinal(data, i * blockSize, data.length - i\n\t\t\t\t\t\t\t* blockSize, raw, i * outputSize);\n\t\t\t\t// 这里面doUpdate方法不可用，查看源代码后发现每次doUpdate后并没有什么实际动作除了把byte[]放到\n\t\t\t\t// ByteArrayOutputStream中，而最后doFinal的时候才将所有的byte[]进行加密，可是到了此时加密块大小很可能已经超出了\n\t\t\t\t// OutputSize所以只好用dofinal方法。\n\t\t\t\ti++;\n\t\t\t}\n\t\t\treturn raw;\n\t\t} catch (Exception e) {\n\t\t\tthrow new Exception(e.getMessage());\n\t\t}\n\t}\n\t/**\n\t * * 解密 *\n\t *\n\t * @param key\n\t *            解密的密钥 *\n\t * @param raw\n\t *            已经加密的数据 *\n\t * @return 解密后的明文 *\n\t * @throws Exception\n\t */\n\tpublic static byte[] decrypt(PrivateKey pk, byte[] raw) throws Exception {\n\t\ttry {\n\t\t\tCipher cipher = Cipher.getInstance(\"RSA\",\n\t\t\t\t\tnew org.bouncycastle.jce.provider.BouncyCastleProvider());\n\t\t\tcipher.init(cipher.DECRYPT_MODE, pk);\n\t\t\tint blockSize = cipher.getBlockSize();\n\t\t\tByteArrayOutputStream bout = new ByteArrayOutputStream(64);\n\t\t\tint j = 0;\n\t\t\twhile (raw.length - j * blockSize > 0) {\n\t\t\t\tbout.write(cipher.doFinal(raw, j * blockSize, blockSize));\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn bout.toByteArray();\n\t\t} catch (Exception e) {\n\t\t\tthrow new Exception(e.getMessage());\n\t\t}\n\t}\n\n\tpublic static String encryptStr(String str){\n\t\ttry {\n\t\t\tbyte[] encrypt = encrypt(getKeyPair().getPublic(), str.getBytes());\n\t\t\treturn new String(encrypt,\"UTF-8\");\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn null;\n\t}\n\n\n\tpublic static String decryptStr(String str) {\n\t\ttry {\n\t\t\tbyte[] decrypt = decrypt(getKeyPair().getPrivate(), str.getBytes());\n\t\t\treturn new String(decrypt);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * * *\n\t *\n\t * @param args *\n\t * @throws Exception\n\t */\n\tpublic static void main(String[] args) throws Exception {\n//\t\tRSAPublicKey rsap = (RSAPublicKey) RSAUtil.generateKeyPair().getPublic();\n\t\tString test = \"hello \"\n\t\t\t\t+ \"我\";\n\t\tbyte[] en_test = encrypt(getKeyPair().getPublic(), test.getBytes());\n\t\tbyte[] de_test = decrypt(getKeyPair().getPrivate(), en_test);\n\t\tSystem.out.println(new String(de_test));\n\t}\n}\n```\n\n\n\n","source":"_posts/加密与解密/js端RSA加密，后台javaRSA解密.md","raw":"---\ntitle: js端RSA加密，后台javaRSA解密\ndate: 2017-03-19 22:30:22\ncategory: 加密与解密\ntags: [RSA,js]\n---\n　　利用RSA实现前后台RSA加解密\n## 下载 security.js\n## js端调用示例代码\n```javascript\nRSAUtils.setMaxDigits(1024);\nvar k = new RSAUtils.getKeyPair(\"10001\", \"\", _keyPair);\npwd = RSAUtils.encryptedString(k, pwd);\nconsole.log(pwd);\n```\n## 服务器端解密示例\n```java\n\tprivate String decryptForJs(String str) {\n\t\ttry {\n\t\t\tString pwd;\n\t\t\tString result = str;\n\t\t\tbyte[] en_result = hexStringToBytes(result);\n\t\t\tbyte[] de_result = null;\n\t\t\ttry {\n\t\t\t\tde_result = RSAUtil.decrypt(RSAUtil.getKeyPair().getPrivate(), en_result);\n\t\t\t} catch (Exception e) {\n\t\t\t\tlog.error(\"解密js加密的密文发生异常{}\", e);\n\t\t\t}\n\t\t\tStringBuffer sb = new StringBuffer();\n\t\t\tsb.append(new String(de_result));\n\t\t\tpwd = sb.reverse().toString();\n\t\t\tpwd = URLDecoder.decode(pwd, \"UTF-8\");//\n\t\t\treturn pwd;\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"解密后加密发生异常{}\", e);\n\t\t}\n\t\treturn null;\n\t}\n\tpublic static byte[] hexStringToBytes(String hexString) {\n\t\tif (hexString == null || hexString.equals(\"\")) {\n\t\t\treturn null;\n\t\t}\n\t\thexString = hexString.toUpperCase();\n\t\tint length = hexString.length() / 2;\n\t\tchar[] hexChars = hexString.toCharArray();\n\t\tbyte[] d = new byte[length];\n\t\tfor (int i = 0; i < length; i++) {\n\t\t\tint pos = i * 2;\n\t\t\td[i] = (byte) (charToByte(hexChars[pos]) << 4 | charToByte(hexChars[pos + 1]));\n\t\t}\n\t\treturn d;\n\t}\n\tprivate static byte charToByte(char c) {\n\t\treturn (byte) \"0123456789ABCDEF\".indexOf(c);\n\t}\n```\nRSAUtil  工具类代码如下：\n```java\npackage com.zf.pro.core.web.util;\n/**\n *\n */\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.io.UnsupportedEncodingException;\nimport java.math.BigInteger;\nimport java.security.KeyFactory;\nimport java.security.KeyPair;\nimport java.security.KeyPairGenerator;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.PrivateKey;\nimport java.security.PublicKey;\nimport java.security.SecureRandom;\nimport java.security.interfaces.RSAPrivateKey;\nimport java.security.interfaces.RSAPublicKey;\nimport java.security.spec.InvalidKeySpecException;\nimport java.security.spec.RSAPrivateKeySpec;\nimport java.security.spec.RSAPublicKeySpec;\nimport javax.crypto.Cipher;\nimport com.zf.pro.core.constant.SysParam;\n/**\n * RSA 工具类。提供加密，解密，生成密钥对等方法。\n * 需要到http://www.bouncycastle.org下载bcprov-jdk14-123.jar。\n *\n */\npublic class RSAUtil {\n\t/**\n\t * * 生成密钥对 *\n\t *\n\t * @return KeyPair *\n\t * @throws EncryptException\n\t */\n\tpublic static KeyPair generateKeyPair() throws Exception {\n\t\ttry {\n\t\t\tKeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\",\n\t\t\t\t\tnew org.bouncycastle.jce.provider.BouncyCastleProvider());\n\t\t\tfinal int KEY_SIZE = 1024;// 没什么好说的了，这个值关系到块加密的大小，可以更改，但是不要太大，否则效率会低\n\t\t\tkeyPairGen.initialize(KEY_SIZE, new SecureRandom());\n\t\t\tKeyPair keyPair = keyPairGen.generateKeyPair();\n\n//\t\t\tSystem.out.println(keyPair.getPrivate());\n\t\t\tSystem.out.println(keyPair.getPublic());\n\n\t\t\tsaveKeyPair(keyPair);\n\t\t\treturn keyPair;\n\t\t} catch (Exception e) {\n\t\t\tthrow new Exception(e.getMessage());\n\t\t}\n\t}\n\tpublic static KeyPair getKeyPair() throws Exception {\n\t\tFileInputStream fis = new FileInputStream(SysParam.RSA_KEYSTORE);\n\t\tObjectInputStream oos = new ObjectInputStream(fis);\n\t\tKeyPair kp = (KeyPair) oos.readObject();\n\t\toos.close();\n\t\tfis.close();\n\t\treturn kp;\n\t}\n\tpublic static void saveKeyPair(KeyPair kp) throws Exception {\n\t\tFileOutputStream fos = new FileOutputStream(new File(SysParam.RSA_KEYSTORE));\n\t\tObjectOutputStream oos = new ObjectOutputStream(fos);\n\t\t// 生成密钥\n\t\toos.writeObject(kp);\n\t\toos.close();\n\t\tfos.close();\n\t}\n\t/**\n\t * * 生成公钥 *\n\t *\n\t * @param modulus *\n\t * @param publicExponent *\n\t * @return RSAPublicKey *\n\t * @throws Exception\n\t */\n\tpublic static RSAPublicKey generateRSAPublicKey(byte[] modulus,\n\t\t\tbyte[] publicExponent) throws Exception {\n\t\tKeyFactory keyFac = null;\n\t\ttry {\n\t\t\tkeyFac = KeyFactory.getInstance(\"RSA\",\n\t\t\t\t\tnew org.bouncycastle.jce.provider.BouncyCastleProvider());\n\t\t} catch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new Exception(ex.getMessage());\n\t\t}\n\t\tRSAPublicKeySpec pubKeySpec = new RSAPublicKeySpec(new BigInteger(\n\t\t\t\tmodulus), new BigInteger(publicExponent));\n\t\ttry {\n\t\t\treturn (RSAPublicKey) keyFac.generatePublic(pubKeySpec);\n\t\t} catch (InvalidKeySpecException ex) {\n\t\t\tthrow new Exception(ex.getMessage());\n\t\t}\n\t}\n\t/**\n\t * * 生成私钥 *\n\t *\n\t * @param modulus *\n\t * @param privateExponent *\n\t * @return RSAPrivateKey *\n\t * @throws Exception\n\t */\n\tpublic static RSAPrivateKey generateRSAPrivateKey(byte[] modulus,\n\t\t\tbyte[] privateExponent) throws Exception {\n\t\tKeyFactory keyFac = null;\n\t\ttry {\n\t\t\tkeyFac = KeyFactory.getInstance(\"RSA\",\n\t\t\t\t\tnew org.bouncycastle.jce.provider.BouncyCastleProvider());\n\t\t} catch (NoSuchAlgorithmException ex) {\n\t\t\tthrow new Exception(ex.getMessage());\n\t\t}\n\t\tRSAPrivateKeySpec priKeySpec = new RSAPrivateKeySpec(new BigInteger(\n\t\t\t\tmodulus), new BigInteger(privateExponent));\n\t\ttry {\n\t\t\treturn (RSAPrivateKey) keyFac.generatePrivate(priKeySpec);\n\t\t} catch (InvalidKeySpecException ex) {\n\t\t\tthrow new Exception(ex.getMessage());\n\t\t}\n\t}\n\t/**\n\t * * 加密 *\n\t *\n\t * @param key\n\t *            加密的密钥 *\n\t * @param data\n\t *            待加密的明文数据 *\n\t * @return 加密后的数据 *\n\t * @throws Exception\n\t */\n\tpublic static byte[] encrypt(PublicKey pk, byte[] data) throws Exception {\n\t\ttry {\n\t\t\tCipher cipher = Cipher.getInstance(\"RSA\",\n\t\t\t\t\tnew org.bouncycastle.jce.provider.BouncyCastleProvider());\n\t\t\tcipher.init(Cipher.ENCRYPT_MODE, pk);\n\t\t\tint blockSize = cipher.getBlockSize();// 获得加密块大小，如：加密前数据为128个byte，而key_size=1024\n\t\t\t// 加密块大小为127\n\t\t\t// byte,加密后为128个byte;因此共有2个加密块，第一个127\n\t\t\t// byte第二个为1个byte\n\t\t\tint outputSize = cipher.getOutputSize(data.length);// 获得加密块加密后块大小\n\t\t\tint leavedSize = data.length % blockSize;\n\t\t\tint blocksSize = leavedSize != 0 ? data.length / blockSize + 1\n\t\t\t\t\t: data.length / blockSize;\n\t\t\tbyte[] raw = new byte[outputSize * blocksSize];\n\t\t\tint i = 0;\n\t\t\twhile (data.length - i * blockSize > 0) {\n\t\t\t\tif (data.length - i * blockSize > blockSize)\n\t\t\t\t\tcipher.doFinal(data, i * blockSize, blockSize, raw, i\n\t\t\t\t\t\t\t* outputSize);\n\t\t\t\telse\n\t\t\t\t\tcipher.doFinal(data, i * blockSize, data.length - i\n\t\t\t\t\t\t\t* blockSize, raw, i * outputSize);\n\t\t\t\t// 这里面doUpdate方法不可用，查看源代码后发现每次doUpdate后并没有什么实际动作除了把byte[]放到\n\t\t\t\t// ByteArrayOutputStream中，而最后doFinal的时候才将所有的byte[]进行加密，可是到了此时加密块大小很可能已经超出了\n\t\t\t\t// OutputSize所以只好用dofinal方法。\n\t\t\t\ti++;\n\t\t\t}\n\t\t\treturn raw;\n\t\t} catch (Exception e) {\n\t\t\tthrow new Exception(e.getMessage());\n\t\t}\n\t}\n\t/**\n\t * * 解密 *\n\t *\n\t * @param key\n\t *            解密的密钥 *\n\t * @param raw\n\t *            已经加密的数据 *\n\t * @return 解密后的明文 *\n\t * @throws Exception\n\t */\n\tpublic static byte[] decrypt(PrivateKey pk, byte[] raw) throws Exception {\n\t\ttry {\n\t\t\tCipher cipher = Cipher.getInstance(\"RSA\",\n\t\t\t\t\tnew org.bouncycastle.jce.provider.BouncyCastleProvider());\n\t\t\tcipher.init(cipher.DECRYPT_MODE, pk);\n\t\t\tint blockSize = cipher.getBlockSize();\n\t\t\tByteArrayOutputStream bout = new ByteArrayOutputStream(64);\n\t\t\tint j = 0;\n\t\t\twhile (raw.length - j * blockSize > 0) {\n\t\t\t\tbout.write(cipher.doFinal(raw, j * blockSize, blockSize));\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn bout.toByteArray();\n\t\t} catch (Exception e) {\n\t\t\tthrow new Exception(e.getMessage());\n\t\t}\n\t}\n\n\tpublic static String encryptStr(String str){\n\t\ttry {\n\t\t\tbyte[] encrypt = encrypt(getKeyPair().getPublic(), str.getBytes());\n\t\t\treturn new String(encrypt,\"UTF-8\");\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn null;\n\t}\n\n\n\tpublic static String decryptStr(String str) {\n\t\ttry {\n\t\t\tbyte[] decrypt = decrypt(getKeyPair().getPrivate(), str.getBytes());\n\t\t\treturn new String(decrypt);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * * *\n\t *\n\t * @param args *\n\t * @throws Exception\n\t */\n\tpublic static void main(String[] args) throws Exception {\n//\t\tRSAPublicKey rsap = (RSAPublicKey) RSAUtil.generateKeyPair().getPublic();\n\t\tString test = \"hello \"\n\t\t\t\t+ \"我\";\n\t\tbyte[] en_test = encrypt(getKeyPair().getPublic(), test.getBytes());\n\t\tbyte[] de_test = decrypt(getKeyPair().getPrivate(), en_test);\n\t\tSystem.out.println(new String(de_test));\n\t}\n}\n```\n\n\n\n","slug":"加密与解密/js端RSA加密，后台javaRSA解密","published":1,"updated":"2017-03-19T14:33:51.886Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taagj0056r8sylfwtn4v3","content":"<p>　　利用RSA实现前后台RSA加解密</p>\n<h2 id=\"下载-security-js\"><a href=\"#下载-security-js\" class=\"headerlink\" title=\"下载 security.js\"></a>下载 security.js</h2><h2 id=\"js端调用示例代码\"><a href=\"#js端调用示例代码\" class=\"headerlink\" title=\"js端调用示例代码\"></a>js端调用示例代码</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">RSAUtils.setMaxDigits(<span class=\"number\">1024</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> k = <span class=\"keyword\">new</span> RSAUtils.getKeyPair(<span class=\"string\">\"10001\"</span>, <span class=\"string\">\"\"</span>, _keyPair);</div><div class=\"line\">pwd = RSAUtils.encryptedString(k, pwd);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(pwd);</div></pre></td></tr></table></figure>\n<h2 id=\"服务器端解密示例\"><a href=\"#服务器端解密示例\" class=\"headerlink\" title=\"服务器端解密示例\"></a>服务器端解密示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">decryptForJs</span><span class=\"params\">(String str)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\tString pwd;</div><div class=\"line\">\t\tString result = str;</div><div class=\"line\">\t\t<span class=\"keyword\">byte</span>[] en_result = hexStringToBytes(result);</div><div class=\"line\">\t\t<span class=\"keyword\">byte</span>[] de_result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tde_result = RSAUtil.decrypt(RSAUtil.getKeyPair().getPrivate(), en_result);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlog.error(<span class=\"string\">\"解密js加密的密文发生异常&#123;&#125;\"</span>, e);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tStringBuffer sb = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\">\t\tsb.append(<span class=\"keyword\">new</span> String(de_result));</div><div class=\"line\">\t\tpwd = sb.reverse().toString();</div><div class=\"line\">\t\tpwd = URLDecoder.decode(pwd, <span class=\"string\">\"UTF-8\"</span>);<span class=\"comment\">//</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> pwd;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\tlog.error(<span class=\"string\">\"解密后加密发生异常&#123;&#125;\"</span>, e);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] hexStringToBytes(String hexString) &#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (hexString == <span class=\"keyword\">null</span> || hexString.equals(<span class=\"string\">\"\"</span>)) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\thexString = hexString.toUpperCase();</div><div class=\"line\">\t<span class=\"keyword\">int</span> length = hexString.length() / <span class=\"number\">2</span>;</div><div class=\"line\">\t<span class=\"keyword\">char</span>[] hexChars = hexString.toCharArray();</div><div class=\"line\">\t<span class=\"keyword\">byte</span>[] d = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[length];</div><div class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> pos = i * <span class=\"number\">2</span>;</div><div class=\"line\">\t\td[i] = (<span class=\"keyword\">byte</span>) (charToByte(hexChars[pos]) &lt;&lt; <span class=\"number\">4</span> | charToByte(hexChars[pos + <span class=\"number\">1</span>]));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> d;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span> <span class=\"title\">charToByte</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> (<span class=\"keyword\">byte</span>) <span class=\"string\">\"0123456789ABCDEF\"</span>.indexOf(c);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>RSAUtil  工具类代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.zf.pro.core.web.util;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> *</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.UnsupportedEncodingException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.math.BigInteger;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.KeyFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.KeyPair;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.KeyPairGenerator;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.NoSuchAlgorithmException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.PrivateKey;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.PublicKey;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.SecureRandom;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.interfaces.RSAPrivateKey;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.interfaces.RSAPublicKey;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.spec.InvalidKeySpecException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.spec.RSAPrivateKeySpec;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.spec.RSAPublicKeySpec;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.crypto.Cipher;</div><div class=\"line\"><span class=\"keyword\">import</span> com.zf.pro.core.constant.SysParam;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * RSA 工具类。提供加密，解密，生成密钥对等方法。</div><div class=\"line\"> * 需要到http://www.bouncycastle.org下载bcprov-jdk14-123.jar。</div><div class=\"line\"> *</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RSAUtil</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * 生成密钥对 *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> KeyPair *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> EncryptException</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> KeyPair <span class=\"title\">generateKeyPair</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tKeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(<span class=\"string\">\"RSA\"</span>,</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> org.bouncycastle.jce.provider.BouncyCastleProvider());</div><div class=\"line\">\t\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> KEY_SIZE = <span class=\"number\">1024</span>;<span class=\"comment\">// 没什么好说的了，这个值关系到块加密的大小，可以更改，但是不要太大，否则效率会低</span></div><div class=\"line\">\t\t\tkeyPairGen.initialize(KEY_SIZE, <span class=\"keyword\">new</span> SecureRandom());</div><div class=\"line\">\t\t\tKeyPair keyPair = keyPairGen.generateKeyPair();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//\t\t\tSystem.out.println(keyPair.getPrivate());</span></div><div class=\"line\">\t\t\tSystem.out.println(keyPair.getPublic());</div><div class=\"line\"></div><div class=\"line\">\t\t\tsaveKeyPair(keyPair);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> keyPair;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> KeyPair <span class=\"title\">getKeyPair</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tFileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(SysParam.RSA_KEYSTORE);</div><div class=\"line\">\t\tObjectInputStream oos = <span class=\"keyword\">new</span> ObjectInputStream(fis);</div><div class=\"line\">\t\tKeyPair kp = (KeyPair) oos.readObject();</div><div class=\"line\">\t\toos.close();</div><div class=\"line\">\t\tfis.close();</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> kp;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">saveKeyPair</span><span class=\"params\">(KeyPair kp)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tFileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"keyword\">new</span> File(SysParam.RSA_KEYSTORE));</div><div class=\"line\">\t\tObjectOutputStream oos = <span class=\"keyword\">new</span> ObjectOutputStream(fos);</div><div class=\"line\">\t\t<span class=\"comment\">// 生成密钥</span></div><div class=\"line\">\t\toos.writeObject(kp);</div><div class=\"line\">\t\toos.close();</div><div class=\"line\">\t\tfos.close();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * 生成公钥 *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> modulus *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> publicExponent *</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> RSAPublicKey *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RSAPublicKey <span class=\"title\">generateRSAPublicKey</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] modulus,</span></span></div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] publicExponent) <span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\tKeyFactory keyFac = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tkeyFac = KeyFactory.getInstance(<span class=\"string\">\"RSA\"</span>,</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> org.bouncycastle.jce.provider.BouncyCastleProvider());</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (NoSuchAlgorithmException ex) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tRSAPublicKeySpec pubKeySpec = <span class=\"keyword\">new</span> RSAPublicKeySpec(<span class=\"keyword\">new</span> BigInteger(</div><div class=\"line\">\t\t\t\tmodulus), <span class=\"keyword\">new</span> BigInteger(publicExponent));</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> (RSAPublicKey) keyFac.generatePublic(pubKeySpec);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (InvalidKeySpecException ex) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * 生成私钥 *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> modulus *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> privateExponent *</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> RSAPrivateKey *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RSAPrivateKey <span class=\"title\">generateRSAPrivateKey</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] modulus,</span></span></div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] privateExponent) <span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\tKeyFactory keyFac = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tkeyFac = KeyFactory.getInstance(<span class=\"string\">\"RSA\"</span>,</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> org.bouncycastle.jce.provider.BouncyCastleProvider());</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (NoSuchAlgorithmException ex) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tRSAPrivateKeySpec priKeySpec = <span class=\"keyword\">new</span> RSAPrivateKeySpec(<span class=\"keyword\">new</span> BigInteger(</div><div class=\"line\">\t\t\t\tmodulus), <span class=\"keyword\">new</span> BigInteger(privateExponent));</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> (RSAPrivateKey) keyFac.generatePrivate(priKeySpec);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (InvalidKeySpecException ex) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * 加密 *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t *            加密的密钥 *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> data</div><div class=\"line\">\t *            待加密的明文数据 *</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 加密后的数据 *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] encrypt(PublicKey pk, <span class=\"keyword\">byte</span>[] data) <span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tCipher cipher = Cipher.getInstance(<span class=\"string\">\"RSA\"</span>,</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> org.bouncycastle.jce.provider.BouncyCastleProvider());</div><div class=\"line\">\t\t\tcipher.init(Cipher.ENCRYPT_MODE, pk);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> blockSize = cipher.getBlockSize();<span class=\"comment\">// 获得加密块大小，如：加密前数据为128个byte，而key_size=1024</span></div><div class=\"line\">\t\t\t<span class=\"comment\">// 加密块大小为127</span></div><div class=\"line\">\t\t\t<span class=\"comment\">// byte,加密后为128个byte;因此共有2个加密块，第一个127</span></div><div class=\"line\">\t\t\t<span class=\"comment\">// byte第二个为1个byte</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> outputSize = cipher.getOutputSize(data.length);<span class=\"comment\">// 获得加密块加密后块大小</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> leavedSize = data.length % blockSize;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> blocksSize = leavedSize != <span class=\"number\">0</span> ? data.length / blockSize + <span class=\"number\">1</span></div><div class=\"line\">\t\t\t\t\t: data.length / blockSize;</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] raw = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[outputSize * blocksSize];</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span> (data.length - i * blockSize &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (data.length - i * blockSize &gt; blockSize)</div><div class=\"line\">\t\t\t\t\tcipher.doFinal(data, i * blockSize, blockSize, raw, i</div><div class=\"line\">\t\t\t\t\t\t\t* outputSize);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t\t\t\tcipher.doFinal(data, i * blockSize, data.length - i</div><div class=\"line\">\t\t\t\t\t\t\t* blockSize, raw, i * outputSize);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 这里面doUpdate方法不可用，查看源代码后发现每次doUpdate后并没有什么实际动作除了把byte[]放到</span></div><div class=\"line\">\t\t\t\t<span class=\"comment\">// ByteArrayOutputStream中，而最后doFinal的时候才将所有的byte[]进行加密，可是到了此时加密块大小很可能已经超出了</span></div><div class=\"line\">\t\t\t\t<span class=\"comment\">// OutputSize所以只好用dofinal方法。</span></div><div class=\"line\">\t\t\t\ti++;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> raw;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * 解密 *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t *            解密的密钥 *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> raw</div><div class=\"line\">\t *            已经加密的数据 *</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 解密后的明文 *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] decrypt(PrivateKey pk, <span class=\"keyword\">byte</span>[] raw) <span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tCipher cipher = Cipher.getInstance(<span class=\"string\">\"RSA\"</span>,</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> org.bouncycastle.jce.provider.BouncyCastleProvider());</div><div class=\"line\">\t\t\tcipher.init(cipher.DECRYPT_MODE, pk);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> blockSize = cipher.getBlockSize();</div><div class=\"line\">\t\t\tByteArrayOutputStream bout = <span class=\"keyword\">new</span> ByteArrayOutputStream(<span class=\"number\">64</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span> (raw.length - j * blockSize &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tbout.write(cipher.doFinal(raw, j * blockSize, blockSize));</div><div class=\"line\">\t\t\t\tj++;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> bout.toByteArray();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">encryptStr</span><span class=\"params\">(String str)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] encrypt = encrypt(getKeyPair().getPublic(), str.getBytes());</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String(encrypt,<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decryptStr</span><span class=\"params\">(String str)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] decrypt = decrypt(getKeyPair().getPrivate(), str.getBytes());</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String(decrypt);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> args *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\"><span class=\"comment\">//\t\tRSAPublicKey rsap = (RSAPublicKey) RSAUtil.generateKeyPair().getPublic();</span></div><div class=\"line\">\t\tString test = <span class=\"string\">\"hello \"</span></div><div class=\"line\">\t\t\t\t+ <span class=\"string\">\"我\"</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">byte</span>[] en_test = encrypt(getKeyPair().getPublic(), test.getBytes());</div><div class=\"line\">\t\t<span class=\"keyword\">byte</span>[] de_test = decrypt(getKeyPair().getPrivate(), en_test);</div><div class=\"line\">\t\tSystem.out.println(<span class=\"keyword\">new</span> String(de_test));</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>　　利用RSA实现前后台RSA加解密</p>\n<h2 id=\"下载-security-js\"><a href=\"#下载-security-js\" class=\"headerlink\" title=\"下载 security.js\"></a>下载 security.js</h2><h2 id=\"js端调用示例代码\"><a href=\"#js端调用示例代码\" class=\"headerlink\" title=\"js端调用示例代码\"></a>js端调用示例代码</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">RSAUtils.setMaxDigits(<span class=\"number\">1024</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> k = <span class=\"keyword\">new</span> RSAUtils.getKeyPair(<span class=\"string\">\"10001\"</span>, <span class=\"string\">\"\"</span>, _keyPair);</div><div class=\"line\">pwd = RSAUtils.encryptedString(k, pwd);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(pwd);</div></pre></td></tr></table></figure>\n<h2 id=\"服务器端解密示例\"><a href=\"#服务器端解密示例\" class=\"headerlink\" title=\"服务器端解密示例\"></a>服务器端解密示例</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> String <span class=\"title\">decryptForJs</span><span class=\"params\">(String str)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\tString pwd;</div><div class=\"line\">\t\tString result = str;</div><div class=\"line\">\t\t<span class=\"keyword\">byte</span>[] en_result = hexStringToBytes(result);</div><div class=\"line\">\t\t<span class=\"keyword\">byte</span>[] de_result = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tde_result = RSAUtil.decrypt(RSAUtil.getKeyPair().getPrivate(), en_result);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\tlog.error(<span class=\"string\">\"解密js加密的密文发生异常&#123;&#125;\"</span>, e);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tStringBuffer sb = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\">\t\tsb.append(<span class=\"keyword\">new</span> String(de_result));</div><div class=\"line\">\t\tpwd = sb.reverse().toString();</div><div class=\"line\">\t\tpwd = URLDecoder.decode(pwd, <span class=\"string\">\"UTF-8\"</span>);<span class=\"comment\">//</span></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> pwd;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\tlog.error(<span class=\"string\">\"解密后加密发生异常&#123;&#125;\"</span>, e);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] hexStringToBytes(String hexString) &#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (hexString == <span class=\"keyword\">null</span> || hexString.equals(<span class=\"string\">\"\"</span>)) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\thexString = hexString.toUpperCase();</div><div class=\"line\">\t<span class=\"keyword\">int</span> length = hexString.length() / <span class=\"number\">2</span>;</div><div class=\"line\">\t<span class=\"keyword\">char</span>[] hexChars = hexString.toCharArray();</div><div class=\"line\">\t<span class=\"keyword\">byte</span>[] d = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[length];</div><div class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> pos = i * <span class=\"number\">2</span>;</div><div class=\"line\">\t\td[i] = (<span class=\"keyword\">byte</span>) (charToByte(hexChars[pos]) &lt;&lt; <span class=\"number\">4</span> | charToByte(hexChars[pos + <span class=\"number\">1</span>]));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> d;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span> <span class=\"title\">charToByte</span><span class=\"params\">(<span class=\"keyword\">char</span> c)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> (<span class=\"keyword\">byte</span>) <span class=\"string\">\"0123456789ABCDEF\"</span>.indexOf(c);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>RSAUtil  工具类代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.zf.pro.core.web.util;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> *</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.UnsupportedEncodingException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.math.BigInteger;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.KeyFactory;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.KeyPair;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.KeyPairGenerator;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.NoSuchAlgorithmException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.PrivateKey;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.PublicKey;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.SecureRandom;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.interfaces.RSAPrivateKey;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.interfaces.RSAPublicKey;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.spec.InvalidKeySpecException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.spec.RSAPrivateKeySpec;</div><div class=\"line\"><span class=\"keyword\">import</span> java.security.spec.RSAPublicKeySpec;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.crypto.Cipher;</div><div class=\"line\"><span class=\"keyword\">import</span> com.zf.pro.core.constant.SysParam;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * RSA 工具类。提供加密，解密，生成密钥对等方法。</div><div class=\"line\"> * 需要到http://www.bouncycastle.org下载bcprov-jdk14-123.jar。</div><div class=\"line\"> *</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RSAUtil</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * 生成密钥对 *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> KeyPair *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> EncryptException</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> KeyPair <span class=\"title\">generateKeyPair</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tKeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(<span class=\"string\">\"RSA\"</span>,</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> org.bouncycastle.jce.provider.BouncyCastleProvider());</div><div class=\"line\">\t\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> KEY_SIZE = <span class=\"number\">1024</span>;<span class=\"comment\">// 没什么好说的了，这个值关系到块加密的大小，可以更改，但是不要太大，否则效率会低</span></div><div class=\"line\">\t\t\tkeyPairGen.initialize(KEY_SIZE, <span class=\"keyword\">new</span> SecureRandom());</div><div class=\"line\">\t\t\tKeyPair keyPair = keyPairGen.generateKeyPair();</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//\t\t\tSystem.out.println(keyPair.getPrivate());</span></div><div class=\"line\">\t\t\tSystem.out.println(keyPair.getPublic());</div><div class=\"line\"></div><div class=\"line\">\t\t\tsaveKeyPair(keyPair);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> keyPair;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> KeyPair <span class=\"title\">getKeyPair</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tFileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(SysParam.RSA_KEYSTORE);</div><div class=\"line\">\t\tObjectInputStream oos = <span class=\"keyword\">new</span> ObjectInputStream(fis);</div><div class=\"line\">\t\tKeyPair kp = (KeyPair) oos.readObject();</div><div class=\"line\">\t\toos.close();</div><div class=\"line\">\t\tfis.close();</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> kp;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">saveKeyPair</span><span class=\"params\">(KeyPair kp)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\t\tFileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(<span class=\"keyword\">new</span> File(SysParam.RSA_KEYSTORE));</div><div class=\"line\">\t\tObjectOutputStream oos = <span class=\"keyword\">new</span> ObjectOutputStream(fos);</div><div class=\"line\">\t\t<span class=\"comment\">// 生成密钥</span></div><div class=\"line\">\t\toos.writeObject(kp);</div><div class=\"line\">\t\toos.close();</div><div class=\"line\">\t\tfos.close();</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * 生成公钥 *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> modulus *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> publicExponent *</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> RSAPublicKey *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RSAPublicKey <span class=\"title\">generateRSAPublicKey</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] modulus,</span></span></div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] publicExponent) <span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\tKeyFactory keyFac = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tkeyFac = KeyFactory.getInstance(<span class=\"string\">\"RSA\"</span>,</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> org.bouncycastle.jce.provider.BouncyCastleProvider());</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (NoSuchAlgorithmException ex) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tRSAPublicKeySpec pubKeySpec = <span class=\"keyword\">new</span> RSAPublicKeySpec(<span class=\"keyword\">new</span> BigInteger(</div><div class=\"line\">\t\t\t\tmodulus), <span class=\"keyword\">new</span> BigInteger(publicExponent));</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> (RSAPublicKey) keyFac.generatePublic(pubKeySpec);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (InvalidKeySpecException ex) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * 生成私钥 *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> modulus *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> privateExponent *</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> RSAPrivateKey *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> RSAPrivateKey <span class=\"title\">generateRSAPrivateKey</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] modulus,</span></span></div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] privateExponent) <span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\tKeyFactory keyFac = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tkeyFac = KeyFactory.getInstance(<span class=\"string\">\"RSA\"</span>,</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> org.bouncycastle.jce.provider.BouncyCastleProvider());</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (NoSuchAlgorithmException ex) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tRSAPrivateKeySpec priKeySpec = <span class=\"keyword\">new</span> RSAPrivateKeySpec(<span class=\"keyword\">new</span> BigInteger(</div><div class=\"line\">\t\t\t\tmodulus), <span class=\"keyword\">new</span> BigInteger(privateExponent));</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> (RSAPrivateKey) keyFac.generatePrivate(priKeySpec);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (InvalidKeySpecException ex) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * 加密 *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t *            加密的密钥 *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> data</div><div class=\"line\">\t *            待加密的明文数据 *</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 加密后的数据 *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] encrypt(PublicKey pk, <span class=\"keyword\">byte</span>[] data) <span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tCipher cipher = Cipher.getInstance(<span class=\"string\">\"RSA\"</span>,</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> org.bouncycastle.jce.provider.BouncyCastleProvider());</div><div class=\"line\">\t\t\tcipher.init(Cipher.ENCRYPT_MODE, pk);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> blockSize = cipher.getBlockSize();<span class=\"comment\">// 获得加密块大小，如：加密前数据为128个byte，而key_size=1024</span></div><div class=\"line\">\t\t\t<span class=\"comment\">// 加密块大小为127</span></div><div class=\"line\">\t\t\t<span class=\"comment\">// byte,加密后为128个byte;因此共有2个加密块，第一个127</span></div><div class=\"line\">\t\t\t<span class=\"comment\">// byte第二个为1个byte</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> outputSize = cipher.getOutputSize(data.length);<span class=\"comment\">// 获得加密块加密后块大小</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> leavedSize = data.length % blockSize;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> blocksSize = leavedSize != <span class=\"number\">0</span> ? data.length / blockSize + <span class=\"number\">1</span></div><div class=\"line\">\t\t\t\t\t: data.length / blockSize;</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] raw = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[outputSize * blocksSize];</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span> (data.length - i * blockSize &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (data.length - i * blockSize &gt; blockSize)</div><div class=\"line\">\t\t\t\t\tcipher.doFinal(data, i * blockSize, blockSize, raw, i</div><div class=\"line\">\t\t\t\t\t\t\t* outputSize);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t\t\t\tcipher.doFinal(data, i * blockSize, data.length - i</div><div class=\"line\">\t\t\t\t\t\t\t* blockSize, raw, i * outputSize);</div><div class=\"line\">\t\t\t\t<span class=\"comment\">// 这里面doUpdate方法不可用，查看源代码后发现每次doUpdate后并没有什么实际动作除了把byte[]放到</span></div><div class=\"line\">\t\t\t\t<span class=\"comment\">// ByteArrayOutputStream中，而最后doFinal的时候才将所有的byte[]进行加密，可是到了此时加密块大小很可能已经超出了</span></div><div class=\"line\">\t\t\t\t<span class=\"comment\">// OutputSize所以只好用dofinal方法。</span></div><div class=\"line\">\t\t\t\ti++;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> raw;</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * 解密 *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> key</div><div class=\"line\">\t *            解密的密钥 *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> raw</div><div class=\"line\">\t *            已经加密的数据 *</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> 解密后的明文 *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] decrypt(PrivateKey pk, <span class=\"keyword\">byte</span>[] raw) <span class=\"keyword\">throws</span> Exception &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tCipher cipher = Cipher.getInstance(<span class=\"string\">\"RSA\"</span>,</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">new</span> org.bouncycastle.jce.provider.BouncyCastleProvider());</div><div class=\"line\">\t\t\tcipher.init(cipher.DECRYPT_MODE, pk);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> blockSize = cipher.getBlockSize();</div><div class=\"line\">\t\t\tByteArrayOutputStream bout = <span class=\"keyword\">new</span> ByteArrayOutputStream(<span class=\"number\">64</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span> (raw.length - j * blockSize &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\t\tbout.write(cipher.doFinal(raw, j * blockSize, blockSize));</div><div class=\"line\">\t\t\t\tj++;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> bout.toByteArray();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(e.getMessage());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">encryptStr</span><span class=\"params\">(String str)</span></span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] encrypt = encrypt(getKeyPair().getPublic(), str.getBytes());</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String(encrypt,<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decryptStr</span><span class=\"params\">(String str)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">byte</span>[] decrypt = decrypt(getKeyPair().getPrivate(), str.getBytes());</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String(decrypt);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * * *</div><div class=\"line\">\t *</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> args *</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\"><span class=\"comment\">//\t\tRSAPublicKey rsap = (RSAPublicKey) RSAUtil.generateKeyPair().getPublic();</span></div><div class=\"line\">\t\tString test = <span class=\"string\">\"hello \"</span></div><div class=\"line\">\t\t\t\t+ <span class=\"string\">\"我\"</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">byte</span>[] en_test = encrypt(getKeyPair().getPublic(), test.getBytes());</div><div class=\"line\">\t\t<span class=\"keyword\">byte</span>[] de_test = decrypt(getKeyPair().getPrivate(), en_test);</div><div class=\"line\">\t\tSystem.out.println(<span class=\"keyword\">new</span> String(de_test));</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"eclipse ermaster 插件","date":"2017-03-20T09:31:44.000Z","_content":"ER Master 是一个用于设计ER模型图的Eclipse插件。提供的功能包括：从数据库导入关系生成ER图，导出设计图，导出DDL数据定义语句等。目前完整支持的数据库包括 MySQL、PostgreSQL 和\n-Oracle (developing)\n-DB2 (developing)\n-HSQLDB (developing)\n-SQLITE (developing)\n-SQLServer (developing)\n\nEclipse安装此插件的地址是：[http://ermaster.sourceforge.net/update-site/](http://ermaster.sourceforge.net/update-site/)\n\n来源：[http://www.oschina.net/p/ermaster/similar_projects?lang=0&sort=time](http://www.oschina.net/p/ermaster/similar_projects?lang=0&sort=time)\n\n","source":"_posts/工具/eclipse-ermaster-插件.md","raw":"---\ntitle: eclipse ermaster 插件\ndate: 2017-03-20 17:31:44\ncategory: 工具\ntags: [eclipse,ermaster]\n---\nER Master 是一个用于设计ER模型图的Eclipse插件。提供的功能包括：从数据库导入关系生成ER图，导出设计图，导出DDL数据定义语句等。目前完整支持的数据库包括 MySQL、PostgreSQL 和\n-Oracle (developing)\n-DB2 (developing)\n-HSQLDB (developing)\n-SQLITE (developing)\n-SQLServer (developing)\n\nEclipse安装此插件的地址是：[http://ermaster.sourceforge.net/update-site/](http://ermaster.sourceforge.net/update-site/)\n\n来源：[http://www.oschina.net/p/ermaster/similar_projects?lang=0&sort=time](http://www.oschina.net/p/ermaster/similar_projects?lang=0&sort=time)\n\n","slug":"工具/eclipse-ermaster-插件","published":1,"updated":"2017-03-20T09:34:13.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taagm005br8syyqovc36o","content":"<p>ER Master 是一个用于设计ER模型图的Eclipse插件。提供的功能包括：从数据库导入关系生成ER图，导出设计图，导出DDL数据定义语句等。目前完整支持的数据库包括 MySQL、PostgreSQL 和<br>-Oracle (developing)<br>-DB2 (developing)<br>-HSQLDB (developing)<br>-SQLITE (developing)<br>-SQLServer (developing)</p>\n<p>Eclipse安装此插件的地址是：<a href=\"http://ermaster.sourceforge.net/update-site/\" target=\"_blank\" rel=\"external\">http://ermaster.sourceforge.net/update-site/</a></p>\n<p>来源：<a href=\"http://www.oschina.net/p/ermaster/similar_projects?lang=0&amp;sort=time\" target=\"_blank\" rel=\"external\">http://www.oschina.net/p/ermaster/similar_projects?lang=0&amp;sort=time</a></p>\n","excerpt":"","more":"<p>ER Master 是一个用于设计ER模型图的Eclipse插件。提供的功能包括：从数据库导入关系生成ER图，导出设计图，导出DDL数据定义语句等。目前完整支持的数据库包括 MySQL、PostgreSQL 和<br>-Oracle (developing)<br>-DB2 (developing)<br>-HSQLDB (developing)<br>-SQLITE (developing)<br>-SQLServer (developing)</p>\n<p>Eclipse安装此插件的地址是：<a href=\"http://ermaster.sourceforge.net/update-site/\">http://ermaster.sourceforge.net/update-site/</a></p>\n<p>来源：<a href=\"http://www.oschina.net/p/ermaster/similar_projects?lang=0&amp;sort=time\">http://www.oschina.net/p/ermaster/similar_projects?lang=0&amp;sort=time</a></p>\n"},{"title":"Eclipse中设计tomcat的内存大小","date":"2017-03-20T09:36:25.000Z","_content":"　　有时候项目需要的内存比较大，需要更大的jvm内存，因此我们需要修改默认的tomcat内存\n<!--more-->\n1  双击server，在配置页面打开tomcat启动配置文件\n![logo](45ca9205-f30f-42fe-97b3-3efee151ba7d.png)\n2 在Argument中末尾添加参数中的VM arguments中追加：\n```xml\n-Xms512M -Xmx1024M -XX:PermSize=512m -XX:MaxPermSize=1024\n```\n![logo](6295420a-7dd6-4bc7-9001-c964155695b3.png)\n备注：\n参数的意思\n-vmargs：说明后面是VM的参数\n-Xms40m：虚拟机占用系统的最小内存\n-Xmx256m：虚拟机占用系统的最大内存\n-XX:PermSize：最小栈内存大小。一般报内存不足时,都是说这个太小,堆空间剩余小于5%就会警告,建议把这个稍微设大一点,不过要视自己机器内存大小来设置\n-XX:MaxPermSize：最大栈内存大小。这个也适当大些\n-Xmx512M的5%为25.6M，理论上要求-Xmx的数值与-XX:MaxPermSize必须大于25.6M\n来源： [http://blog.csdn.net/w420372197/article/details/7878404](http://blog.csdn.net/w420372197/article/details/7878404)\n\n","source":"_posts/工具/Eclipse中设计tomcat的内存大小.md","raw":"---\ntitle: Eclipse中设计tomcat的内存大小\ndate: 2017-03-20 17:36:25\ncategory: 工具\ntags: [eclipse,tomcat,内存]\n---\n　　有时候项目需要的内存比较大，需要更大的jvm内存，因此我们需要修改默认的tomcat内存\n<!--more-->\n1  双击server，在配置页面打开tomcat启动配置文件\n![logo](45ca9205-f30f-42fe-97b3-3efee151ba7d.png)\n2 在Argument中末尾添加参数中的VM arguments中追加：\n```xml\n-Xms512M -Xmx1024M -XX:PermSize=512m -XX:MaxPermSize=1024\n```\n![logo](6295420a-7dd6-4bc7-9001-c964155695b3.png)\n备注：\n参数的意思\n-vmargs：说明后面是VM的参数\n-Xms40m：虚拟机占用系统的最小内存\n-Xmx256m：虚拟机占用系统的最大内存\n-XX:PermSize：最小栈内存大小。一般报内存不足时,都是说这个太小,堆空间剩余小于5%就会警告,建议把这个稍微设大一点,不过要视自己机器内存大小来设置\n-XX:MaxPermSize：最大栈内存大小。这个也适当大些\n-Xmx512M的5%为25.6M，理论上要求-Xmx的数值与-XX:MaxPermSize必须大于25.6M\n来源： [http://blog.csdn.net/w420372197/article/details/7878404](http://blog.csdn.net/w420372197/article/details/7878404)\n\n","slug":"工具/Eclipse中设计tomcat的内存大小","published":1,"updated":"2017-03-20T09:45:59.477Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taago005cr8sytlrtl9b2","content":"<p>　　有时候项目需要的内存比较大，需要更大的jvm内存，因此我们需要修改默认的tomcat内存<br><a id=\"more\"></a><br>1  双击server，在配置页面打开tomcat启动配置文件<br><img src=\"/2017/03/20/工具/Eclipse中设计tomcat的内存大小/45ca9205-f30f-42fe-97b3-3efee151ba7d.png\" alt=\"logo\"><br>2 在Argument中末尾添加参数中的VM arguments中追加：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">-Xms512M -Xmx1024M -XX:PermSize=512m -XX:MaxPermSize=1024</div></pre></td></tr></table></figure></p>\n<p><img src=\"/2017/03/20/工具/Eclipse中设计tomcat的内存大小/6295420a-7dd6-4bc7-9001-c964155695b3.png\" alt=\"logo\"><br>备注：<br>参数的意思<br>-vmargs：说明后面是VM的参数<br>-Xms40m：虚拟机占用系统的最小内存<br>-Xmx256m：虚拟机占用系统的最大内存<br>-XX:PermSize：最小栈内存大小。一般报内存不足时,都是说这个太小,堆空间剩余小于5%就会警告,建议把这个稍微设大一点,不过要视自己机器内存大小来设置<br>-XX:MaxPermSize：最大栈内存大小。这个也适当大些<br>-Xmx512M的5%为25.6M，理论上要求-Xmx的数值与-XX:MaxPermSize必须大于25.6M<br>来源： <a href=\"http://blog.csdn.net/w420372197/article/details/7878404\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/w420372197/article/details/7878404</a></p>\n","excerpt":"<p>　　有时候项目需要的内存比较大，需要更大的jvm内存，因此我们需要修改默认的tomcat内存<br></p>","more":"<br>1  双击server，在配置页面打开tomcat启动配置文件<br><img src=\"/2017/03/20/工具/Eclipse中设计tomcat的内存大小/45ca9205-f30f-42fe-97b3-3efee151ba7d.png\" alt=\"logo\"><br>2 在Argument中末尾添加参数中的VM arguments中追加：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">-Xms512M -Xmx1024M -XX:PermSize=512m -XX:MaxPermSize=1024</div></pre></td></tr></table></figure><p></p>\n<p><img src=\"/2017/03/20/工具/Eclipse中设计tomcat的内存大小/6295420a-7dd6-4bc7-9001-c964155695b3.png\" alt=\"logo\"><br>备注：<br>参数的意思<br>-vmargs：说明后面是VM的参数<br>-Xms40m：虚拟机占用系统的最小内存<br>-Xmx256m：虚拟机占用系统的最大内存<br>-XX:PermSize：最小栈内存大小。一般报内存不足时,都是说这个太小,堆空间剩余小于5%就会警告,建议把这个稍微设大一点,不过要视自己机器内存大小来设置<br>-XX:MaxPermSize：最大栈内存大小。这个也适当大些<br>-Xmx512M的5%为25.6M，理论上要求-Xmx的数值与-XX:MaxPermSize必须大于25.6M<br>来源： <a href=\"http://blog.csdn.net/w420372197/article/details/7878404\">http://blog.csdn.net/w420372197/article/details/7878404</a></p>"},{"title":"idea常用快捷键","date":"2017-03-19T09:27:40.000Z","_content":"```shell\n查询快捷键\nCTRL+N 查找类\nCTRL+SHIFT+N 查找文件\nCTRL+SHIFT+ALT+N 查 找类中的方法或变量\nCIRL+B 找变量的来源\nCTRL+ALT+B 找所有的子类\nCTRL+SHIFT+B 找变量的 类\nCTRL+G 定位行\nCTRL+F 在当前窗口查找文本\nCTRL+SHIFT+F 在指定窗口查找文本\nCTRL+R 在 当前窗口替换文本\nCTRL+SHIFT+R 在指定窗口替换文本\nALT+SHIFT+C 查找修改的文件\nCTRL+E 最 近打开的文件\nF3 向下查找关键字出现位置\nSHIFT+F3 向上一个关键字出现位置\nF4 查找变量来源\nCTRL+ALT+F7 选 中的字符 查找工程出现的地方\nCTRL+SHIFT+O 弹出显示查找内容\n```\n","source":"_posts/工具/idea常用快捷键.md","raw":"---\ntitle: idea常用快捷键\ndate: 2017-03-19 17:27:40\ncategory: 工具\ntags: [idea]\n---\n```shell\n查询快捷键\nCTRL+N 查找类\nCTRL+SHIFT+N 查找文件\nCTRL+SHIFT+ALT+N 查 找类中的方法或变量\nCIRL+B 找变量的来源\nCTRL+ALT+B 找所有的子类\nCTRL+SHIFT+B 找变量的 类\nCTRL+G 定位行\nCTRL+F 在当前窗口查找文本\nCTRL+SHIFT+F 在指定窗口查找文本\nCTRL+R 在 当前窗口替换文本\nCTRL+SHIFT+R 在指定窗口替换文本\nALT+SHIFT+C 查找修改的文件\nCTRL+E 最 近打开的文件\nF3 向下查找关键字出现位置\nSHIFT+F3 向上一个关键字出现位置\nF4 查找变量来源\nCTRL+ALT+F7 选 中的字符 查找工程出现的地方\nCTRL+SHIFT+O 弹出显示查找内容\n```\n","slug":"工具/idea常用快捷键","published":1,"updated":"2017-03-19T09:34:15.590Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taags005gr8sygo3d8o1y","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">查询快捷键</div><div class=\"line\">CTRL+N 查找类</div><div class=\"line\">CTRL+SHIFT+N 查找文件</div><div class=\"line\">CTRL+SHIFT+ALT+N 查 找类中的方法或变量</div><div class=\"line\">CIRL+B 找变量的来源</div><div class=\"line\">CTRL+ALT+B 找所有的子类</div><div class=\"line\">CTRL+SHIFT+B 找变量的 类</div><div class=\"line\">CTRL+G 定位行</div><div class=\"line\">CTRL+F 在当前窗口查找文本</div><div class=\"line\">CTRL+SHIFT+F 在指定窗口查找文本</div><div class=\"line\">CTRL+R 在 当前窗口替换文本</div><div class=\"line\">CTRL+SHIFT+R 在指定窗口替换文本</div><div class=\"line\">ALT+SHIFT+C 查找修改的文件</div><div class=\"line\">CTRL+E 最 近打开的文件</div><div class=\"line\">F3 向下查找关键字出现位置</div><div class=\"line\">SHIFT+F3 向上一个关键字出现位置</div><div class=\"line\">F4 查找变量来源</div><div class=\"line\">CTRL+ALT+F7 选 中的字符 查找工程出现的地方</div><div class=\"line\">CTRL+SHIFT+O 弹出显示查找内容</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">查询快捷键</div><div class=\"line\">CTRL+N 查找类</div><div class=\"line\">CTRL+SHIFT+N 查找文件</div><div class=\"line\">CTRL+SHIFT+ALT+N 查 找类中的方法或变量</div><div class=\"line\">CIRL+B 找变量的来源</div><div class=\"line\">CTRL+ALT+B 找所有的子类</div><div class=\"line\">CTRL+SHIFT+B 找变量的 类</div><div class=\"line\">CTRL+G 定位行</div><div class=\"line\">CTRL+F 在当前窗口查找文本</div><div class=\"line\">CTRL+SHIFT+F 在指定窗口查找文本</div><div class=\"line\">CTRL+R 在 当前窗口替换文本</div><div class=\"line\">CTRL+SHIFT+R 在指定窗口替换文本</div><div class=\"line\">ALT+SHIFT+C 查找修改的文件</div><div class=\"line\">CTRL+E 最 近打开的文件</div><div class=\"line\">F3 向下查找关键字出现位置</div><div class=\"line\">SHIFT+F3 向上一个关键字出现位置</div><div class=\"line\">F4 查找变量来源</div><div class=\"line\">CTRL+ALT+F7 选 中的字符 查找工程出现的地方</div><div class=\"line\">CTRL+SHIFT+O 弹出显示查找内容</div></pre></td></tr></table></figure>\n"},{"title":"批量删除.svn文件夹、.svn文件","date":"2017-03-20T08:58:34.000Z","_content":"　　用svn版本控制的项目，下载下来后，每个文件下都会有一个.svn文件。可以用如下方法删除\n<!--more-->\n\n1、Windows环境\n将下面的代码保存为 kill-svn.bat文件，放到要删除.svn文件的目录下，双击运行即可\n```shell\n@echo on\n@rem 删除SVN版本控制目录\n@rem for /r . %%a in (.) do @if exist \"%%a\\.svn\" @echo \"%%a\\.svn\"\n@for /r . %%a in (.) do @if exist \"%%a\\.svn\" rd /s /q \"%%a\\.svn\"\n@echo completed\n@pause\n```\n2、在linux下\n```shell\nfind . -type d -name \".svn\"|xargs rm -rf\n```\n\n来源：[http://blog.csdn.net/xinpo66/article/details/40145529](http://blog.csdn.net/xinpo66/article/details/40145529)","source":"_posts/工具/批量删除-svn文件夹、-svn文件.md","raw":"---\ntitle: 批量删除.svn文件夹、.svn文件\ndate: 2017-03-20 16:58:34\ncategory: 工具\ntags: [svn]\n---\n　　用svn版本控制的项目，下载下来后，每个文件下都会有一个.svn文件。可以用如下方法删除\n<!--more-->\n\n1、Windows环境\n将下面的代码保存为 kill-svn.bat文件，放到要删除.svn文件的目录下，双击运行即可\n```shell\n@echo on\n@rem 删除SVN版本控制目录\n@rem for /r . %%a in (.) do @if exist \"%%a\\.svn\" @echo \"%%a\\.svn\"\n@for /r . %%a in (.) do @if exist \"%%a\\.svn\" rd /s /q \"%%a\\.svn\"\n@echo completed\n@pause\n```\n2、在linux下\n```shell\nfind . -type d -name \".svn\"|xargs rm -rf\n```\n\n来源：[http://blog.csdn.net/xinpo66/article/details/40145529](http://blog.csdn.net/xinpo66/article/details/40145529)","slug":"工具/批量删除-svn文件夹、-svn文件","published":1,"updated":"2017-03-20T09:05:39.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taah2005hr8sytdf73x1g","content":"<p>　　用svn版本控制的项目，下载下来后，每个文件下都会有一个.svn文件。可以用如下方法删除<br><a id=\"more\"></a></p>\n<p>1、Windows环境<br>将下面的代码保存为 kill-svn.bat文件，放到要删除.svn文件的目录下，双击运行即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@echo on</div><div class=\"line\">@rem 删除SVN版本控制目录</div><div class=\"line\">@rem for /r . %%a in (.) do @if exist &quot;%%a\\.svn&quot; @echo &quot;%%a\\.svn&quot;</div><div class=\"line\">@for /r . %%a in (.) do @if exist &quot;%%a\\.svn&quot; rd /s /q &quot;%%a\\.svn&quot;</div><div class=\"line\">@echo completed</div><div class=\"line\">@pause</div></pre></td></tr></table></figure></p>\n<p>2、在linux下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">find . -type d -name &quot;.svn&quot;|xargs rm -rf</div></pre></td></tr></table></figure></p>\n<p>来源：<a href=\"http://blog.csdn.net/xinpo66/article/details/40145529\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/xinpo66/article/details/40145529</a></p>\n","excerpt":"<p>　　用svn版本控制的项目，下载下来后，每个文件下都会有一个.svn文件。可以用如下方法删除<br></p>","more":"<p></p>\n<p>1、Windows环境<br>将下面的代码保存为 kill-svn.bat文件，放到要删除.svn文件的目录下，双击运行即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@echo on</div><div class=\"line\">@rem 删除SVN版本控制目录</div><div class=\"line\">@rem for /r . %%a in (.) do @if exist &quot;%%a\\.svn&quot; @echo &quot;%%a\\.svn&quot;</div><div class=\"line\">@for /r . %%a in (.) do @if exist &quot;%%a\\.svn&quot; rd /s /q &quot;%%a\\.svn&quot;</div><div class=\"line\">@echo completed</div><div class=\"line\">@pause</div></pre></td></tr></table></figure></p>\n<p>2、在linux下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">find . -type d -name &quot;.svn&quot;|xargs rm -rf</div></pre></td></tr></table></figure></p>\n<p>来源：<a href=\"http://blog.csdn.net/xinpo66/article/details/40145529\">http://blog.csdn.net/xinpo66/article/details/40145529</a></p>"},{"title":"ida热部署","date":"2017-03-19T08:49:49.000Z","_content":"intellij idea默认文件是自动保存的，但是手头有个项目jsp文件改动后，在tomcat中不能立即响应变化。\n<!--more-->\n要jsp文件改动后立刻看到变化，有个配置。\n在idea tomcat 中server的配置里，有个on frame deactivation，选择update classes and resources。\n另外有个配置on update action，就是手动操作的时候采取什么动作，可以重启服务器，也可以像上面一样更新类和资源文件，我选的是Redeploy。\n可是当前项目没有update classes and resources这个选项，有个Hot Swap classes。\n这是由于服务器添加的Artifact类型问题，一般一个module对应两种类型的Artifact，一种是war，一种是war explored。\nwar就是已war包形式发布，当前项目是这种形式，在这种形式下on frame deactivation配置没有update classes and resources选项。\nwar explored是发布文件目录，选择这种形式，on frame deactivation中就出现update classes and resources选项了\n\n\n","source":"_posts/工具/idea热部署.md","raw":"---\ntitle: ida热部署\ndate: 2017-03-19 16:49:49\ncategory: 工具\ntags: [idea]\n---\nintellij idea默认文件是自动保存的，但是手头有个项目jsp文件改动后，在tomcat中不能立即响应变化。\n<!--more-->\n要jsp文件改动后立刻看到变化，有个配置。\n在idea tomcat 中server的配置里，有个on frame deactivation，选择update classes and resources。\n另外有个配置on update action，就是手动操作的时候采取什么动作，可以重启服务器，也可以像上面一样更新类和资源文件，我选的是Redeploy。\n可是当前项目没有update classes and resources这个选项，有个Hot Swap classes。\n这是由于服务器添加的Artifact类型问题，一般一个module对应两种类型的Artifact，一种是war，一种是war explored。\nwar就是已war包形式发布，当前项目是这种形式，在这种形式下on frame deactivation配置没有update classes and resources选项。\nwar explored是发布文件目录，选择这种形式，on frame deactivation中就出现update classes and resources选项了\n\n\n","slug":"工具/idea热部署","published":1,"updated":"2017-03-19T08:57:13.921Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taah4005lr8sydekoay6x","content":"<p>intellij idea默认文件是自动保存的，但是手头有个项目jsp文件改动后，在tomcat中不能立即响应变化。<br><a id=\"more\"></a><br>要jsp文件改动后立刻看到变化，有个配置。<br>在idea tomcat 中server的配置里，有个on frame deactivation，选择update classes and resources。<br>另外有个配置on update action，就是手动操作的时候采取什么动作，可以重启服务器，也可以像上面一样更新类和资源文件，我选的是Redeploy。<br>可是当前项目没有update classes and resources这个选项，有个Hot Swap classes。<br>这是由于服务器添加的Artifact类型问题，一般一个module对应两种类型的Artifact，一种是war，一种是war explored。<br>war就是已war包形式发布，当前项目是这种形式，在这种形式下on frame deactivation配置没有update classes and resources选项。<br>war explored是发布文件目录，选择这种形式，on frame deactivation中就出现update classes and resources选项了</p>\n","excerpt":"<p>intellij idea默认文件是自动保存的，但是手头有个项目jsp文件改动后，在tomcat中不能立即响应变化。<br></p>","more":"<br>要jsp文件改动后立刻看到变化，有个配置。<br>在idea tomcat 中server的配置里，有个on frame deactivation，选择update classes and resources。<br>另外有个配置on update action，就是手动操作的时候采取什么动作，可以重启服务器，也可以像上面一样更新类和资源文件，我选的是Redeploy。<br>可是当前项目没有update classes and resources这个选项，有个Hot Swap classes。<br>这是由于服务器添加的Artifact类型问题，一般一个module对应两种类型的Artifact，一种是war，一种是war explored。<br>war就是已war包形式发布，当前项目是这种形式，在这种形式下on frame deactivation配置没有update classes and resources选项。<br>war explored是发布文件目录，选择这种形式，on frame deactivation中就出现update classes and resources选项了<p></p>"},{"title":"终端连接oracle数据库","date":"2017-03-10T08:57:47.000Z","_content":"``` shell\n# sqlplus 用户名/密码@orcl\nsqlplus carins/carins_2016@orcl\n```\n\n","source":"_posts/数据库/终端连接oracle数据库.md","raw":"---\ntitle: 终端连接oracle数据库\ndate: 2017-03-10 16:57:47\ncategories: 数据库\ntags:\n - oracle\n - Linux\n---\n``` shell\n# sqlplus 用户名/密码@orcl\nsqlplus carins/carins_2016@orcl\n```\n\n","slug":"数据库/终端连接oracle数据库","published":1,"updated":"2017-03-10T08:59:11.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taah5005nr8syyo0fttr1","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># sqlplus 用户名/密码@orcl</div><div class=\"line\">sqlplus carins/carins_2016@orcl</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># sqlplus 用户名/密码@orcl</div><div class=\"line\">sqlplus carins/carins_2016@orcl</div></pre></td></tr></table></figure>\n"},{"title":"河内塔","date":"2017-04-06T14:28:47.000Z","_content":"## 背景：\n　　河内之塔(Towers of Hanoi)是法国人M.Claus(Lucas)于1883年从泰国带至法国的，河内为越战时北越的首都，即现在的胡志明市；1883年法国数学家 Edouard Lucas曾提及这个故事，据说创世纪时Benares有一座波罗教塔，是由三支钻石棒（Pag）所支撑，开始时神在第一根棒上放置64个由上至下依由小 至大排列的金盘（Disc），并命令僧侣将所有的金盘从第一根石棒移至第三根石棒，且搬运过程中遵守大盘子在小盘子之下的原则，若每日仅搬一个盘子，则当 盘子全数搬运完毕之时，此塔将毁损，而也就是世界末日来临之时。\n<!--more-->\n## 解法：\n　　如果柱子标为ABC，要由A搬至C，在只有一个盘子时，就将它直接搬至C，当有两个盘子，就将B当作辅助柱。\n![logo](hanoi-1.jpg)![logo](hanoi-2.jpg)![logo](hanoi-3.jpg)\n　　如果盘数超过2个，将第三个以下的盘子遮起来，就很简单了，每次处理两个盘子，也就是：A->B、A ->C、B->C这三个步骤，而被遮住的部份，其实就是进入程式的递回处理。\n![logo](hanoi-4.jpg)\n事实上，若有n个盘子，则移动完毕所需之次数为2^n - 1，所以当盘数为64时，则所需次数为：\n2^64 - 1 = 18446744073709551615\n为5.05390248594782e+16年，也就是约5000世纪，如果对这数字没什么概念，就假设每秒钟搬一个盘子好了，也要约5850亿年左右。\n\n## java代码实现\n```java\npublic class Hanoi {\n\n    public static void main(String[] args){\n        new Hanoi().move(64,\"A\",\"B\",\"C\");\n    }\n\n    /**\n     * 移动一步\n     * @param n 第n层的盘子\n     * @param a a柱子（盘子所在位置）\n     * @param b b柱子（临时的位置）\n     * @param c c柱子（盘子最终的目的地）\n     */\n    public void move(int n, String a, String b, String c){\n        if(n == 1){\n            System.out.println(n + \"由\" + a + \"移动到\" + c);\n        }else{\n            move(n-1,a,c,b);\n            System.out.println(n + \"由\" + a + \"移动到\" + c);\n            move(n-1,b,a,c);\n        }\n    }\n\n}\n```\n","source":"_posts/算法/河内塔.md","raw":"---\ntitle: 河内塔\ndate: 2017-04-06 22:28:47\ncategory: 算法\ntags: [河内塔,汉诺塔]\n---\n## 背景：\n　　河内之塔(Towers of Hanoi)是法国人M.Claus(Lucas)于1883年从泰国带至法国的，河内为越战时北越的首都，即现在的胡志明市；1883年法国数学家 Edouard Lucas曾提及这个故事，据说创世纪时Benares有一座波罗教塔，是由三支钻石棒（Pag）所支撑，开始时神在第一根棒上放置64个由上至下依由小 至大排列的金盘（Disc），并命令僧侣将所有的金盘从第一根石棒移至第三根石棒，且搬运过程中遵守大盘子在小盘子之下的原则，若每日仅搬一个盘子，则当 盘子全数搬运完毕之时，此塔将毁损，而也就是世界末日来临之时。\n<!--more-->\n## 解法：\n　　如果柱子标为ABC，要由A搬至C，在只有一个盘子时，就将它直接搬至C，当有两个盘子，就将B当作辅助柱。\n![logo](hanoi-1.jpg)![logo](hanoi-2.jpg)![logo](hanoi-3.jpg)\n　　如果盘数超过2个，将第三个以下的盘子遮起来，就很简单了，每次处理两个盘子，也就是：A->B、A ->C、B->C这三个步骤，而被遮住的部份，其实就是进入程式的递回处理。\n![logo](hanoi-4.jpg)\n事实上，若有n个盘子，则移动完毕所需之次数为2^n - 1，所以当盘数为64时，则所需次数为：\n2^64 - 1 = 18446744073709551615\n为5.05390248594782e+16年，也就是约5000世纪，如果对这数字没什么概念，就假设每秒钟搬一个盘子好了，也要约5850亿年左右。\n\n## java代码实现\n```java\npublic class Hanoi {\n\n    public static void main(String[] args){\n        new Hanoi().move(64,\"A\",\"B\",\"C\");\n    }\n\n    /**\n     * 移动一步\n     * @param n 第n层的盘子\n     * @param a a柱子（盘子所在位置）\n     * @param b b柱子（临时的位置）\n     * @param c c柱子（盘子最终的目的地）\n     */\n    public void move(int n, String a, String b, String c){\n        if(n == 1){\n            System.out.println(n + \"由\" + a + \"移动到\" + c);\n        }else{\n            move(n-1,a,c,b);\n            System.out.println(n + \"由\" + a + \"移动到\" + c);\n            move(n-1,b,a,c);\n        }\n    }\n\n}\n```\n","slug":"算法/河内塔","published":1,"updated":"2017-04-06T14:48:51.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taah7005sr8sy0bs20e7e","content":"<h2 id=\"背景：\"><a href=\"#背景：\" class=\"headerlink\" title=\"背景：\"></a>背景：</h2><p>　　河内之塔(Towers of Hanoi)是法国人M.Claus(Lucas)于1883年从泰国带至法国的，河内为越战时北越的首都，即现在的胡志明市；1883年法国数学家 Edouard Lucas曾提及这个故事，据说创世纪时Benares有一座波罗教塔，是由三支钻石棒（Pag）所支撑，开始时神在第一根棒上放置64个由上至下依由小 至大排列的金盘（Disc），并命令僧侣将所有的金盘从第一根石棒移至第三根石棒，且搬运过程中遵守大盘子在小盘子之下的原则，若每日仅搬一个盘子，则当 盘子全数搬运完毕之时，此塔将毁损，而也就是世界末日来临之时。<br><a id=\"more\"></a></p>\n<h2 id=\"解法：\"><a href=\"#解法：\" class=\"headerlink\" title=\"解法：\"></a>解法：</h2><p>　　如果柱子标为ABC，要由A搬至C，在只有一个盘子时，就将它直接搬至C，当有两个盘子，就将B当作辅助柱。<br><img src=\"/2017/04/06/算法/河内塔/hanoi-1.jpg\" alt=\"logo\"><img src=\"/2017/04/06/算法/河内塔/hanoi-2.jpg\" alt=\"logo\"><img src=\"/2017/04/06/算法/河内塔/hanoi-3.jpg\" alt=\"logo\"><br>　　如果盘数超过2个，将第三个以下的盘子遮起来，就很简单了，每次处理两个盘子，也就是：A-&gt;B、A -&gt;C、B-&gt;C这三个步骤，而被遮住的部份，其实就是进入程式的递回处理。<br><img src=\"/2017/04/06/算法/河内塔/hanoi-4.jpg\" alt=\"logo\"><br>事实上，若有n个盘子，则移动完毕所需之次数为2^n - 1，所以当盘数为64时，则所需次数为：<br>2^64 - 1 = 18446744073709551615<br>为5.05390248594782e+16年，也就是约5000世纪，如果对这数字没什么概念，就假设每秒钟搬一个盘子好了，也要约5850亿年左右。</p>\n<h2 id=\"java代码实现\"><a href=\"#java代码实现\" class=\"headerlink\" title=\"java代码实现\"></a>java代码实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hanoi</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">new</span> Hanoi().move(<span class=\"number\">64</span>,<span class=\"string\">\"A\"</span>,<span class=\"string\">\"B\"</span>,<span class=\"string\">\"C\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 移动一步</div><div class=\"line\">     * <span class=\"doctag\">@param</span> n 第n层的盘子</div><div class=\"line\">     * <span class=\"doctag\">@param</span> a a柱子（盘子所在位置）</div><div class=\"line\">     * <span class=\"doctag\">@param</span> b b柱子（临时的位置）</div><div class=\"line\">     * <span class=\"doctag\">@param</span> c c柱子（盘子最终的目的地）</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">(<span class=\"keyword\">int</span> n, String a, String b, String c)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(n == <span class=\"number\">1</span>)&#123;</div><div class=\"line\">            System.out.println(n + <span class=\"string\">\"由\"</span> + a + <span class=\"string\">\"移动到\"</span> + c);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            move(n-<span class=\"number\">1</span>,a,c,b);</div><div class=\"line\">            System.out.println(n + <span class=\"string\">\"由\"</span> + a + <span class=\"string\">\"移动到\"</span> + c);</div><div class=\"line\">            move(n-<span class=\"number\">1</span>,b,a,c);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<h2 id=\"背景：\"><a href=\"#背景：\" class=\"headerlink\" title=\"背景：\"></a>背景：</h2><p>　　河内之塔(Towers of Hanoi)是法国人M.Claus(Lucas)于1883年从泰国带至法国的，河内为越战时北越的首都，即现在的胡志明市；1883年法国数学家 Edouard Lucas曾提及这个故事，据说创世纪时Benares有一座波罗教塔，是由三支钻石棒（Pag）所支撑，开始时神在第一根棒上放置64个由上至下依由小 至大排列的金盘（Disc），并命令僧侣将所有的金盘从第一根石棒移至第三根石棒，且搬运过程中遵守大盘子在小盘子之下的原则，若每日仅搬一个盘子，则当 盘子全数搬运完毕之时，此塔将毁损，而也就是世界末日来临之时。<br></p>","more":"<p></p>\n<h2 id=\"解法：\"><a href=\"#解法：\" class=\"headerlink\" title=\"解法：\"></a>解法：</h2><p>　　如果柱子标为ABC，要由A搬至C，在只有一个盘子时，就将它直接搬至C，当有两个盘子，就将B当作辅助柱。<br><img src=\"/2017/04/06/算法/河内塔/hanoi-1.jpg\" alt=\"logo\"><img src=\"/2017/04/06/算法/河内塔/hanoi-2.jpg\" alt=\"logo\"><img src=\"/2017/04/06/算法/河内塔/hanoi-3.jpg\" alt=\"logo\"><br>　　如果盘数超过2个，将第三个以下的盘子遮起来，就很简单了，每次处理两个盘子，也就是：A-&gt;B、A -&gt;C、B-&gt;C这三个步骤，而被遮住的部份，其实就是进入程式的递回处理。<br><img src=\"/2017/04/06/算法/河内塔/hanoi-4.jpg\" alt=\"logo\"><br>事实上，若有n个盘子，则移动完毕所需之次数为2^n - 1，所以当盘数为64时，则所需次数为：<br>2^64 - 1 = 18446744073709551615<br>为5.05390248594782e+16年，也就是约5000世纪，如果对这数字没什么概念，就假设每秒钟搬一个盘子好了，也要约5850亿年左右。</p>\n<h2 id=\"java代码实现\"><a href=\"#java代码实现\" class=\"headerlink\" title=\"java代码实现\"></a>java代码实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hanoi</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">new</span> Hanoi().move(<span class=\"number\">64</span>,<span class=\"string\">\"A\"</span>,<span class=\"string\">\"B\"</span>,<span class=\"string\">\"C\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 移动一步</div><div class=\"line\">     * <span class=\"doctag\">@param</span> n 第n层的盘子</div><div class=\"line\">     * <span class=\"doctag\">@param</span> a a柱子（盘子所在位置）</div><div class=\"line\">     * <span class=\"doctag\">@param</span> b b柱子（临时的位置）</div><div class=\"line\">     * <span class=\"doctag\">@param</span> c c柱子（盘子最终的目的地）</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">move</span><span class=\"params\">(<span class=\"keyword\">int</span> n, String a, String b, String c)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(n == <span class=\"number\">1</span>)&#123;</div><div class=\"line\">            System.out.println(n + <span class=\"string\">\"由\"</span> + a + <span class=\"string\">\"移动到\"</span> + c);</div><div class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">            move(n-<span class=\"number\">1</span>,a,c,b);</div><div class=\"line\">            System.out.println(n + <span class=\"string\">\"由\"</span> + a + <span class=\"string\">\"移动到\"</span> + c);</div><div class=\"line\">            move(n-<span class=\"number\">1</span>,b,a,c);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"虚拟机中linux系统启动的tomcat无法在本机访问的问题","date":"2017-03-10T09:00:04.000Z","_content":"背景：在wmware中安装linux后安装好数据库，JDK及tomcat后启动服务，虚拟机中可以访问，但是主机却无法访问，但是同时主机和虚拟机之间可以ping的通。\n<!-- more -->\n## 网上查阅资料后\n### 第一种解决方法是关闭虚拟机中的防火墙服务。桌面--管理--安全级别与防火墙，将防火墙设置为：disable即可。或用root登录后，执行\n``` shell\nservice iptables stop --停止\nservice iptables start --启动\n```\n### 第二种解决方案：\n第一种解决方案是相当于端口全部开放，这样难免会降低服务器的安全性。因此，既然可以更改全部端口，则因此也会存在更改局部端口开发关闭的设置。\n局部端口的开发。\n其实，则就是我们第二种解决方案：\n修改Linux系统防火墙配置需要修改 /etc/sysconfig/iptables 这个文件，如果要开放哪个端口，在里面添加一条\n``` shell\n-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT\n```\n就可以了，其中 8080 是要开放的端口号，然后重新启动linux的防火墙服务，\n``` shell\n/etc/init.d/iptables restart\n```\n原文：[http://blog.sina.com.cn/s/blog_8e5354210101koo3.html](http://blog.sina.com.cn/s/blog_8e5354210101koo3.html)\n","source":"_posts/虚拟机/虚拟机中linux系统启动的tomcat无法在本机访问的问题.md","raw":"---\ntitle: 虚拟机中linux系统启动的tomcat无法在本机访问的问题\ndate: 2017-03-10 17:00:04\ncategories: 虚拟机\ntags:\n - Tomcat\n - Linux\n - 防火墙\n---\n背景：在wmware中安装linux后安装好数据库，JDK及tomcat后启动服务，虚拟机中可以访问，但是主机却无法访问，但是同时主机和虚拟机之间可以ping的通。\n<!-- more -->\n## 网上查阅资料后\n### 第一种解决方法是关闭虚拟机中的防火墙服务。桌面--管理--安全级别与防火墙，将防火墙设置为：disable即可。或用root登录后，执行\n``` shell\nservice iptables stop --停止\nservice iptables start --启动\n```\n### 第二种解决方案：\n第一种解决方案是相当于端口全部开放，这样难免会降低服务器的安全性。因此，既然可以更改全部端口，则因此也会存在更改局部端口开发关闭的设置。\n局部端口的开发。\n其实，则就是我们第二种解决方案：\n修改Linux系统防火墙配置需要修改 /etc/sysconfig/iptables 这个文件，如果要开放哪个端口，在里面添加一条\n``` shell\n-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT\n```\n就可以了，其中 8080 是要开放的端口号，然后重新启动linux的防火墙服务，\n``` shell\n/etc/init.d/iptables restart\n```\n原文：[http://blog.sina.com.cn/s/blog_8e5354210101koo3.html](http://blog.sina.com.cn/s/blog_8e5354210101koo3.html)\n","slug":"虚拟机/虚拟机中linux系统启动的tomcat无法在本机访问的问题","published":1,"updated":"2017-03-12T15:23:38.474Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj43taah9005tr8sy6wm3390w","content":"<p>背景：在wmware中安装linux后安装好数据库，JDK及tomcat后启动服务，虚拟机中可以访问，但是主机却无法访问，但是同时主机和虚拟机之间可以ping的通。<br><a id=\"more\"></a></p>\n<h2 id=\"网上查阅资料后\"><a href=\"#网上查阅资料后\" class=\"headerlink\" title=\"网上查阅资料后\"></a>网上查阅资料后</h2><h3 id=\"第一种解决方法是关闭虚拟机中的防火墙服务。桌面–管理–安全级别与防火墙，将防火墙设置为：disable即可。或用root登录后，执行\"><a href=\"#第一种解决方法是关闭虚拟机中的防火墙服务。桌面–管理–安全级别与防火墙，将防火墙设置为：disable即可。或用root登录后，执行\" class=\"headerlink\" title=\"第一种解决方法是关闭虚拟机中的防火墙服务。桌面–管理–安全级别与防火墙，将防火墙设置为：disable即可。或用root登录后，执行\"></a>第一种解决方法是关闭虚拟机中的防火墙服务。桌面–管理–安全级别与防火墙，将防火墙设置为：disable即可。或用root登录后，执行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">service iptables stop --停止</div><div class=\"line\">service iptables start --启动</div></pre></td></tr></table></figure>\n<h3 id=\"第二种解决方案：\"><a href=\"#第二种解决方案：\" class=\"headerlink\" title=\"第二种解决方案：\"></a>第二种解决方案：</h3><p>第一种解决方案是相当于端口全部开放，这样难免会降低服务器的安全性。因此，既然可以更改全部端口，则因此也会存在更改局部端口开发关闭的设置。<br>局部端口的开发。<br>其实，则就是我们第二种解决方案：<br>修改Linux系统防火墙配置需要修改 /etc/sysconfig/iptables 这个文件，如果要开放哪个端口，在里面添加一条<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT</div></pre></td></tr></table></figure></p>\n<p>就可以了，其中 8080 是要开放的端口号，然后重新启动linux的防火墙服务，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/init.d/iptables restart</div></pre></td></tr></table></figure></p>\n<p>原文：<a href=\"http://blog.sina.com.cn/s/blog_8e5354210101koo3.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_8e5354210101koo3.html</a></p>\n","excerpt":"<p>背景：在wmware中安装linux后安装好数据库，JDK及tomcat后启动服务，虚拟机中可以访问，但是主机却无法访问，但是同时主机和虚拟机之间可以ping的通。<br></p>","more":"<p></p>\n<h2 id=\"网上查阅资料后\"><a href=\"#网上查阅资料后\" class=\"headerlink\" title=\"网上查阅资料后\"></a>网上查阅资料后</h2><h3 id=\"第一种解决方法是关闭虚拟机中的防火墙服务。桌面–管理–安全级别与防火墙，将防火墙设置为：disable即可。或用root登录后，执行\"><a href=\"#第一种解决方法是关闭虚拟机中的防火墙服务。桌面–管理–安全级别与防火墙，将防火墙设置为：disable即可。或用root登录后，执行\" class=\"headerlink\" title=\"第一种解决方法是关闭虚拟机中的防火墙服务。桌面–管理–安全级别与防火墙，将防火墙设置为：disable即可。或用root登录后，执行\"></a>第一种解决方法是关闭虚拟机中的防火墙服务。桌面–管理–安全级别与防火墙，将防火墙设置为：disable即可。或用root登录后，执行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">service iptables stop --停止</div><div class=\"line\">service iptables start --启动</div></pre></td></tr></table></figure>\n<h3 id=\"第二种解决方案：\"><a href=\"#第二种解决方案：\" class=\"headerlink\" title=\"第二种解决方案：\"></a>第二种解决方案：</h3><p>第一种解决方案是相当于端口全部开放，这样难免会降低服务器的安全性。因此，既然可以更改全部端口，则因此也会存在更改局部端口开发关闭的设置。<br>局部端口的开发。<br>其实，则就是我们第二种解决方案：<br>修改Linux系统防火墙配置需要修改 /etc/sysconfig/iptables 这个文件，如果要开放哪个端口，在里面添加一条<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT</div></pre></td></tr></table></figure></p>\n<p>就可以了，其中 8080 是要开放的端口号，然后重新启动linux的防火墙服务，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/init.d/iptables restart</div></pre></td></tr></table></figure></p>\n<p>原文：<a href=\"http://blog.sina.com.cn/s/blog_8e5354210101koo3.html\">http://blog.sina.com.cn/s/blog_8e5354210101koo3.html</a></p>"}],"PostAsset":[{"_id":"source/_posts/elasticsearch/安装Elasticsearch/307afbba-50a9-49f0-8500-8e362ff809ae.png","post":"cj43taad40012r8syc8tmuim1","slug":"307afbba-50a9-49f0-8500-8e362ff809ae.png","modified":1,"renderable":1},{"_id":"source/_posts/jee/HttpServletRequest常用获取URL的方法/7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png","post":"cj43taae5001zr8sye0po3ywp","slug":"7a5e6bc6-ef4c-461b-8a38-a654646c3d44.png","modified":1,"renderable":1},{"_id":"source/_posts/maven/idea新建多模块maven项目（树结构和水平结构）/82811fb4-084a-471a-a470-12957c376cd4.png","post":"cj43taaef002fr8syl2ww91hc","slug":"82811fb4-084a-471a-a470-12957c376cd4.png","modified":1,"renderable":1},{"_id":"source/_posts/maven/maven创建普通web项目/e4dd0c75-7d51-4b91-a4c0-7a401477c461.png","post":"cj43taaeh002jr8syo74v5i4v","slug":"e4dd0c75-7d51-4b91-a4c0-7a401477c461.png","modified":1,"renderable":1},{"_id":"source/_posts/java基础/ThreadLocal理解/6a80dba1-4290-4fbc-8ca2-06be465d886a.png","post":"cj43taae2001wr8syx9t8vhqh","slug":"6a80dba1-4290-4fbc-8ca2-06be465d886a.png","modified":1,"renderable":1},{"_id":"source/_posts/java基础/ThreadLocal理解/cf785e60-9c92-4bfb-977c-4e32a114e809.png","post":"cj43taae2001wr8syx9t8vhqh","slug":"cf785e60-9c92-4bfb-977c-4e32a114e809.png","modified":1,"renderable":1},{"_id":"source/_posts/python/1-初步摸索python/57G3PTFC9YBV`2CH9A.png","post":"cj43taagf004zr8syvbyzkr9n","slug":"57G3PTFC9YBV`2CH9A.png","modified":1,"renderable":1},{"_id":"source/_posts/python/1-初步摸索python/Q.png","post":"cj43taagf004zr8syvbyzkr9n","slug":"Q.png","modified":1,"renderable":1},{"_id":"source/_posts/工具/Eclipse中设计tomcat的内存大小/45ca9205-f30f-42fe-97b3-3efee151ba7d.png","post":"cj43taago005cr8sytlrtl9b2","slug":"45ca9205-f30f-42fe-97b3-3efee151ba7d.png","modified":1,"renderable":1},{"_id":"source/_posts/工具/Eclipse中设计tomcat的内存大小/6295420a-7dd6-4bc7-9001-c964155695b3.png","post":"cj43taago005cr8sytlrtl9b2","slug":"6295420a-7dd6-4bc7-9001-c964155695b3.png","modified":1,"renderable":1},{"_id":"source/_posts/maven/创建普通maven项目/516becd9-201b-4bbb-a49a-45dacec4195f.png","post":"cj43taaej002mr8sypzdzopp4","slug":"516becd9-201b-4bbb-a49a-45dacec4195f.png","modified":1,"renderable":1},{"_id":"source/_posts/maven/创建普通maven项目/a1d9cddc-205b-4b3f-8bfc-5ff884c30df9.png","post":"cj43taaej002mr8sypzdzopp4","slug":"a1d9cddc-205b-4b3f-8bfc-5ff884c30df9.png","modified":1,"renderable":1},{"_id":"source/_posts/maven/创建普通maven项目/aafa98fb-2088-4af2-bcfb-804d391c81ba.png","post":"cj43taaej002mr8sypzdzopp4","slug":"aafa98fb-2088-4af2-bcfb-804d391c81ba.png","modified":1,"renderable":1},{"_id":"source/_posts/算法/河内塔/hanoi-1.jpg","post":"cj43taah7005sr8sy0bs20e7e","slug":"hanoi-1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/算法/河内塔/hanoi-2.jpg","post":"cj43taah7005sr8sy0bs20e7e","slug":"hanoi-2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/算法/河内塔/hanoi-3.jpg","post":"cj43taah7005sr8sy0bs20e7e","slug":"hanoi-3.jpg","modified":1,"renderable":1},{"_id":"source/_posts/算法/河内塔/hanoi-4.jpg","post":"cj43taah7005sr8sy0bs20e7e","slug":"hanoi-4.jpg","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cj43taa890000r8syyw8fr38z","category_id":"cj43taa8l0003r8syacpdu4gw","_id":"cj43taa8u0006r8syqb0ysbgy"},{"post_id":"cj43taac70009r8syeuyo5fhs","category_id":"cj43taaca000br8syicu2y79o","_id":"cj43taacm000kr8syzropjp0r"},{"post_id":"cj43taac9000ar8syajbf46jc","category_id":"cj43taaca000br8syicu2y79o","_id":"cj43taacs000pr8syrs6bf8md"},{"post_id":"cj43taacb000dr8sy799jjzyl","category_id":"cj43taaca000br8syicu2y79o","_id":"cj43taacx000vr8syu09emyqp"},{"post_id":"cj43taace000er8syc8vifuk1","category_id":"cj43taact000rr8syl57x1jtq","_id":"cj43taad60013r8sybmcgvb19"},{"post_id":"cj43taad20010r8symfcm0ekb","category_id":"cj43taacz000yr8sy0u9qbw27","_id":"cj43taadb0018r8sy3779vc7q"},{"post_id":"cj43taacf000fr8sy410eu00h","category_id":"cj43taacz000yr8sy0u9qbw27","_id":"cj43taade001br8syslnbrddo"},{"post_id":"cj43taack000jr8syn7ky5c0b","category_id":"cj43taacz000yr8sy0u9qbw27","_id":"cj43taadi001fr8syek2o2xbn"},{"post_id":"cj43taacn000lr8syiyagwmio","category_id":"cj43taacz000yr8sy0u9qbw27","_id":"cj43taadq001lr8syelmolwhl"},{"post_id":"cj43taacq000or8syvc0ody4e","category_id":"cj43taadi001gr8sy2box5ipp","_id":"cj43taadx001rr8sy8ulta49b"},{"post_id":"cj43taado001kr8sygz0jlw52","category_id":"cj43taadi001gr8sy2box5ipp","_id":"cj43taae1001ur8syk9w4hfoo"},{"post_id":"cj43taadq001or8sy4plv090q","category_id":"cj43taadi001gr8sy2box5ipp","_id":"cj43taae4001xr8sygqxqc0qh"},{"post_id":"cj43taacs000qr8syq20uks94","category_id":"cj43taacz000yr8sy0u9qbw27","_id":"cj43taae60020r8sye21gb0h1"},{"post_id":"cj43taads001qr8syetoow7of","category_id":"cj43taadi001gr8sy2box5ipp","_id":"cj43taae70023r8sya8np85qk"},{"post_id":"cj43taacv000tr8syhaqrb5af","category_id":"cj43taacz000yr8sy0u9qbw27","_id":"cj43taaeb0027r8sy65kyyxvg"},{"post_id":"cj43taacx000wr8syugquq82k","category_id":"cj43taacz000yr8sy0u9qbw27","_id":"cj43taaec002br8syof8krels"},{"post_id":"cj43taad40012r8syc8tmuim1","category_id":"cj43taae80025r8syoeuv08pm","_id":"cj43taaeh002hr8syjbzlys94"},{"post_id":"cj43taad90016r8syvx14hiwi","category_id":"cj43taae80025r8syoeuv08pm","_id":"cj43taaek002or8syiudg6fc9"},{"post_id":"cj43taadd0019r8syyydjc2o5","category_id":"cj43taaei002kr8syj8dr44pq","_id":"cj43taaep002ur8sykb8pee2o"},{"post_id":"cj43taadf001dr8sy5lzhxo5q","category_id":"cj43taaei002kr8syj8dr44pq","_id":"cj43taaet002zr8sy05qndax7"},{"post_id":"cj43taadh001er8sy7cnx3obv","category_id":"cj43taaei002kr8syj8dr44pq","_id":"cj43taaex0036r8syc0yqo9et"},{"post_id":"cj43taadi001hr8syybzbpfv9","category_id":"cj43taaei002kr8syj8dr44pq","_id":"cj43taaf3003dr8syzfu5e4eb"},{"post_id":"cj43taady001tr8syely3pnol","category_id":"cj43taaey0037r8syx2mval8p","_id":"cj43taaf8003ir8syfzw9qx3y"},{"post_id":"cj43taae2001wr8syx9t8vhqh","category_id":"cj43taaey0037r8syx2mval8p","_id":"cj43taaff003pr8sysxzjtgwq"},{"post_id":"cj43taae5001zr8sye0po3ywp","category_id":"cj43taaf8003jr8symzqclghb","_id":"cj43taafl003ur8syzmh46a0d"},{"post_id":"cj43taae60022r8sy7f6ylovq","category_id":"cj43taaf8003jr8symzqclghb","_id":"cj43taafp0041r8sys2e746t6"},{"post_id":"cj43taae80026r8syrtiyyogc","category_id":"cj43taaf8003jr8symzqclghb","_id":"cj43taaft0046r8sy9yoyugel"},{"post_id":"cj43taaeb002ar8sy6d8d95ha","category_id":"cj43taaf8003jr8symzqclghb","_id":"cj43taafz004cr8syby95flql"},{"post_id":"cj43taaed002dr8sy1w0l6r3c","category_id":"cj43taaft0048r8sy2ivpd1pj","_id":"cj43taag4004hr8sywdpl5bl4"},{"post_id":"cj43taaef002fr8syl2ww91hc","category_id":"cj43taag2004fr8sy8rugaj28","_id":"cj43taagb004pr8sybd4ahgj3"},{"post_id":"cj43taaeh002jr8syo74v5i4v","category_id":"cj43taag2004fr8sy8rugaj28","_id":"cj43taage004vr8syp3o4rgb3"},{"post_id":"cj43taaej002mr8sypzdzopp4","category_id":"cj43taag2004fr8sy8rugaj28","_id":"cj43taagh0051r8syrtjkxzjn"},{"post_id":"cj43taael002pr8syceul1n2f","category_id":"cj43taag2004fr8sy8rugaj28","_id":"cj43taagl0057r8syjiz07edt"},{"post_id":"cj43taaem002rr8syc1hcqf53","category_id":"cj43taag2004fr8sy8rugaj28","_id":"cj43taagq005dr8syr0l10tki"},{"post_id":"cj43taaeo002tr8sy7btzmsfe","category_id":"cj43taagl0059r8sy4fhfhapl","_id":"cj43taah3005ir8sy5l34mdse"},{"post_id":"cj43taaeq002wr8syjqney4ov","category_id":"cj43taagr005fr8sy27ag77af","_id":"cj43taah7005qr8syq5rhacet"},{"post_id":"cj43taaes002yr8syfnzkij7v","category_id":"cj43taagr005fr8sy27ag77af","_id":"cj43taaha005ur8syqoh0da0r"},{"post_id":"cj43taaeu0032r8syfpc4pogv","category_id":"cj43taah7005rr8syuae412ou","_id":"cj43taahd005xr8syeo2qqgsp"},{"post_id":"cj43taaew0035r8syovtbj0ib","category_id":"cj43taagr005fr8sy27ag77af","_id":"cj43taahf0060r8sy697z8ptq"},{"post_id":"cj43taaey0039r8syqkhsmgop","category_id":"cj43taagr005fr8sy27ag77af","_id":"cj43taahg0063r8sywx43r7rd"},{"post_id":"cj43taaf1003cr8syr7nglxc0","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahi0067r8sytqx6gvqk"},{"post_id":"cj43taaf4003fr8syvb47tt26","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahj006cr8syzbar4qws"},{"post_id":"cj43taaf6003gr8syy4djqf31","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahk006hr8syxziqb9kb"},{"post_id":"cj43taaf9003lr8sygreug464","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahl006mr8sybx9pdpjr"},{"post_id":"cj43taafc003nr8sy9kqlo1zg","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahn006pr8sy8ff3ohep"},{"post_id":"cj43taafg003rr8syies7o5r6","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taaho006sr8syktt3i74c"},{"post_id":"cj43taafi003sr8symqmdkwmh","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahp006xr8syaunbz52n"},{"post_id":"cj43taafm003wr8sy37k15t1i","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahq0072r8syvehahouk"},{"post_id":"cj43taafn003yr8sy4blprzm3","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahr0074r8sy8rfmngdu"},{"post_id":"cj43taafq0043r8symb1e4rwp","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahs0079r8sygs3whuk6"},{"post_id":"cj43taafr0045r8sy7yldc9lw","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahu007dr8syd6eh7y4c"},{"post_id":"cj43taafx004br8syspid9mvh","category_id":"cj43taagl0059r8sy4fhfhapl","_id":"cj43taahv007hr8syb2ee7pwu"},{"post_id":"cj43taag0004er8syb9w82kgm","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahw007kr8syh49q65dr"},{"post_id":"cj43taag2004gr8sy8mnmccqz","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahx007or8syu1veb6qv"},{"post_id":"cj43taag4004jr8sy8vb1e83e","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahx007sr8sys9b9173i"},{"post_id":"cj43taag6004mr8syuh9x5ikx","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taahy007wr8syriyailqr"},{"post_id":"cj43taag9004or8syhfwcb13f","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taai00080r8syhvvv34i6"},{"post_id":"cj43taagc004tr8syyqdva1za","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taai10084r8sywldh6q69"},{"post_id":"cj43taagd004ur8sywhd79wpu","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taai20088r8sykhal0qka"},{"post_id":"cj43taagf004zr8syvbyzkr9n","category_id":"cj43taai20085r8sykfa37aya","_id":"cj43taai4008cr8syrgs9zwc7"},{"post_id":"cj43taagg0050r8syimn19y6c","category_id":"cj43taahf0061r8synjib3241","_id":"cj43taai6008fr8sy9zsdqeau"},{"post_id":"cj43taagi0055r8sy0gb4jsvf","category_id":"cj43taai20085r8sykfa37aya","_id":"cj43taai7008kr8sy5cjjpq1i"},{"post_id":"cj43taagj0056r8sylfwtn4v3","category_id":"cj43taai6008gr8syj1l1690b","_id":"cj43taai7008nr8syccl1ut7k"},{"post_id":"cj43taagm005br8syyqovc36o","category_id":"cj43taai7008lr8sygs5ubgvk","_id":"cj43taai8008qr8syb1hz6ky8"},{"post_id":"cj43taago005cr8sytlrtl9b2","category_id":"cj43taai7008lr8sygs5ubgvk","_id":"cj43taai9008ur8sytwwlpi1l"},{"post_id":"cj43taags005gr8sygo3d8o1y","category_id":"cj43taai7008lr8sygs5ubgvk","_id":"cj43taaia008yr8syb8hm68js"},{"post_id":"cj43taah2005hr8sytdf73x1g","category_id":"cj43taai7008lr8sygs5ubgvk","_id":"cj43taaib0092r8syfagzk6hk"},{"post_id":"cj43taah4005lr8sydekoay6x","category_id":"cj43taai7008lr8sygs5ubgvk","_id":"cj43taaid0096r8syfjeredio"},{"post_id":"cj43taah5005nr8syyo0fttr1","category_id":"cj43taaic0094r8syxh153cyo","_id":"cj43taaig009ar8sy0gio55al"},{"post_id":"cj43taah7005sr8sy0bs20e7e","category_id":"cj43taaie0097r8syg1akocob","_id":"cj43taaih009er8syrr6305o8"},{"post_id":"cj43taah9005tr8sy6wm3390w","category_id":"cj43taaig009cr8syiyy6df0w","_id":"cj43taaii009gr8syypplw2wa"}],"PostTag":[{"post_id":"cj43taa890000r8syyw8fr38z","tag_id":"cj43taa8n0004r8syr33o6tmx","_id":"cj43taa910007r8syi3ndiogg"},{"post_id":"cj43taa890000r8syyw8fr38z","tag_id":"cj43taa8r0005r8sy603n0mwf","_id":"cj43taa910008r8syzgpv3sgs"},{"post_id":"cj43taac70009r8syeuyo5fhs","tag_id":"cj43taacb000cr8sy10nwx212","_id":"cj43taack000ir8sy7gbgbm4l"},{"post_id":"cj43taac9000ar8syajbf46jc","tag_id":"cj43taacb000cr8sy10nwx212","_id":"cj43taacw000ur8sy4bx0rfc0"},{"post_id":"cj43taac9000ar8syajbf46jc","tag_id":"cj43taacp000nr8syiyfh1bgf","_id":"cj43taacz000xr8sye7qslcuo"},{"post_id":"cj43taacb000dr8sy799jjzyl","tag_id":"cj43taacb000cr8sy10nwx212","_id":"cj43taad40011r8syy1fx0ddr"},{"post_id":"cj43taace000er8syc8vifuk1","tag_id":"cj43taad1000zr8syfbdgu1fc","_id":"cj43taadb0017r8syx3kyefpy"},{"post_id":"cj43taacf000fr8sy410eu00h","tag_id":"cj43taad80015r8syo4x8b2kq","_id":"cj43taadn001jr8sytotws3pw"},{"post_id":"cj43taacf000fr8sy410eu00h","tag_id":"cj43taadf001cr8sy3q5ycrhg","_id":"cj43taadq001nr8symzztiqv5"},{"post_id":"cj43taack000jr8syn7ky5c0b","tag_id":"cj43taadk001ir8syczzgwq9u","_id":"cj43taae80024r8syd62zd8sa"},{"post_id":"cj43taack000jr8syn7ky5c0b","tag_id":"cj43taads001pr8sy1lmqs84s","_id":"cj43taaeb0028r8syzvqo961o"},{"post_id":"cj43taack000jr8syn7ky5c0b","tag_id":"cj43taae1001vr8syiyijnine","_id":"cj43taaed002cr8syhnoc9lji"},{"post_id":"cj43taacn000lr8syiyagwmio","tag_id":"cj43taadk001ir8syczzgwq9u","_id":"cj43taaeh002ir8sygswxb61y"},{"post_id":"cj43taacn000lr8syiyagwmio","tag_id":"cj43taaeb0029r8syzlxgbqs0","_id":"cj43taaej002lr8syoveinlja"},{"post_id":"cj43taacq000or8syvc0ody4e","tag_id":"cj43taaeg002gr8syejv7n1yc","_id":"cj43taaeu0031r8sydn06eonv"},{"post_id":"cj43taacq000or8syvc0ody4e","tag_id":"cj43taaek002nr8sy7067jtyx","_id":"cj43taaev0033r8syhzjn6yxo"},{"post_id":"cj43taacq000or8syvc0ody4e","tag_id":"cj43taaeo002sr8sywgy3juhc","_id":"cj43taaey0038r8sy6htxekvz"},{"post_id":"cj43taacs000qr8syq20uks94","tag_id":"cj43taadk001ir8syczzgwq9u","_id":"cj43taaf0003ar8syratwsmpc"},{"post_id":"cj43taacv000tr8syhaqrb5af","tag_id":"cj43taadk001ir8syczzgwq9u","_id":"cj43taaf9003kr8sy1m7n1pyj"},{"post_id":"cj43taacv000tr8syhaqrb5af","tag_id":"cj43taaf0003br8syd0ddxvy4","_id":"cj43taafb003mr8sy72bqmwcl"},{"post_id":"cj43taacx000wr8syugquq82k","tag_id":"cj43taadk001ir8syczzgwq9u","_id":"cj43taafn003xr8syucg4ptzc"},{"post_id":"cj43taacx000wr8syugquq82k","tag_id":"cj43taafe003or8syqk51iva3","_id":"cj43taafo003zr8syxu96d771"},{"post_id":"cj43taad20010r8symfcm0ekb","tag_id":"cj43taadk001ir8syczzgwq9u","_id":"cj43taafq0044r8syralsts7c"},{"post_id":"cj43taad40012r8syc8tmuim1","tag_id":"cj43taafp0040r8syp28qnfxd","_id":"cj43taafx004ar8sy4vv1210o"},{"post_id":"cj43taad90016r8syvx14hiwi","tag_id":"cj43taafp0040r8syp28qnfxd","_id":"cj43taag6004lr8sypt0goyx6"},{"post_id":"cj43taad90016r8syvx14hiwi","tag_id":"cj43taafz004dr8syfbxr2lva","_id":"cj43taag9004nr8syearu4jqs"},{"post_id":"cj43taadd0019r8syyydjc2o5","tag_id":"cj43taag4004ir8syfin8g679","_id":"cj43taagc004sr8syw7f9wa3k"},{"post_id":"cj43taadf001dr8sy5lzhxo5q","tag_id":"cj43taag4004ir8syfin8g679","_id":"cj43taagf004yr8sydjtoy747"},{"post_id":"cj43taadh001er8sy7cnx3obv","tag_id":"cj43taag4004ir8syfin8g679","_id":"cj43taagi0054r8syci9kqeuh"},{"post_id":"cj43taadi001hr8syybzbpfv9","tag_id":"cj43taag4004ir8syfin8g679","_id":"cj43taagm005ar8sya178zeam"},{"post_id":"cj43taado001kr8sygz0jlw52","tag_id":"cj43taaeg002gr8syejv7n1yc","_id":"cj43taah5005mr8syphpo6zip"},{"post_id":"cj43taado001kr8sygz0jlw52","tag_id":"cj43taagr005er8symhjr607e","_id":"cj43taah6005or8sygmp8kiur"},{"post_id":"cj43taadq001or8sy4plv090q","tag_id":"cj43taaeg002gr8syejv7n1yc","_id":"cj43taahi0066r8sy09wns3tf"},{"post_id":"cj43taadq001or8sy4plv090q","tag_id":"cj43taah7005pr8sypngd5ip4","_id":"cj43taahi0068r8sy5jtkoxe3"},{"post_id":"cj43taadq001or8sy4plv090q","tag_id":"cj43taaha005vr8syx16w70km","_id":"cj43taahj006br8sy527amaj5"},{"post_id":"cj43taadq001or8sy4plv090q","tag_id":"cj43taahe005yr8synr4d40us","_id":"cj43taahk006dr8syawpcrspp"},{"post_id":"cj43taadq001or8sy4plv090q","tag_id":"cj43taahg0062r8syk90iswxu","_id":"cj43taahk006gr8syxchjxyxp"},{"post_id":"cj43taads001qr8syetoow7of","tag_id":"cj43taaeg002gr8syejv7n1yc","_id":"cj43taahl006ir8sy88da2h98"},{"post_id":"cj43taads001qr8syetoow7of","tag_id":"cj43taahj006ar8syfseesxbf","_id":"cj43taahl006lr8syz5cbtfw3"},{"post_id":"cj43taady001tr8syely3pnol","tag_id":"cj43taahk006fr8syhbmwm2de","_id":"cj43taaho006tr8sykmt7b3w2"},{"post_id":"cj43taady001tr8syely3pnol","tag_id":"cj43taahl006kr8syjcidbat6","_id":"cj43taaho006vr8sy5i41maii"},{"post_id":"cj43taady001tr8syely3pnol","tag_id":"cj43taahm006or8syw6fj2b09","_id":"cj43taahp006yr8syhtbb1789"},{"post_id":"cj43taae2001wr8syx9t8vhqh","tag_id":"cj43taahn006rr8sy4nbczby1","_id":"cj43taahp0070r8sy7m50p588"},{"post_id":"cj43taae5001zr8sye0po3ywp","tag_id":"cj43taahp006wr8syw6i45i9m","_id":"cj43taahs0077r8syuj7bpuoo"},{"post_id":"cj43taae5001zr8sye0po3ywp","tag_id":"cj43taahq0071r8sywvyigstq","_id":"cj43taahs0078r8sy9p93nswk"},{"post_id":"cj43taae60022r8sy7f6ylovq","tag_id":"cj43taahr0075r8syfnvzf7eg","_id":"cj43taaht007cr8sypx0dkdcw"},{"post_id":"cj43taae80026r8syrtiyyogc","tag_id":"cj43taahs007br8syflk7s4uy","_id":"cj43taahv007gr8sys17lnxgu"},{"post_id":"cj43taaeb002ar8sy6d8d95ha","tag_id":"cj43taahu007fr8sy2oouozwj","_id":"cj43taahw007nr8syqyeftg6g"},{"post_id":"cj43taaeb002ar8sy6d8d95ha","tag_id":"cj43taahv007jr8syt7uum989","_id":"cj43taahx007qr8sylfggslv5"},{"post_id":"cj43taaed002dr8sy1w0l6r3c","tag_id":"cj43taahw007mr8symypq0mit","_id":"cj43taahx007tr8syjvjb73n9"},{"post_id":"cj43taaef002fr8syl2ww91hc","tag_id":"cj43taahx007rr8syxjke7498","_id":"cj43taahz007yr8sy6el2mzo9"},{"post_id":"cj43taaeh002jr8syo74v5i4v","tag_id":"cj43taahx007rr8syxjke7498","_id":"cj43taai10082r8sy3mxkyxsg"},{"post_id":"cj43taaej002mr8sypzdzopp4","tag_id":"cj43taahx007rr8syxjke7498","_id":"cj43taai20086r8sybg859a7x"},{"post_id":"cj43taael002pr8syceul1n2f","tag_id":"cj43taahx007rr8syxjke7498","_id":"cj43taai30089r8sy0876z266"},{"post_id":"cj43taaem002rr8syc1hcqf53","tag_id":"cj43taahx007rr8syxjke7498","_id":"cj43taai6008hr8syqq2v3ghb"},{"post_id":"cj43taaem002rr8syc1hcqf53","tag_id":"cj43taai4008br8sysrirzizo","_id":"cj43taai6008ir8sy1j8uoyrn"},{"post_id":"cj43taaeo002tr8sy7btzmsfe","tag_id":"cj43taai5008er8sy5tmvyqrf","_id":"cj43taai9008sr8symwpi2jbb"},{"post_id":"cj43taaeo002tr8sy7btzmsfe","tag_id":"cj43taai6008jr8synqlc2km2","_id":"cj43taai9008tr8sy7xvwsufu"},{"post_id":"cj43taaeo002tr8sy7btzmsfe","tag_id":"cj43taai7008mr8sywikuqhhf","_id":"cj43taaia008xr8syf986llaa"},{"post_id":"cj43taaeq002wr8syjqney4ov","tag_id":"cj43taai8008pr8syjkhhwwqu","_id":"cj43taaib0091r8sy9lzbf9hz"},{"post_id":"cj43taaeq002wr8syjqney4ov","tag_id":"cj43taai9008vr8syebqgl74t","_id":"cj43taaic0093r8syrr790uje"},{"post_id":"cj43taaes002yr8syfnzkij7v","tag_id":"cj43taai8008pr8syjkhhwwqu","_id":"cj43taaig0099r8sy205udbye"},{"post_id":"cj43taaes002yr8syfnzkij7v","tag_id":"cj43taaic0095r8symhzhqseh","_id":"cj43taaig009br8syulqeuh3d"},{"post_id":"cj43taaeu0032r8syfpc4pogv","tag_id":"cj43taaif0098r8sy5l6sur1i","_id":"cj43taaij009ir8sy1m6103qx"},{"post_id":"cj43taaeu0032r8syfpc4pogv","tag_id":"cj43taaih009dr8syxlyjk7mn","_id":"cj43taaij009jr8syxqxlty8v"},{"post_id":"cj43taaeu0032r8syfpc4pogv","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaik009lr8sy9c13xr5a"},{"post_id":"cj43taaew0035r8syovtbj0ib","tag_id":"cj43taai8008pr8syjkhhwwqu","_id":"cj43taail009or8sykf9tsli5"},{"post_id":"cj43taaew0035r8syovtbj0ib","tag_id":"cj43taaij009kr8syikwv9nnm","_id":"cj43taail009pr8syhpongtsq"},{"post_id":"cj43taaew0035r8syovtbj0ib","tag_id":"cj43taaik009mr8syfnoc0ynx","_id":"cj43taaim009rr8sykochl99m"},{"post_id":"cj43taaey0039r8syqkhsmgop","tag_id":"cj43taai8008pr8syjkhhwwqu","_id":"cj43taaim009tr8syqa3de4sd"},{"post_id":"cj43taaey0039r8syqkhsmgop","tag_id":"cj43taail009qr8syb5xopoe3","_id":"cj43taaim009ur8syntqfzhql"},{"post_id":"cj43taaf1003cr8syr7nglxc0","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaio009yr8syfxwmjnht"},{"post_id":"cj43taaf1003cr8syr7nglxc0","tag_id":"cj43taaim009vr8syxd1hven1","_id":"cj43taaio009zr8syjyxj6j3t"},{"post_id":"cj43taaf1003cr8syr7nglxc0","tag_id":"cj43taain009wr8symmjwzidd","_id":"cj43taaio00a1r8synzwuieiy"},{"post_id":"cj43taaf4003fr8syvb47tt26","tag_id":"cj43taain009xr8sydw2dr899","_id":"cj43taaip00a3r8syr75szrru"},{"post_id":"cj43taaf4003fr8syvb47tt26","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaip00a4r8syzcbt8uhm"},{"post_id":"cj43taaf6003gr8syy4djqf31","tag_id":"cj43taaim009vr8syxd1hven1","_id":"cj43taaiq00a7r8syqa8fra7m"},{"post_id":"cj43taaf6003gr8syy4djqf31","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaiq00a8r8syt00ytclg"},{"post_id":"cj43taaf9003lr8sygreug464","tag_id":"cj43taai4008br8sysrirzizo","_id":"cj43taair00abr8syrrpw43td"},{"post_id":"cj43taaf9003lr8sygreug464","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taair00acr8syj4smdke2"},{"post_id":"cj43taafc003nr8sy9kqlo1zg","tag_id":"cj43taair00aar8syv71zmyhk","_id":"cj43taait00afr8syhbnzsaoc"},{"post_id":"cj43taafc003nr8sy9kqlo1zg","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taait00agr8syys8ygdpb"},{"post_id":"cj43taafg003rr8syies7o5r6","tag_id":"cj43taair00aar8syv71zmyhk","_id":"cj43taaiw00ajr8sy1rm09njw"},{"post_id":"cj43taafg003rr8syies7o5r6","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaiw00akr8sytp5xupoe"},{"post_id":"cj43taafi003sr8symqmdkwmh","tag_id":"cj43taain009xr8sydw2dr899","_id":"cj43taaiz00anr8syqesvyt6a"},{"post_id":"cj43taafi003sr8symqmdkwmh","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaiz00aor8symsxza6sv"},{"post_id":"cj43taafm003wr8sy37k15t1i","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaj000arr8syzby7e857"},{"post_id":"cj43taafm003wr8sy37k15t1i","tag_id":"cj43taahx007rr8syxjke7498","_id":"cj43taaj100asr8syxe4v6ytg"},{"post_id":"cj43taafn003yr8sy4blprzm3","tag_id":"cj43taai5008er8sy5tmvyqrf","_id":"cj43taaj200avr8sycs4jg7hf"},{"post_id":"cj43taafn003yr8sy4blprzm3","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaj200awr8sydgr1suyo"},{"post_id":"cj43taafq0043r8symb1e4rwp","tag_id":"cj43taai5008er8sy5tmvyqrf","_id":"cj43taaj400azr8sy9739kp63"},{"post_id":"cj43taafq0043r8symb1e4rwp","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaj400b0r8syjqbyigk4"},{"post_id":"cj43taafr0045r8sy7yldc9lw","tag_id":"cj43taai5008er8sy5tmvyqrf","_id":"cj43taaj600b3r8syoxem0oiz"},{"post_id":"cj43taafr0045r8sy7yldc9lw","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaj600b4r8syok1olfmc"},{"post_id":"cj43taafv0049r8sykqrupq0v","tag_id":"cj43taai5008er8sy5tmvyqrf","_id":"cj43taaj700b7r8sytcxa8yj0"},{"post_id":"cj43taafv0049r8sykqrupq0v","tag_id":"cj43taaj600b5r8syjhswq1j7","_id":"cj43taaj700b8r8syh0emqmvy"},{"post_id":"cj43taafx004br8syspid9mvh","tag_id":"cj43taai5008er8sy5tmvyqrf","_id":"cj43taaj800bar8syivs3a51o"},{"post_id":"cj43taag0004er8syb9w82kgm","tag_id":"cj43taai5008er8sy5tmvyqrf","_id":"cj43taaj900bdr8syruymbmwo"},{"post_id":"cj43taag0004er8syb9w82kgm","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaj900ber8syrsmpz5cp"},{"post_id":"cj43taag2004gr8sy8mnmccqz","tag_id":"cj43taaj800bcr8syzmfs0g8l","_id":"cj43taajc00bhr8syluovyqw5"},{"post_id":"cj43taag2004gr8sy8mnmccqz","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taajc00bir8syb38bozk4"},{"post_id":"cj43taag4004jr8sy8vb1e83e","tag_id":"cj43taaj800bcr8syzmfs0g8l","_id":"cj43taajd00blr8sy0jdmlydh"},{"post_id":"cj43taag4004jr8sy8vb1e83e","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taajd00bmr8sy1ohygjyn"},{"post_id":"cj43taag6004mr8syuh9x5ikx","tag_id":"cj43taaj800bcr8syzmfs0g8l","_id":"cj43taajf00bpr8syopsbpyhx"},{"post_id":"cj43taag6004mr8syuh9x5ikx","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taajf00bqr8syk5n2i506"},{"post_id":"cj43taag9004or8syhfwcb13f","tag_id":"cj43taaje00bor8sy03dxzbxp","_id":"cj43taajg00btr8syzg1b7lon"},{"post_id":"cj43taag9004or8syhfwcb13f","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taajg00bur8syv5x3zw9b"},{"post_id":"cj43taagc004tr8syyqdva1za","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taaji00byr8syjqos110t"},{"post_id":"cj43taagc004tr8syyqdva1za","tag_id":"cj43taajg00bvr8syjcffpwi7","_id":"cj43taaji00bzr8sy5ibzii8y"},{"post_id":"cj43taagc004tr8syyqdva1za","tag_id":"cj43taajh00bwr8syrvnhsyn4","_id":"cj43taajj00c1r8sy1095eyfn"},{"post_id":"cj43taagd004ur8sywhd79wpu","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taajk00c4r8sym2h6spvl"},{"post_id":"cj43taagd004ur8sywhd79wpu","tag_id":"cj43taajg00bvr8syjcffpwi7","_id":"cj43taajl00c5r8sy0vze61n4"},{"post_id":"cj43taagd004ur8sywhd79wpu","tag_id":"cj43taajj00c2r8syx0c87trn","_id":"cj43taajl00c7r8sy7il57qf2"},{"post_id":"cj43taagf004zr8syvbyzkr9n","tag_id":"cj43taajj00c3r8sy9j4wbjse","_id":"cj43taajm00c8r8sy52f0uv1d"},{"post_id":"cj43taagg0050r8syimn19y6c","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taajq00cdr8syuz6xw97z"},{"post_id":"cj43taagg0050r8syimn19y6c","tag_id":"cj43taajg00bvr8syjcffpwi7","_id":"cj43taajq00cer8syihjv5q3c"},{"post_id":"cj43taagg0050r8syimn19y6c","tag_id":"cj43taajh00bwr8syrvnhsyn4","_id":"cj43taajr00cgr8syr84s4ho9"},{"post_id":"cj43taagg0050r8syimn19y6c","tag_id":"cj43taajo00cbr8sywlrvli6t","_id":"cj43taajr00chr8sytalr8sxc"},{"post_id":"cj43taagi0055r8sy0gb4jsvf","tag_id":"cj43taajj00c3r8sy9j4wbjse","_id":"cj43taajs00cjr8sypp7g3uyn"},{"post_id":"cj43taagi0055r8sy0gb4jsvf","tag_id":"cj43taajr00cfr8syy8d7rrbe","_id":"cj43taajs00ckr8sy53pb4uuc"},{"post_id":"cj43taagj0056r8sylfwtn4v3","tag_id":"cj43taajr00cir8sylrs0ngri","_id":"cj43taajt00cnr8sy58kuau4y"},{"post_id":"cj43taagj0056r8sylfwtn4v3","tag_id":"cj43taajs00clr8sydypvqnty","_id":"cj43taajt00cor8sy51yx2gkv"},{"post_id":"cj43taagm005br8syyqovc36o","tag_id":"cj43taajh00bwr8syrvnhsyn4","_id":"cj43taajw00crr8syf2s28ml0"},{"post_id":"cj43taagm005br8syyqovc36o","tag_id":"cj43taaju00cpr8syx55qd4yu","_id":"cj43taajw00csr8sy55i3lsxu"},{"post_id":"cj43taago005cr8sytlrtl9b2","tag_id":"cj43taajh00bwr8syrvnhsyn4","_id":"cj43taajy00cwr8syq24lfghi"},{"post_id":"cj43taago005cr8sytlrtl9b2","tag_id":"cj43taajw00ctr8syu13sq93t","_id":"cj43taajy00cxr8sy9zmvuntf"},{"post_id":"cj43taago005cr8sytlrtl9b2","tag_id":"cj43taajx00cur8sy7whk8sxk","_id":"cj43taajz00czr8syv5xkhm73"},{"post_id":"cj43taags005gr8sygo3d8o1y","tag_id":"cj43taajx00cvr8sye8t6a70v","_id":"cj43taajz00d0r8syo7ikaed0"},{"post_id":"cj43taah2005hr8sytdf73x1g","tag_id":"cj43taajy00cyr8syk3fdiyk3","_id":"cj43taak000d2r8syzoe51r3l"},{"post_id":"cj43taah4005lr8sydekoay6x","tag_id":"cj43taajx00cvr8sye8t6a70v","_id":"cj43taak000d4r8syvf0ahyqt"},{"post_id":"cj43taah5005nr8syyo0fttr1","tag_id":"cj43taak000d3r8syui559xgb","_id":"cj43taak900d7r8sygudz79t5"},{"post_id":"cj43taah5005nr8syyo0fttr1","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taak900d8r8sylp56w4ra"},{"post_id":"cj43taah7005sr8sy0bs20e7e","tag_id":"cj43taak600d6r8sym2jd08es","_id":"cj43taaka00dbr8sy237c0ti5"},{"post_id":"cj43taah7005sr8sy0bs20e7e","tag_id":"cj43taak900d9r8synjwzafta","_id":"cj43taaka00dcr8syuoxp6mkk"},{"post_id":"cj43taah9005tr8sy6wm3390w","tag_id":"cj43taaka00dar8syumumtqmf","_id":"cj43taakc00dfr8sy0ckkpa52"},{"post_id":"cj43taah9005tr8sy6wm3390w","tag_id":"cj43taaii009fr8syaowyawlm","_id":"cj43taakc00dgr8syme31iz8f"},{"post_id":"cj43taah9005tr8sy6wm3390w","tag_id":"cj43taakb00der8syu4qz5ycu","_id":"cj43taakc00dhr8sy9gla6dva"}],"Tag":[{"name":"hexo","_id":"cj43taa8n0004r8syr33o6tmx"},{"name":"github","_id":"cj43taa8r0005r8sy603n0mwf"},{"name":"Node.js","_id":"cj43taacb000cr8sy10nwx212"},{"name":"npm","_id":"cj43taacp000nr8syiyfh1bgf"},{"name":"ActivityMq","_id":"cj43taad1000zr8syfbdgu1fc"},{"name":"anroid","_id":"cj43taad80015r8syo4x8b2kq"},{"name":"自动填写获取到的验证码","_id":"cj43taadf001cr8sy3q5ycrhg"},{"name":"android","_id":"cj43taadk001ir8syczzgwq9u"},{"name":"legacy","_id":"cj43taads001pr8sy1lmqs84s"},{"name":"http","_id":"cj43taae1001vr8syiyijnine"},{"name":"android studio","_id":"cj43taaeb0029r8syzlxgbqs0"},{"name":"javascript","_id":"cj43taaeg002gr8syejv7n1yc"},{"name":"table","_id":"cj43taaek002nr8sy7067jtyx"},{"name":"点击事件","_id":"cj43taaeo002sr8sywgy3juhc"},{"name":"版本太旧","_id":"cj43taaf0003br8syd0ddxvy4"},{"name":"编码","_id":"cj43taafe003or8syqk51iva3"},{"name":"Elasticsearch","_id":"cj43taafp0040r8syp28qnfxd"},{"name":"Elasticsearch-head","_id":"cj43taafz004dr8syfbxr2lva"},{"name":"freeMarker","_id":"cj43taag4004ir8syfin8g679"},{"name":"onchang","_id":"cj43taagr005er8symhjr607e"},{"name":"jQuery","_id":"cj43taah7005pr8sypngd5ip4"},{"name":"bind","_id":"cj43taaha005vr8syx16w70km"},{"name":"live","_id":"cj43taahe005yr8synr4d40us"},{"name":"delegate","_id":"cj43taahg0062r8syk90iswxu"},{"name":"iframe","_id":"cj43taahj006ar8syfseesxbf"},{"name":"HashMap","_id":"cj43taahk006fr8syhbmwm2de"},{"name":"LinkHashMap","_id":"cj43taahl006kr8syjcidbat6"},{"name":"TreeMap","_id":"cj43taahm006or8syw6fj2b09"},{"name":"ThredLocal","_id":"cj43taahn006rr8sy4nbczby1"},{"name":"HttpServletRequest","_id":"cj43taahp006wr8syw6i45i9m"},{"name":"URL","_id":"cj43taahq0071r8sywvyigstq"},{"name":"decorator","_id":"cj43taahr0075r8syfnvzf7eg"},{"name":"订单号","_id":"cj43taahs007br8syflk7s4uy"},{"name":"jee","_id":"cj43taahu007fr8sy2oouozwj"},{"name":"double","_id":"cj43taahv007jr8syt7uum989"},{"name":"mybatis","_id":"cj43taahw007mr8symypq0mit"},{"name":"maven","_id":"cj43taahx007rr8syxjke7498"},{"name":"jdk","_id":"cj43taai4008br8sysrirzizo"},{"name":"mysql","_id":"cj43taai5008er8sy5tmvyqrf"},{"name":"union","_id":"cj43taai6008jr8synqlc2km2"},{"name":"union all","_id":"cj43taai7008mr8sywikuqhhf"},{"name":"spring","_id":"cj43taai8008pr8syjkhhwwqu"},{"name":"spring data jpa","_id":"cj43taai9008vr8syebqgl74t"},{"name":"拦截器","_id":"cj43taaic0095r8symhzhqseh"},{"name":"apache","_id":"cj43taaif0098r8sy5l6sur1i"},{"name":"php","_id":"cj43taaih009dr8syxlyjk7mn"},{"name":"Linux","_id":"cj43taaii009fr8syaowyawlm"},{"name":"事务","_id":"cj43taaij009kr8syikwv9nnm"},{"name":"propagation","_id":"cj43taaik009mr8syfnoc0ynx"},{"name":"注解","_id":"cj43taail009qr8syb5xopoe3"},{"name":"CentOS","_id":"cj43taaim009vr8syxd1hven1"},{"name":"vncserver","_id":"cj43taain009wr8symmjwzidd"},{"name":"下载","_id":"cj43taain009xr8sydw2dr899"},{"name":"git","_id":"cj43taair00aar8syv71zmyhk"},{"name":"区分大小写","_id":"cj43taaj600b5r8syjhswq1j7"},{"name":"nginx","_id":"cj43taaj800bcr8syzmfs0g8l"},{"name":"nohup","_id":"cj43taaje00bor8sy03dxzbxp"},{"name":"ubuntu","_id":"cj43taajg00bvr8syjcffpwi7"},{"name":"eclipse","_id":"cj43taajh00bwr8syrvnhsyn4"},{"name":"flash","_id":"cj43taajj00c2r8syx0c87trn"},{"name":"python","_id":"cj43taajj00c3r8sy9j4wbjse"},{"name":"快捷方式","_id":"cj43taajo00cbr8sywlrvli6t"},{"name":"语法","_id":"cj43taajr00cfr8syy8d7rrbe"},{"name":"RSA","_id":"cj43taajr00cir8sylrs0ngri"},{"name":"js","_id":"cj43taajs00clr8sydypvqnty"},{"name":"ermaster","_id":"cj43taaju00cpr8syx55qd4yu"},{"name":"tomcat","_id":"cj43taajw00ctr8syu13sq93t"},{"name":"内存","_id":"cj43taajx00cur8sy7whk8sxk"},{"name":"idea","_id":"cj43taajx00cvr8sye8t6a70v"},{"name":"svn","_id":"cj43taajy00cyr8syk3fdiyk3"},{"name":"oracle","_id":"cj43taak000d3r8syui559xgb"},{"name":"河内塔","_id":"cj43taak600d6r8sym2jd08es"},{"name":"汉诺塔","_id":"cj43taak900d9r8synjwzafta"},{"name":"Tomcat","_id":"cj43taaka00dar8syumumtqmf"},{"name":"防火墙","_id":"cj43taakb00der8syu4qz5ycu"}]}}